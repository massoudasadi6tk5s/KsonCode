{"version":3,"sources":["webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/ol/style/Atlas.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/layer/Heatmap.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/tilegrid/WMTS.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/style/AtlasManager.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/clipboard/dist/clipboard.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/control/OverviewMap.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/source/Source.js"],"names":["__webpack_exports__","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","module","exports","rbush","default","quickselect","__webpack_require__","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","i","length","calcBBox","node","toBBox","distBBox","children","k","p","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","n","compare","mid","stack","pop","push","prototype","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","m","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","d","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","IMAGE","VECTOR","altKeyOnly","altShiftKeysOnly","focus","always","mouseActionButton","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","primaryAction","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","target","getTargetElement","document","activeElement","button","type","SINGLECLICK","tagName","pointerEvent","Object","undefined","pointerType","isPrimary","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","_MapEventType_js__WEBPACK_IMPORTED_MODULE_0__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_dom_js__WEBPACK_IMPORTED_MODULE_4__","_events_js__WEBPACK_IMPORTED_MODULE_5__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","BaseObject","options","call","id","insertFirst","stopEvent","element","createElement","className","style","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","TOP_LEFT","setPosition","__proto__","create","constructor","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","set","setMap","mapRect","getRect","getSize","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","abs","center","getView","getCenter","centerPx","getPixelFromCoordinate","newCenterPx","animate","getCoordinateFromPixel","duration","easing","size","box","getBoundingClientRect","offsetX","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","mapSize","updateRenderedPosition","BOTTOM_RIGHT","CENTER_RIGHT","TOP_RIGHT","round","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","offsetWidth","BOTTOM_LEFT","bottom","CENTER_LEFT","offsetHeight","getOptions","getForProjection","wrapX","createXYZ","extentFromProjection","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_6__","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","tileCoord","z","getTileCoordCenter","projectionExtent","worldWidth","worldsAway","getTileCoordForCoordAndZ","createForExtent","extent","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutions","resolutionsFromExtent","origin","tileSize","opt_options","xyzOptions","getExtent","gridOptions","minZoom","maxZoom","width","maxResolution","Array","half","DEGREES","getMetersPerUnit","createCanvasContext2D","opt_width","opt_height","canvas","getContext","outerWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","_contains_js__WEBPACK_IMPORTED_MODULE_1__","flatCoordinates","ends","stride","flatCenters","flatCentersOffset","opt_dest","ii","x","x1","x2","y1","y2","y","intersections","r","rr","end","pointX","NaN","maxSegmentLength","segmentLength","isNaN","endss","interiorPoints","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","_boundingExtentXYs","xs","ys","opt_extent","value","dx","dy","coordinate","extent1","extent2","relationship","extendCoordinates","extendXY","callback","opt_this","val","resolution","rotation","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","dispatchEvent","evt","propagate","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","ADD","REMOVE","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","UNDEFINED","handleSourceChange_","changed","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","minResolution","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance","i$1","simplifiedEnds","tolerance","quantize","dx1","dy1","dx2","dy2","simplifiedEndss","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","eventType","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","bindListener","listenerObj","boundListener","bindTo","callOnce","findListener","opt_setDeleteIndex","deleteIndex","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","opt_once","key","Projection_Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_RADIUS","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","cache","add","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","transform","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","proj_transform","transformExtent","ol_extent","addCommon","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","_extent_js__WEBPACK_IMPORTED_MODULE_0__","outside","wn","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","POINT","LINE","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","isObject","_toString","toString","isPlainObject","isRegExp","isValidArrayIndex","parseFloat","floor","isFinite","isPromise","then","catch","isArray","JSON","stringify","toNumber","makeMap","str","expectsLowerCase","list","split","toLowerCase","isReservedAttribute","hasOwnProperty","hasOwn","cached","fn","hit","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","ctx","boundFn","l","arguments","_length","nativeBind","bind","toArray","ret","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeLetters","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","RegExp","parsePath","test","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","has","warn","uid","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","popTarget","VNode","tag","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","defineProperties","createEmptyVNode","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","method","original","args","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getOwnPropertyDescriptor","setter","childOb","dependArray","newVal","del","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","dedupeHooks","hooks","mergeAssets","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","name","normalizeInject","normalized","normalizeDirectives","dirs","directives","def$$1","mergeOptions","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","_props","getType","isSameType","expectedTypes","handleError","err","info","cur","$parent","errorCaptured","capture","globalHandleError","invokeWithErrorHandling","handler","logError","console","error","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","resolve","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","shift","_isVList","initProvide","_provided","initInjections","resolveInject","provideKey","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","_normalized","$stable","normalizeScopedSlot","proxyNormalSlot","proxy","renderList","iterator","next","done","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","resolveScopedSlots","hasDynamicKeys","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","needNormalization","injections","scopedSlots","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","_isMounted","callHook","queueActivatedComponent","activateChildComponent","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","cid","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","pre","applyNS","registerDeepBindings","force","class","initRender","_vnode","parentVnode","_renderChildren","parentData","_parentListeners","currentRenderingInstance","renderMixin","Vue","$nextTick","_render","ref","ensureCtor","comp","base","__esModule","toStringTag","factory","errorComp","resolved","loading","loadingComp","owner","owners","sync","forceRender","renderCompleted","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","updateComponentListeners","$on","remove$1","$off","_target","onceHandler","oldListeners","eventsMixin","hookRE","$once","cbs","$emit","setActiveInstance","prevActiveInstance","initLifecycle","$children","$refs","_watcher","_inactive","_directInactive","_isBeingDestroyed","lifecycleMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","teardown","_watchers","_data","mountComponent","el","updateComponent","Watcher","before","renderChildren","hasDynamicScopedSlot","needsForceUpdate","$attrs","$listeners","propKeys","_propKeys","isInInactiveTree","direct","handlers","queue","activatedChildren","waiting","flushing","resetSchedulerState","currentFlushTimestamp","getNow","now","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueWatcher","createEvent","timeStamp","uid$2","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","uid$3","initMixin","_init","_uid","initInternalComponent","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","builtInComponents","initGlobalAPI","configDef","util","defineReactive","delete","observable","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","multiple","setAttribute","createElementNS","namespace","createComment","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","svgContainer","events","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","pos","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","moved","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","platformComponents","_dom_js__WEBPACK_IMPORTED_MODULE_0__","Atlas","space","space_","emptyBlocks_","entries_","context_","canvas_","renderCallback","block","entry","image","split_","newBlock1","newBlock2","deltaWidth","deltaHeight","updateBlocks_","opt_tileCoord","getKeyZXY","getKey","fromKey","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","_TileImage_js__WEBPACK_IMPORTED_MODULE_0__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_1__","XYZ","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","attributionsCollapsible","hasArea","scale","ratio","opt_size","toSize","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","Observable","EventTarget","revision_","getRevision","un","_color_js__WEBPACK_IMPORTED_MODULE_0__","_colorlike_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","_ImageState_js__WEBPACK_IMPORTED_MODULE_4__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_5__","_Image_js__WEBPACK_IMPORTED_MODULE_6__","RegularShape","ImageStyle","rotateWithView","opacity","checksums_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","getRotation","getRotateWithView","setOpacity","getOpacity","setScale","getScale","getAnchor","getHitDetectionImage","pixelRatio","getImage","getImageSize","getHitDetectionImageSize","getImageState","LOADED","getOrigin","listenImageChange","thisArg","unlistenImageChange","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","hitImage","angle0","radiusC","setTransform","translate","beginPath","arc","lineTo","color","fillStyle","lineWidth","setLineDash","closePath","strokeChecksum","fillChecksum","recalculate","checksum","assign","getValues","var_sources","TypeError","object","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","map_","listenerKeys","setTarget","getElementById","Kinetic","decay","minVelocity","decay_","minVelocity_","delay_","initialVelocity_","begin","firstIndex","atan2","getDistance","ol_Kinetic","DoubleClickZoom","Interaction","handleEvent","DoubleClickZoom_handleEvent","delta_","duration_","interaction_Interaction","MapBrowserEventType","browserEvent","anchor","view","preventDefault","interaction_DoubleClickZoom","DragPan_DragPan","PointerInteraction","DragPan","stopDown","functions","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","events_condition","noKinetic_","handleDragEvent","setHint","ViewHint","INTERACTING","targetPointers","centroid","Pointer","getResolution","constrainCenter","setCenter","handleUpEvent","distance","centerpx","dest","handleDownEvent","getAnimating","viewState","interaction_DragPan","DragRotate_DragRotate","DragRotate","lastAngle_","getConstraints","rotationconstraint","theta","interaction_DragRotate","Box_RenderBox","RenderBox","geometry_","element_","startPixel_","endPixel_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","setCoordinates","Polygon","getGeometry","ol_Disposable","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","Event","DragBox_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","interaction_DragBox","DragZoom_DragZoom","DragZoom","out_","out","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","constrainResolution","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan_KeyboardPan","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","EventType","keyEvent","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom_KeyboardZoom","KeyboardZoom","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom_MouseWheelZoom","MouseWheelZoom","timeout_","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","clearTimeout","getMinResolution","getMaxResolution","rebound","calculateCenterZoom","setResolution","timeLeft","handleWheelZoom_","cancelAnimations","maxDelta","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","clientY","clientX","viewportPosition","getViewport","handlingDownUpSequence","interaction_PinchRotate","PinchZoom_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","direction","interaction_PinchZoom","defaults","interactions","Collection","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","colorString","expire","iconImage","setSize","maxCacheSize","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","RENDER_ORDER","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","handleMoveEvent","trackedPointers_","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","pointerId","pointerEvents","pan","rotate","rotateWithoutConstraints","zoom","zoomByDelta","zoomWithoutConstraints","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","setActive","getActive","ACTIVE","opt_duration","currentCenter","opt_anchor","constrainRotation","currentRotation","opt_direction","currentResolution","getResolutions","CENTER","RESOLUTION","ROTATION","_Vector_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_6__","_style_Icon_js__WEBPACK_IMPORTED_MODULE_7__","_style_Style_js__WEBPACK_IMPORTED_MODULE_8__","BLUR","GRADIENT","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","setRadius","handleStyleChanged_","weightFunction","feature","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","createGradient","getImageData","view8","alpha","putImageData","colors","createLinearGradient","step","addColorStop","fillRect","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Tile_TileLayer","TileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","LayerType","TILE","getPreload","getUseInterimTilesOnError","layer_Layer","ANIMATING","_util_js__WEBPACK_IMPORTED_MODULE_0__","rbush__WEBPACK_IMPORTED_MODULE_1__","rbush__WEBPACK_IMPORTED_MODULE_1___default","RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","setProperties","getProperties","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","linearRingsAreOriented","orientLinearRings","reverse","orientLinearRingsArray","_MapEvent_js__WEBPACK_IMPORTED_MODULE_0__","MapBrowserEvent","MapEvent","opt_dragging","opt_frameState","getEventPixel","dragging","stopPropagation","LRUCache","opt_highWaterMark","highWaterMark","count_","oldest_","newest_","canExpireCache","getCount","containsKey","f","value_","key_","newer","older","getKeys","peekLast","peekLastKey","peekFirstKey","prune","XY","XYM","XYZM","_obj_js__WEBPACK_IMPORTED_MODULE_4__","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","state_","state","layer","sourceState","getVisible","setMaxResolution","setMinResolution","setZIndex","zindex","TRUE","FALSE","VOID","FormatType","ARRAY_BUFFER","TEXT","XML","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","features","dataProjection","sourceOrTile","addFeatures","loadingstrategy_all","VectorSourceEvent","opt_feature","Vector_VectorSource","Source","VectorSource","State","READY","loader_","format_","overlaps_","overlaps","url_","loader","asserts","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","length$2","modifyingCollection","REMOVEFEATURE","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","ol_obj","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","setLoader","source_Source","MOVESTART","MOVEEND","lineStringLength","LinearRing_LinearRing","SimpleGeometry","LinearRing","opt_layout","maxDelta_","maxDeltaRevision_","setFlatCoordinates","layout","closest","flat_area","getCoordinates","inflate","getSimplifiedGeometryInternal","simplify","GeometryLayout","GeometryType","LINEAR_RING","setLayout","deflate","geom_SimpleGeometry","geom_LinearRing","fromExtent","fromCircle","makeRegular","Polygon_Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getFlatCoordinates","getOrientedFlatCoordinates","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","POLYGON","intersectsextent","circle","opt_sides","opt_angle","sides","getStride","getLayout","arrayLength","polygon","startAngle","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","rgb","fromString","MAX_CACHE_SIZE","fromStringInternal_","g","exec","hasAlpha","substr","POINTER_ID","POINTER_TYPE","prepareEvent","_EventSource_js__WEBPACK_IMPORTED_MODULE_0__","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","t","cloneEvent","pd","VECTOR_TILE","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","pointer_MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","pointer_NativeSource","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","pointer_PointerEvent","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","outTarget","over","outEvent","cleanUpPointer_","lt","pointer_TouchSource","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserPointerEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","dispose","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","events_EventType","handleTileChange","getTilesLoading","TileState","EMPTY","ABORT","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","IDLE","ol_TileQueue","LAYERS","Group_LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","ol_Object","handleLayersChanged_","unique","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","ownLayerState","Base","Group","PluggableMap_PluggableMap","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","cancelAnimationFrame","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","getRenderer","tileSourceKey","tileCenter","tileResolution","wantedTiles","interactionsArray","cont","handlePostRender","tileQueue","hints","viewHints","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","dom","handleViewPropertyChanged_","layerGroup","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","previousFrameState","ol_size","getHints","skippedFeatureUids","usedTiles","renderFrame","moveStart","MapEventType","idle","setLayerGroup","setView","skipFeature","computedStyle","unskipFeature","View","ol_PluggableMap","Attribution_Attribution","Attribution","Attribution_render","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","jj","updateElement_","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","control_Control","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","callResetNorth_","resetNorth","autoHide_","autoHide","rotation_","resetNorth_","setRotation","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","control_Zoom","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ImageBase_ImageBase","ImageBase","getPixelRatio","ol_ImageBase","ImageCanvas_ImageCanvas","ImageCanvas","opt_loader","ImageState","error_","getError","handleLoad_","LOADING","ol_ImageCanvas","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","render_Event","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate_CanvasImmediateRenderer","VectorContext","CanvasImmediateRenderer","viewRotation","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","globalAlpha","centerX","centerY","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","getText","LINE_STRING","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","render_canvas","font","textBaseline","fillStyleColor","colorlike","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","numLayers","layerRenderer","getLayerRenderer","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","renderer_Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","composeEvent","sx","sy","clearRect","save","prepareFrame","composeFrame","restore","forEachLayerAtCoordinate","ctor","canvas_Map","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","opt_tileCallback","getTile","useTile","ol_Observable","renderer_Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","canvas_Layer","IntermediateCanvas_IntermediateCanvasRenderer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","ol_coordinate","imageData","IntermediateCanvas","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","common","getProjection","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","TileRange","zDirection","isDrawableTile_","tileState","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","w","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","getTileImage","getOpaque","alphaChanged","endTransition","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","maxAngle","numChars","previousAngle","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","Replay_tmpExtent","tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","anchorX","anchorY","declutterGroup","originX","originY","snapToPixel","padding","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","coords","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textReplay","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","Replay","ImageReplay_CanvasImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","ImageReplay","LineStringReplay_CanvasLineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextReplay_CanvasTextReplay","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","TextPlacement","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","lines","numLines","widths","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","TextReplay","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","arraySize","replayDeclutter","zz","replayData","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","MultiPoint","renderMultiPointGeometry","MultiLineString","renderMultiLineStringGeometry","MultiPolygon","renderMultiPolygonGeometry","GeometryCollection","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","replayGroup","circleReplay","renderFeature","renderFeatureInternal","simplifiedGeometry","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageReplay","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","styleFunction","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","proj","setProjection","TILE_PIXELS","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","devicePixelRatio","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","toFunction","createDefaultStyle","createEditingStyle","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_Circle_js__WEBPACK_IMPORTED_MODULE_2__","_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","white","blue","IconAnchorUnits","FRACTION","PIXELS","IconOrigin","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","color_","iconImage_","IconImage","offset_","offsetOrigin_","offsetOrigin","getSrc","setAnchor","iconImageSize","createFromCapabilitiesMatrixSet","_proj_js__WEBPACK_IMPORTED_MODULE_1__","_TileGrid_js__WEBPACK_IMPORTED_MODULE_2__","WMTSTileGrid","TileGrid","origins","tileSizes","sizes","matrixIds_","matrixIds","getMatrixId","getMatrixIds","matrixSet","opt_matrixLimits","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","switchOriginXY","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","_events_Event_js__WEBPACK_IMPORTED_MODULE_0__","_common_js__WEBPACK_IMPORTED_MODULE_0__","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_3__","_extent_js__WEBPACK_IMPORTED_MODULE_4__","_math_js__WEBPACK_IMPORTED_MODULE_5__","_size_js__WEBPACK_IMPORTED_MODULE_6__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","tmpTileCoord","zoomFactor","resolutions_","zoomFactor_","origins_","tileSizes_","tileSize_","fullTileRanges_","tmpSize_","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getLength","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","extrapolate","getCoordinateAt","fraction","clamp","cosh","squaredSegmentDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","mat","maxRow","maxEl","absValue","coef","angleInRadians","angleInDegrees","_Fill_js__WEBPACK_IMPORTED_MODULE_0__","_TextPlacement_js__WEBPACK_IMPORTED_MODULE_1__","DEFAULT_FILL_COLOR","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","AssertionError","message","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","MAX_TEXTURE_SIZE","CONTEXT_IDS","opt_attributes","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","isError","routerView","route","$route","_routerViewCache","depth","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","encodeURIComponent","decode","decodeURIComponent","resolveQuery","extraQuery","_parseQuery","parsedQuery","parse","parseQuery","param","stringifyQuery","val2","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","_Vue","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","defaultPrevented","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","segment","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","escaped","prefix","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","attachKeys","re","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","regexp","stringToRegexp","strict","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","replaceState","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","getElementPosition","docEl","documentElement","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","Time","_key","genKey","toFixed","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","msg","flatten","History","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","supportsScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","decodeURI","pathname","HashHistory","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","disable","none","createSnapToN","createSnapToZero","opt_tolerance","Tile_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile_ImageTile","ImageTile","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ol_ImageTile","TileCache_TileCache","TileCache","pruneExceptNewestZ","tilecoord","structs_LRUCache","ol_TileCache","calculateSourceResolution","sourceProj","targetProj","targetCenter","targetResolution","sourceCenter","ol_proj","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","reproj_Tile","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","ol_tilegrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","refresh","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","tileurlfunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","source_UrlTile","TileImage_TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","isRing","opt_tmpPoint","tmpPoint","Geometry_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","getClosestPoint","opt_closestPoint","computeExtent","opt_sy","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","transformGeom2D","SimpleGeometry_SimpleGeometry","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","simpleGeometry","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","startCharCode","stopCharCode","fromCharCode","stop","_Control_js__WEBPACK_IMPORTED_MODULE_2__","_proj_js__WEBPACK_IMPORTED_MODULE_6__","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","html","binarySearch","haystack","needle","opt_comparator","cmp","comparator","numberSafeCompareFunction","low","high","includes","linearFindNearest","reverseSubArray","extension","find","arr1","arr2","len1","stableSort","compareFnc","findIndex","idx","isSorted","opt_func","opt_strict","currentVal","createExtent","createSnapToResolutions","power","createSnapToPower","opt_maxLevel","oldLevel","newLevel","DEFAULT_MIN_ZOOM","View_View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","setZoom","animationCallback","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","getInteracting","more","seriesComplete","elapsed","progress","calculateCenterRotate","getSizeFromViewport_","metrics","opt_delta","opt_hints","getZoomForResolution","setMaxZoom","setMinZoom","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerOn","hint","returnValue","defaultMaxZoom","defaultZoomFactor","defaultMaxResolution","defaultMinResolution","enableRotation","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","_webgl_js__WEBPACK_IMPORTED_MODULE_0__","_functions_js__WEBPACK_IMPORTED_MODULE_1__","_Atlas_js__WEBPACK_IMPORTED_MODULE_2__","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","closestOnSegment","along","coordinate1","coordinate2","coord1","coord2","squaredDistanceToSegment","reset","setFromArray","invert","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","a2","b2","d2","e2","det","determinant","getSnapToPixel","setRotateWithView","setSnapToPixel","_events_Target_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","_IconImageCache_js__WEBPACK_IMPORTED_MODULE_5__","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","imgData","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","opt_endss","MultiLineString_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","flat_interpolate","getLineString","getLineStrings","midpoints","midpoint","geom_MultiLineString","MultiPoint_MultiPoint","appendPoint","multiPoint","getPoint","geom_MultiPoint","linearRingss","MultiPolygon_MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","geom_MultiPolygon","DrawEventType","DRAWSTART","DRAWEND","DrawEvent","Draw_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","setCenterAndRadius","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointY","cumulativeLengths","lo","hi","m0","m1","root","installedModules","moduleId","_typeof","_createClass","descriptor","protoProps","staticProps","_clipboardAction","_clipboardAction2","_interopRequireDefault","_tinyEmitter","_tinyEmitter2","_goodListener","_goodListener2","_classCallCheck","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","Clipboard","_Emitter","_this","getPrototypeOf","resolveOptions","listenClick","action","defaultAction","defaultTarget","defaultText","_this2","onClick","delegateTarget","clipboardAction","emitter","getAttributeValue","actions","support","queryCommandSupported","attribute","_select","_select2","ClipboardAction","initSelection","selectedText","selectFake","selectTarget","isRTL","removeFake","fakeHandlerCallback","fakeHandler","fakeElem","fontSize","border","yPosition","scrollTop","copyText","succeeded","execCommand","handleResult","clearSelection","getSelection","removeAllRanges","_action","select","nodeName","isReadOnly","setSelectionRange","selection","createRange","selectNodeContents","addRange","E","off","evtArr","evts","liveEvents","delegate","string","listenNode","nodeList","listenNodeList","listenSelector","_delegate","useCapture","listenerFn","querySelectorAll","DOCUMENT_NODE_TYPE","Element","proto","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","_Feature_js__WEBPACK_IMPORTED_MODULE_3__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_4__","_array_js__WEBPACK_IMPORTED_MODULE_5__","_coordinate_js__WEBPACK_IMPORTED_MODULE_6__","_events_js__WEBPACK_IMPORTED_MODULE_7__","_events_Event_js__WEBPACK_IMPORTED_MODULE_8__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_9__","_events_condition_js__WEBPACK_IMPORTED_MODULE_10__","_extent_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_13__","_Pointer_js__WEBPACK_IMPORTED_MODULE_14__","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_15__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_16__","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_17__","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_18__","_style_Style_js__WEBPACK_IMPORTED_MODULE_19__","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segmentData","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","removePoint","vertex","dragSegment","setGeometryCoordinates_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","sortByDistance","pointDistanceToSegmentDataSquared","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","fontFamily","_RegularShape_js__WEBPACK_IMPORTED_MODULE_0__","CircleStyle","_XYZ_js__WEBPACK_IMPORTED_MODULE_0__","ATTRIBUTION","OSM","WMTSRequestEncoding","KVP","REST","appendParams","uri","keyParams","qs","WMTS_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","source_TileImage","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","disposed_","containsTileRange","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","fontWeight","available","referenceFont","measureText","check","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_0__","getChangeEventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","ObjectEvent","opt_values","values_","opt_silent","unset","changeEventTypeCache","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","LENGTH","CollectionEvent","opt_element","unique_","array_","assertUnique_","updateLength_","insertAt","elem","removeAt","setAt","opt_except","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","_Map_js__WEBPACK_IMPORTED_MODULE_1__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_2__","_MapProperty_js__WEBPACK_IMPORTED_MODULE_3__","_Object_js__WEBPACK_IMPORTED_MODULE_4__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_5__","_Overlay_js__WEBPACK_IMPORTED_MODULE_6__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_7__","_ViewProperty_js__WEBPACK_IMPORTED_MODULE_8__","_Control_js__WEBPACK_IMPORTED_MODULE_9__","_coordinate_js__WEBPACK_IMPORTED_MODULE_10__","_css_js__WEBPACK_IMPORTED_MODULE_11__","_dom_js__WEBPACK_IMPORTED_MODULE_12__","_events_js__WEBPACK_IMPORTED_MODULE_13__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_14__","_extent_js__WEBPACK_IMPORTED_MODULE_15__","MAX_RATIO","MIN_RATIO","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","computeDesiredMousePosition","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","validateExtent_","ovmapSize","ovview","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","steps","LN2","updateBox_","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","asColorLike","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","getRadiusSquared_","circleExtent","FEET","USFEET","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","setAttributions","attributionLike"],"mappings":"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","file":"js/chunk-vendors.0b9f6cc4.js","sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/*!\n * Vue.js v2.6.6\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeLetters = 'a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + unicodeLetters + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + unicodeLetters + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res)) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    slots.$stable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    Object.keys(normalSlots).length === 0\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key in slots) {\n      if (slots[key] && key[0] !== '$') {\n        res[key] = normalizeScopedSlot(normalSlots, key, slots[key]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$1 in normalSlots) {\n    if (!(key$1 in res)) {\n      res[key$1] = proxyNormalSlot(normalSlots, key$1);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', slots ? !!slots.$stable : true);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && res.length === 0\n      ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        if (!(key in hash) && !(camelizedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + camelizedKey)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  hasDynamicKeys,\n  res\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, hasDynamicKeys, res);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  var owner = currentRenderingInstance;\n  if (isDef(factory.owners)) {\n    // already pending\n    factory.owners.push(owner);\n  } else {\n    var owners = factory.owners = [owner];\n    var sync = true;\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var hasDynamicScopedSlot = !!(\n    (parentVnode.data.scopedSlots && !parentVnode.data.scopedSlots.$stable) ||\n    (vm.$scopedSlots !== emptyObject && !vm.$scopedSlots.$stable)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\nif (inBrowser && getNow() > document.createEvent('Event').timeStamp) {\n  // if the low-res timestamp which is bigger than the event timestamp\n  // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\n  // and we need to use the hi-res version for event listeners as well.\n  getNow = function () { return performance.now(); };\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.6';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // #9462 bail for iOS 9 bug: event.timeStamp is 0 after history.pushState\n        e.timeStamp === 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    // skip the update if old and new VDOM state is the same.\n    // the only exception is `value` where the DOM value may be temporarily\n    // out of sync with VDOM state due to focus, composition and modifiers.\n    // This also covers #4521 by skipping the unnecesarry `checked` update.\n    if (key !== 'value' && cur === oldProps[key]) {\n      continue\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/*!\n  * vue-router v3.0.2\n  * (c) 2018 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : decodeURI(href.slice(index + 1))\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.2';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/*!\n * clipboard.js v2.0.4\n * https://zenorocha.github.io/clipboard.js\n * \n * Licensed MIT © Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _clipboardAction = __webpack_require__(1);\n\nvar _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n\nvar _tinyEmitter = __webpack_require__(3);\n\nvar _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\nvar _goodListener = __webpack_require__(4);\n\nvar _goodListener2 = _interopRequireDefault(_goodListener);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\nvar Clipboard = function (_Emitter) {\n    _inherits(Clipboard, _Emitter);\n\n    /**\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     * @param {Object} options\n     */\n    function Clipboard(trigger, options) {\n        _classCallCheck(this, Clipboard);\n\n        var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n        _this.resolveOptions(options);\n        _this.listenClick(trigger);\n        return _this;\n    }\n\n    /**\n     * Defines if attributes would be resolved using internal setter functions\n     * or custom functions that were passed in the constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(Clipboard, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n            this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n            this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n            this.container = _typeof(options.container) === 'object' ? options.container : document.body;\n        }\n\n        /**\n         * Adds a click event listener to the passed trigger.\n         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n         */\n\n    }, {\n        key: 'listenClick',\n        value: function listenClick(trigger) {\n            var _this2 = this;\n\n            this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                return _this2.onClick(e);\n            });\n        }\n\n        /**\n         * Defines a new `ClipboardAction` on each click event.\n         * @param {Event} e\n         */\n\n    }, {\n        key: 'onClick',\n        value: function onClick(e) {\n            var trigger = e.delegateTarget || e.currentTarget;\n\n            if (this.clipboardAction) {\n                this.clipboardAction = null;\n            }\n\n            this.clipboardAction = new _clipboardAction2.default({\n                action: this.action(trigger),\n                target: this.target(trigger),\n                text: this.text(trigger),\n                container: this.container,\n                trigger: trigger,\n                emitter: this\n            });\n        }\n\n        /**\n         * Default `action` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultAction',\n        value: function defaultAction(trigger) {\n            return getAttributeValue('action', trigger);\n        }\n\n        /**\n         * Default `target` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultTarget',\n        value: function defaultTarget(trigger) {\n            var selector = getAttributeValue('target', trigger);\n\n            if (selector) {\n                return document.querySelector(selector);\n            }\n        }\n\n        /**\n         * Returns the support of the given action, or all actions if no action is\n         * given.\n         * @param {String} [action]\n         */\n\n    }, {\n        key: 'defaultText',\n\n\n        /**\n         * Default `text` lookup function.\n         * @param {Element} trigger\n         */\n        value: function defaultText(trigger) {\n            return getAttributeValue('text', trigger);\n        }\n\n        /**\n         * Destroy lifecycle.\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.listener.destroy();\n\n            if (this.clipboardAction) {\n                this.clipboardAction.destroy();\n                this.clipboardAction = null;\n            }\n        }\n    }], [{\n        key: 'isSupported',\n        value: function isSupported() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n\n            var actions = typeof action === 'string' ? [action] : action;\n            var support = !!document.queryCommandSupported;\n\n            actions.forEach(function (action) {\n                support = support && !!document.queryCommandSupported(action);\n            });\n\n            return support;\n        }\n    }]);\n\n    return Clipboard;\n}(_tinyEmitter2.default);\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\n\nfunction getAttributeValue(suffix, element) {\n    var attribute = 'data-clipboard-' + suffix;\n\n    if (!element.hasAttribute(attribute)) {\n        return;\n    }\n\n    return element.getAttribute(attribute);\n}\n\nmodule.exports = Clipboard;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _select = __webpack_require__(2);\n\nvar _select2 = _interopRequireDefault(_select);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\nvar ClipboardAction = function () {\n    /**\n     * @param {Object} options\n     */\n    function ClipboardAction(options) {\n        _classCallCheck(this, ClipboardAction);\n\n        this.resolveOptions(options);\n        this.initSelection();\n    }\n\n    /**\n     * Defines base properties passed from constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(ClipboardAction, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = options.action;\n            this.container = options.container;\n            this.emitter = options.emitter;\n            this.target = options.target;\n            this.text = options.text;\n            this.trigger = options.trigger;\n\n            this.selectedText = '';\n        }\n\n        /**\n         * Decides which selection strategy is going to be applied based\n         * on the existence of `text` and `target` properties.\n         */\n\n    }, {\n        key: 'initSelection',\n        value: function initSelection() {\n            if (this.text) {\n                this.selectFake();\n            } else if (this.target) {\n                this.selectTarget();\n            }\n        }\n\n        /**\n         * Creates a fake textarea element, sets its value from `text` property,\n         * and makes a selection on it.\n         */\n\n    }, {\n        key: 'selectFake',\n        value: function selectFake() {\n            var _this = this;\n\n            var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n            this.removeFake();\n\n            this.fakeHandlerCallback = function () {\n                return _this.removeFake();\n            };\n            this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n            this.fakeElem = document.createElement('textarea');\n            // Prevent zooming on iOS\n            this.fakeElem.style.fontSize = '12pt';\n            // Reset box model\n            this.fakeElem.style.border = '0';\n            this.fakeElem.style.padding = '0';\n            this.fakeElem.style.margin = '0';\n            // Move element out of screen horizontally\n            this.fakeElem.style.position = 'absolute';\n            this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n            // Move element to the same position vertically\n            var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n            this.fakeElem.style.top = yPosition + 'px';\n\n            this.fakeElem.setAttribute('readonly', '');\n            this.fakeElem.value = this.text;\n\n            this.container.appendChild(this.fakeElem);\n\n            this.selectedText = (0, _select2.default)(this.fakeElem);\n            this.copyText();\n        }\n\n        /**\n         * Only removes the fake element after another click event, that way\n         * a user can hit `Ctrl+C` to copy because selection still exists.\n         */\n\n    }, {\n        key: 'removeFake',\n        value: function removeFake() {\n            if (this.fakeHandler) {\n                this.container.removeEventListener('click', this.fakeHandlerCallback);\n                this.fakeHandler = null;\n                this.fakeHandlerCallback = null;\n            }\n\n            if (this.fakeElem) {\n                this.container.removeChild(this.fakeElem);\n                this.fakeElem = null;\n            }\n        }\n\n        /**\n         * Selects the content from element passed on `target` property.\n         */\n\n    }, {\n        key: 'selectTarget',\n        value: function selectTarget() {\n            this.selectedText = (0, _select2.default)(this.target);\n            this.copyText();\n        }\n\n        /**\n         * Executes the copy operation based on the current selection.\n         */\n\n    }, {\n        key: 'copyText',\n        value: function copyText() {\n            var succeeded = void 0;\n\n            try {\n                succeeded = document.execCommand(this.action);\n            } catch (err) {\n                succeeded = false;\n            }\n\n            this.handleResult(succeeded);\n        }\n\n        /**\n         * Fires an event based on the copy operation result.\n         * @param {Boolean} succeeded\n         */\n\n    }, {\n        key: 'handleResult',\n        value: function handleResult(succeeded) {\n            this.emitter.emit(succeeded ? 'success' : 'error', {\n                action: this.action,\n                text: this.selectedText,\n                trigger: this.trigger,\n                clearSelection: this.clearSelection.bind(this)\n            });\n        }\n\n        /**\n         * Moves focus away from `target` and back to the trigger, removes current selection.\n         */\n\n    }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n            if (this.trigger) {\n                this.trigger.focus();\n            }\n\n            window.getSelection().removeAllRanges();\n        }\n\n        /**\n         * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n         * @param {String} action\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\n         * Destroy lifecycle.\n         */\n        value: function destroy() {\n            this.removeFake();\n        }\n    }, {\n        key: 'action',\n        set: function set() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n\n            this._action = action;\n\n            if (this._action !== 'copy' && this._action !== 'cut') {\n                throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n            }\n        }\n\n        /**\n         * Gets the `action` property.\n         * @return {String}\n         */\n        ,\n        get: function get() {\n            return this._action;\n        }\n\n        /**\n         * Sets the `target` property using an element\n         * that will be have its content copied.\n         * @param {Element} target\n         */\n\n    }, {\n        key: 'target',\n        set: function set(target) {\n            if (target !== undefined) {\n                if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                    if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                    }\n\n                    if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                    }\n\n                    this._target = target;\n                } else {\n                    throw new Error('Invalid \"target\" value, use a valid Element');\n                }\n            }\n        }\n\n        /**\n         * Gets the `target` property.\n         * @return {String|HTMLElement}\n         */\n        ,\n        get: function get() {\n            return this._target;\n        }\n    }]);\n\n    return ClipboardAction;\n}();\n\nmodule.exports = ClipboardAction;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar is = __webpack_require__(5);\nvar delegate = __webpack_require__(6);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar closest = __webpack_require__(7);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ })\n/******/ ]);\n});","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = /*@__PURE__*/(function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /*@__PURE__*/(function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    var vertex = evt.coordinate;\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var depth = segmentData.depth;\n      var geometry = segmentData.geometry;\n      var coordinates = (void 0);\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var insertVertices = [];\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      var vertex = geometry.getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.feature);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}
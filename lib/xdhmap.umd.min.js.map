{"version":3,"sources":["webpack://xdhmap/webpack/universalModuleDefinition","webpack://xdhmap/webpack/bootstrap","webpack://xdhmap/./node_modules/rbush/index.js","webpack://xdhmap/./node_modules/quickselect/quickselect.js","webpack://xdhmap/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://xdhmap/./packages/map/src/map.vue?414a","webpack://xdhmap/./node_modules/ol/util.js","webpack://xdhmap/./node_modules/ol/AssertionError.js","webpack://xdhmap/./node_modules/ol/CollectionEventType.js","webpack://xdhmap/./node_modules/ol/ObjectEventType.js","webpack://xdhmap/./node_modules/ol/obj.js","webpack://xdhmap/./node_modules/ol/events.js","webpack://xdhmap/./node_modules/ol/Disposable.js","webpack://xdhmap/./node_modules/ol/functions.js","webpack://xdhmap/./node_modules/ol/events/Event.js","webpack://xdhmap/./node_modules/ol/events/Target.js","webpack://xdhmap/./node_modules/ol/events/EventType.js","webpack://xdhmap/./node_modules/ol/Observable.js","webpack://xdhmap/./node_modules/ol/Object.js","webpack://xdhmap/./node_modules/ol/Collection.js","webpack://xdhmap/./node_modules/ol/MapEvent.js","webpack://xdhmap/./node_modules/ol/MapBrowserEvent.js","webpack://xdhmap/./node_modules/ol/has.js","webpack://xdhmap/./node_modules/ol/MapBrowserEventType.js","webpack://xdhmap/./node_modules/ol/MapBrowserPointerEvent.js","webpack://xdhmap/./node_modules/ol/pointer/EventType.js","webpack://xdhmap/./node_modules/ol/pointer/EventSource.js","webpack://xdhmap/./node_modules/ol/pointer/MouseSource.js","webpack://xdhmap/./node_modules/ol/pointer/MsSource.js","webpack://xdhmap/./node_modules/ol/pointer/NativeSource.js","webpack://xdhmap/./node_modules/ol/pointer/PointerEvent.js","webpack://xdhmap/./node_modules/ol/array.js","webpack://xdhmap/./node_modules/ol/pointer/TouchSource.js","webpack://xdhmap/./node_modules/ol/pointer/PointerEventHandler.js","webpack://xdhmap/./node_modules/ol/MapBrowserEventHandler.js","webpack://xdhmap/./node_modules/ol/MapEventType.js","webpack://xdhmap/./node_modules/ol/MapProperty.js","webpack://xdhmap/./node_modules/ol/render/EventType.js","webpack://xdhmap/./node_modules/ol/TileState.js","webpack://xdhmap/./node_modules/ol/asserts.js","webpack://xdhmap/./node_modules/ol/structs/PriorityQueue.js","webpack://xdhmap/./node_modules/ol/TileQueue.js","webpack://xdhmap/./node_modules/ol/tilegrid/common.js","webpack://xdhmap/./node_modules/ol/math.js","webpack://xdhmap/./node_modules/ol/centerconstraint.js","webpack://xdhmap/./node_modules/ol/resolutionconstraint.js","webpack://xdhmap/./node_modules/ol/rotationconstraint.js","webpack://xdhmap/./node_modules/ol/ViewHint.js","webpack://xdhmap/./node_modules/ol/ViewProperty.js","webpack://xdhmap/./node_modules/ol/coordinate.js","webpack://xdhmap/./node_modules/ol/easing.js","webpack://xdhmap/./node_modules/ol/extent/Corner.js","webpack://xdhmap/./node_modules/ol/extent/Relationship.js","webpack://xdhmap/./node_modules/ol/extent.js","webpack://xdhmap/./node_modules/ol/geom/GeometryType.js","webpack://xdhmap/./node_modules/ol/geom/GeometryLayout.js","webpack://xdhmap/./node_modules/ol/geom/flat/transform.js","webpack://xdhmap/./node_modules/ol/sphere.js","webpack://xdhmap/./node_modules/ol/proj/Units.js","webpack://xdhmap/./node_modules/ol/proj/Projection.js","webpack://xdhmap/./node_modules/ol/proj/epsg3857.js","webpack://xdhmap/./node_modules/ol/proj/epsg4326.js","webpack://xdhmap/./node_modules/ol/proj/projections.js","webpack://xdhmap/./node_modules/ol/proj/transforms.js","webpack://xdhmap/./node_modules/ol/proj.js","webpack://xdhmap/./node_modules/ol/transform.js","webpack://xdhmap/./node_modules/ol/geom/Geometry.js","webpack://xdhmap/./node_modules/ol/geom/SimpleGeometry.js","webpack://xdhmap/./node_modules/ol/geom/flat/area.js","webpack://xdhmap/./node_modules/ol/geom/flat/closest.js","webpack://xdhmap/./node_modules/ol/geom/flat/deflate.js","webpack://xdhmap/./node_modules/ol/geom/flat/inflate.js","webpack://xdhmap/./node_modules/ol/geom/flat/simplify.js","webpack://xdhmap/./node_modules/ol/geom/LinearRing.js","webpack://xdhmap/./node_modules/ol/geom/Point.js","webpack://xdhmap/./node_modules/ol/geom/flat/contains.js","webpack://xdhmap/./node_modules/ol/geom/flat/interiorpoint.js","webpack://xdhmap/./node_modules/ol/geom/flat/segments.js","webpack://xdhmap/./node_modules/ol/geom/flat/intersectsextent.js","webpack://xdhmap/./node_modules/ol/geom/flat/reverse.js","webpack://xdhmap/./node_modules/ol/geom/flat/orient.js","webpack://xdhmap/./node_modules/ol/geom/Polygon.js","webpack://xdhmap/./node_modules/ol/View.js","webpack://xdhmap/./node_modules/ol/dom.js","webpack://xdhmap/./node_modules/ol/layer/Property.js","webpack://xdhmap/./node_modules/ol/layer/Base.js","webpack://xdhmap/./node_modules/ol/source/State.js","webpack://xdhmap/./node_modules/ol/layer/Group.js","webpack://xdhmap/./node_modules/ol/size.js","webpack://xdhmap/./node_modules/ol/PluggableMap.js","webpack://xdhmap/./node_modules/ol/control/Control.js","webpack://xdhmap/./node_modules/ol/css.js","webpack://xdhmap/./node_modules/ol/layer/Layer.js","webpack://xdhmap/./node_modules/ol/control/Attribution.js","webpack://xdhmap/./node_modules/ol/control/Rotate.js","webpack://xdhmap/./node_modules/ol/control/Zoom.js","webpack://xdhmap/./node_modules/ol/control/util.js","webpack://xdhmap/./node_modules/ol/Kinetic.js","webpack://xdhmap/./node_modules/ol/interaction/Property.js","webpack://xdhmap/./node_modules/ol/interaction/Interaction.js","webpack://xdhmap/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://xdhmap/./node_modules/ol/events/condition.js","webpack://xdhmap/./node_modules/ol/interaction/Pointer.js","webpack://xdhmap/./node_modules/ol/interaction/DragPan.js","webpack://xdhmap/./node_modules/ol/interaction/DragRotate.js","webpack://xdhmap/./node_modules/ol/render/Box.js","webpack://xdhmap/./node_modules/ol/interaction/DragBox.js","webpack://xdhmap/./node_modules/ol/interaction/DragZoom.js","webpack://xdhmap/./node_modules/ol/events/KeyCode.js","webpack://xdhmap/./node_modules/ol/interaction/KeyboardPan.js","webpack://xdhmap/./node_modules/ol/interaction/KeyboardZoom.js","webpack://xdhmap/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://xdhmap/./node_modules/ol/interaction/PinchRotate.js","webpack://xdhmap/./node_modules/ol/interaction/PinchZoom.js","webpack://xdhmap/./node_modules/ol/interaction.js","webpack://xdhmap/./node_modules/ol/reproj/common.js","webpack://xdhmap/./node_modules/ol/ImageBase.js","webpack://xdhmap/./node_modules/ol/ImageState.js","webpack://xdhmap/./node_modules/ol/ImageCanvas.js","webpack://xdhmap/./node_modules/ol/LayerType.js","webpack://xdhmap/./node_modules/ol/layer/VectorRenderType.js","webpack://xdhmap/./node_modules/ol/render/Event.js","webpack://xdhmap/./node_modules/ol/structs/LRUCache.js","webpack://xdhmap/./node_modules/ol/render/canvas.js","webpack://xdhmap/./node_modules/ol/color.js","webpack://xdhmap/./node_modules/ol/colorlike.js","webpack://xdhmap/./node_modules/ol/render/VectorContext.js","webpack://xdhmap/./node_modules/ol/render/canvas/Immediate.js","webpack://xdhmap/./node_modules/ol/style/IconImageCache.js","webpack://xdhmap/./node_modules/ol/renderer/Map.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/Map.js","webpack://xdhmap/./node_modules/ol/renderer/Layer.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/Layer.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://xdhmap/./node_modules/ol/TileRange.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://xdhmap/./node_modules/ol/render/ReplayGroup.js","webpack://xdhmap/./node_modules/ol/render/ReplayType.js","webpack://xdhmap/./node_modules/ol/geom/flat/length.js","webpack://xdhmap/./node_modules/ol/geom/flat/textpath.js","webpack://xdhmap/./node_modules/ol/render/canvas/Instruction.js","webpack://xdhmap/./node_modules/ol/render/replay.js","webpack://xdhmap/./node_modules/ol/render/canvas/Replay.js","webpack://xdhmap/./node_modules/ol/render/canvas/ImageReplay.js","webpack://xdhmap/./node_modules/ol/render/canvas/LineStringReplay.js","webpack://xdhmap/./node_modules/ol/render/canvas/PolygonReplay.js","webpack://xdhmap/./node_modules/ol/geom/flat/straightchunk.js","webpack://xdhmap/./node_modules/ol/style/TextPlacement.js","webpack://xdhmap/./node_modules/ol/render/canvas/TextReplay.js","webpack://xdhmap/./node_modules/ol/render/canvas/ReplayGroup.js","webpack://xdhmap/./node_modules/ol/renderer/vector.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://xdhmap/./node_modules/ol/layer/VectorTileRenderType.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://xdhmap/./node_modules/ol/Map.js","webpack://xdhmap/./node_modules/ol/style/Image.js","webpack://xdhmap/./node_modules/ol/style/RegularShape.js","webpack://xdhmap/./node_modules/ol/style/Circle.js","webpack://xdhmap/./node_modules/ol/style/Fill.js","webpack://xdhmap/./node_modules/ol/style/Stroke.js","webpack://xdhmap/./node_modules/ol/style/Style.js","webpack://xdhmap/./node_modules/ol/layer/Vector.js","webpack://xdhmap/./node_modules/ol/format/FormatType.js","webpack://xdhmap/./node_modules/ol/featureloader.js","webpack://xdhmap/./node_modules/ol/loadingstrategy.js","webpack://xdhmap/./node_modules/ol/source/Source.js","webpack://xdhmap/./node_modules/ol/source/VectorEventType.js","webpack://xdhmap/./node_modules/ol/structs/RBush.js","webpack://xdhmap/./node_modules/ol/source/Vector.js","webpack://xdhmap/./utils/LayerSetting.js","webpack://xdhmap/./node_modules/ol/layer/TileProperty.js","webpack://xdhmap/./node_modules/ol/layer/Tile.js","webpack://xdhmap/./node_modules/ol/Tile.js","webpack://xdhmap/./node_modules/ol/ImageTile.js","webpack://xdhmap/./node_modules/ol/tilecoord.js","webpack://xdhmap/./node_modules/ol/TileCache.js","webpack://xdhmap/./node_modules/ol/reproj.js","webpack://xdhmap/./node_modules/ol/reproj/Triangulation.js","webpack://xdhmap/./node_modules/ol/reproj/Tile.js","webpack://xdhmap/./node_modules/ol/tileurlfunction.js","webpack://xdhmap/./node_modules/ol/tilegrid/TileGrid.js","webpack://xdhmap/./node_modules/ol/tilegrid.js","webpack://xdhmap/./node_modules/ol/source/Tile.js","webpack://xdhmap/./node_modules/ol/source/TileEventType.js","webpack://xdhmap/./node_modules/ol/source/UrlTile.js","webpack://xdhmap/./node_modules/ol/source/TileImage.js","webpack://xdhmap/./node_modules/ol/source/XYZ.js","webpack://xdhmap/./node_modules/ol/source/OSM.js","webpack://xdhmap/./node_modules/ol/tilegrid/WMTS.js","webpack://xdhmap/./node_modules/ol/source/WMTSRequestEncoding.js","webpack://xdhmap/./node_modules/ol/uri.js","webpack://xdhmap/./node_modules/ol/source/WMTS.js","webpack://xdhmap/./utils/TileSuperMapRest.js","webpack://xdhmap/./utils/Layers.js","webpack://xdhmap/packages/map/src/map.vue","webpack://xdhmap/./packages/map/src/map.vue?4837","webpack://xdhmap/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://xdhmap/./packages/map/src/map.vue","webpack://xdhmap/./packages/map/index.js","webpack://xdhmap/./packages/text/src/text.vue?294f","webpack://xdhmap/./node_modules/ol/style/Atlas.js","webpack://xdhmap/./node_modules/ol/webgl.js","webpack://xdhmap/./node_modules/ol/style/AtlasManager.js","webpack://xdhmap/./node_modules/ol/style/IconAnchorUnits.js","webpack://xdhmap/./node_modules/ol/style/IconImage.js","webpack://xdhmap/./node_modules/ol/style/IconOrigin.js","webpack://xdhmap/./node_modules/ol/style/Icon.js","webpack://xdhmap/./node_modules/ol/style/Text.js","webpack://xdhmap/./utils/Style.js","webpack://xdhmap/./node_modules/ol/Feature.js","webpack://xdhmap/./utils/Feature.js","webpack://xdhmap/packages/text/src/text.vue","webpack://xdhmap/./packages/text/src/text.vue?0e16","webpack://xdhmap/./packages/text/src/text.vue","webpack://xdhmap/./packages/text/index.js","webpack://xdhmap/./packages/rectangle/src/rectangle.vue?c1eb","webpack://xdhmap/packages/rectangle/src/rectangle.vue","webpack://xdhmap/./packages/rectangle/src/rectangle.vue?bb5e","webpack://xdhmap/./packages/rectangle/src/rectangle.vue","webpack://xdhmap/./packages/rectangle/index.js","webpack://xdhmap/./packages/index.js","webpack://xdhmap/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","global","quickselectStep","defaultCompare","z","exp","sd","newLeft","floor","newRight","swap","tmp","setPublicPath_i","window","document","currentScript","src","match","mapvue_type_template_id_1d799272_render","_vm","_h","$createElement","_c","_self","ref","staticClass","_t","staticRenderFns","util_abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","AssertionError_AssertionError","AssertionError","code","split","message","__proto__","constructor","ol_AssertionError","CollectionEventType","ADD","REMOVE","ObjectEventType","PROPERTYCHANGE","obj_assign","assign","target","var_sources","arguments$1","arguments","undefined","TypeError","output","ii","source","obj_clear","getValues","values","obj_isEmpty","bindListener","listenerObj","boundListener","evt","listener","bindTo","callOnce","unlistenByKey","findListener","listeners","opt_this","opt_setDeleteIndex","deleteIndex","getListeners","type","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","removeEventListener","keys","listen","opt_once","addEventListener","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","events_Event","Target_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","events_Target","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_Observable","EventTarget","Observable","revision_","changed","getRevision","on","Array","isArray","once","un","ol_Observable","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","set","opt_silent","unset","changeEventTypeCache","ol_Object","Property","LENGTH","CollectionEvent","opt_element","element","Collection_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_Collection","MapEvent","map","opt_frameState","frameState","ol_MapEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ol_MapBrowserEvent","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","createElement","getContext","setLineDash","e","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserPointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","EventSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","pointer_NativeSource","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","end","extension","array_remove","found","equals","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","every","currentVal","res","CLICK_COUNT_TIMEOUT","TouchSource_POINTER_TYPE","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","Number","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","pointer_TouchSource","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapEventType","POSTRENDER","MOVESTART","MOVEEND","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","PI","modulo","lerp","createExtent","extent","center","none","createSnapToResolutions","resolutions","resolution","delta","power","createSnapToPower","maxResolution","opt_maxLevel","offset","oldLevel","newLevel","disable","rotation","rotationconstraint_none","createSnapToN","theta","createSnapToZero","opt_tolerance","tolerance","ViewHint","ANIMATING","INTERACTING","ViewProperty","CENTER","RESOLUTION","ROTATION","coordinate_add","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getCorner","corner","getForViewAndSize","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","transform_rotate","anchor","anchorX","anchorY","transform_scale","sx","sy","transform_translate","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_RADIUS","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections_get","projections_add","projection","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","addProjections","projections","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","proj_getTransform","proj_transform","addCommon","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","dx2","dy2","invert","det","determinant","tmpTransform","Geometry_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","rotate","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","geom_SimpleGeometry","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedOffset","markers","last","first","maxSquaredDistance","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_LinearRing","Point_Point","Point","geom_Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRing","intersectsLinearRingArray","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","reverse","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getCenter","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerX","centerY","setResolution","centerOn","position","hint","returnValue","defaultMaxZoom","defaultZoomFactor","defaultMaxResolution","defaultMinResolution","enableRotation","ol_View","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_BaseLayer","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Base","State","UNDEFINED","READY","Group_Property","LAYERS","Group_LayerGroup","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","Group","hasArea","size_scale","ratio","toSize","PluggableMap_PluggableMap","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","style","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","getElementById","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","cont","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","moveStart","idle","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","ol_PluggableMap","getSource","loading","Control_Control","Control","target_","listenerKeys","getMap","control_Control","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","cache","font","family","fontFamily","Layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","visibleAtResolution","layer_Layer","Attribution_Attribution","Attribution","Attribution_render","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","control_Zoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_Interaction","Interaction","setActive","active","pan","opt_duration","Interaction_rotate","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","DoubleClickZoom","DoubleClickZoom_handleEvent","delta_","stopEvent","interaction_DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_PointerInteraction","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","Pointer_centroid","pointerEvents","Pointer","DragPan_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragPan","DragRotate_DragRotate","DragRotate","lastAngle_","interaction_DragRotate","Box_RenderBox","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","interaction_DragBox","DragZoom_DragZoom","DragZoom","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan_KeyboardPan","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom_KeyboardZoom","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_PinchZoom","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase_ImageBase","ImageBase","getImage","getPixelRatio","ol_ImageBase","ImageState","ImageCanvas_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","ol_ImageCanvas","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","render_Event","LRUCache_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","structs_LRUCache","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","body","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromNamed","el","rgb","fromString","MAX_CACHE_SIZE","cacheSize","fromStringInternal_","asArray","g","exec","hasAlpha","substr","normalize","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate_CanvasImmediateRenderer","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","IconImageCache","cache_","cacheSize_","maxCacheSize_","crossOrigin","colorString","expire","iconImage","maxCacheSize","shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","worldsAway","numLayers","layerRenderer","getLayerRenderer","getWrapX","hasFeature","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","renderer_Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","forEachLayerAtCoordinate","ctor","canvas_Map","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","tileCoord","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","renderer_Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","canvas_Layer","IntermediateCanvas_IntermediateCanvasRenderer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","IntermediateCanvas","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textReplay","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","Replay","ImageReplay_CanvasImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","ImageReplay","LineStringReplay_CanvasLineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextPlacement","LINE","TextReplay_CanvasTextReplay","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","TextReplay","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","arraySize","error","replayDeclutter","zz","replayData","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","MultiPoint","renderMultiPointGeometry","MultiLineString","renderMultiLineStringGeometry","MultiPolygon","renderMultiPolygonGeometry","GeometryCollection","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","replayGroup","circleReplay","renderFeature","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageReplay","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","ol_Map","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","style_Image","RegularShape_RegularShape","ImageStyle","RegularShape","checksums_","hitDetectionCanvas_","origin_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getPoints","getRadius","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","recalculate","checksum","style_RegularShape","CircleStyle","setRadius","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","setGeometry","zIndex_","toFunction","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","Vector_Property","RENDER_ORDER","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","style_","styleFunction_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","getStyle","setRenderOrder","Vector","FormatType","ARRAY_BUFFER","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","sourceOrTile","addFeatures","loadingstrategy_all","Source_Source","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","source_Source","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","structs_RBush","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","removed","setLoader","source_Vector","OSM","server","preview","Baidu","Amap","SuperMap","Google","Founder","validate","LayerSetting_set","LayerSetting_get","toArray","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","Tile_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillRect","ol_ImageTile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache_TileCache","TileCache","pruneExceptNewestZ","ol_TileCache","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","stop","tmpTileCoord","TileGrid_TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","tilegrid_wrapX","extentFromProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","source_UrlTile","TileImage_TileImage","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","source_TileImage","XYZ_XYZ","source_XYZ","ATTRIBUTION","source_OSM","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","WMTSRequestEncoding","KVP","REST","appendParams","uri","params","keyParams","encodeURIComponent","qs","WMTS_WMTS","WMTS","requestEncoding","version_","version","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","source_WMTS","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","Unit","METER","KILOMETER","MILE","YARD","DEGREE","MILLIMETER","CENTIMETER","INCH","DECIMETER","FOOT","SECOND","MINUTE","RADIAN","ServerType","ISERVER","IPORTAL","ONLINE","resolutionToScale","dpi","mapUnit","inchPerMeter","meterPerMapUnit","getMeterPerMapUnit","scaleToResolution","meterPerMapUnitValue","earchRadiusInMeters","TileSuperMapRest_TileSuperMapRest","[object Object]","layerUrl","serverType","super","logo","cacheEnabled","layersID","tileProxy","_url","tileSetsIndex","tempIndex","me","getAllRequestParams","redirect","transparent","stringify","prjCoordSys","overlapDisplayed","overlapDisplayedOptions","tileversion","getFullRequestUrl","_paramsChanged","_layerUrl","createLayerUrl","encodeURI","getRequestParamString","requestParams","createTileGrid","unit","getTime","tileSets","tileVersions","changeTilesVersion","mergeTileVersionParam","tileVersion","mapJSONObj","bounds","maxReolution","viewer","coordUnit","visibleScalesEnabled","visibleScales","sortNumber","createBaiduLayer","config","random","createFounderLayer","tileSizePixels","basePath","col","row","createLayer","mapvue_type_script_lang_js_","props","layerConfig","Promise","resolve","methods","feat","getFeatureAtPixel","_featureEvents","find","typeEvents","_eventHandler","vm","$listeners","_bind","_uid","findIndex","loc","then","$refs","$emit","src_mapvue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","component","src_map","install","Vue","packages_map","textvue_type_template_id_075ccc55_render","textvue_type_template_id_075ccc55_staticRenderFns","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","deltaWidth","deltaHeight","updateBlocks_","args","style_Atlas","CONTEXT_IDS","opt_attributes","MAX_TEXTURE_SIZE","webgl_canvas","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","style_AtlasManager","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconImage_get","style_IconImage","IconOrigin","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Icon","DEFAULT_FILL_COLOR","Text_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","StyleMap","Atlas","AtlasManager","parse","childOptions","v","Feature_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","ol_Feature","utils_Feature","createStyle","createGeometry","$parent","bindEvents","$el","draw","$on","unbindEvents","textvue_type_script_lang_js_","mixins","required","content","background","border","computed","watch","fullFont","src_textvue_type_script_lang_js_","text_component","src_text","packages_text","rectanglevue_type_template_id_89228cbe_render","rectanglevue_type_template_id_89228cbe_staticRenderFns","rectanglevue_type_script_lang_js_","strokeColor","src_rectanglevue_type_script_lang_js_","rectangle_component","rectangle","packages_rectangle","components","installed","packages_0","__webpack_exports__"],"mappings":"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","file":"xdhmap.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xdhmap\"] = factory();\n\telse\n\t\troot[\"xdhmap\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"map\",staticClass:\"xdh-map\"},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * 地图图层配置，支持OSM、百度、离线谷歌、高德、超图、方正PGIS\n * @type {{OSM: {title: string, server: null, preview: string}, Baidu: {title: string, server: string, preview: string}, Amap: {title: string, server: string, preview: string}, SupperMap: {title: string, server: string, preview: string}, Google: {title: string, server: string, preview: string}, Founder: {title: string, server: string, preview: string}}}\n */\nconst LAYERS = {\n  OSM: {\n    title: '默认',\n    server: null,\n    preview: ''\n  },\n  Baidu: {\n    title: '百度地图',\n    server: 'http://online{index}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&udt=20170301&scaler=1&p=1',\n    preview: ''\n  },\n  Amap: {\n    title: '高德地图',\n    server: 'http://webrd03.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}&lang=zh_cn',\n    preview: ''\n  },\n  SuperMap: {\n    title: '超图',\n    server: 'http://53.1.238.17/iserver/services/map-pgisvec/rest/maps/pgisvecv1',\n    preview: ''\n  },\n  Google: {\n    title: '谷歌地图',\n    server: 'http://172.19.40.108:8081/maptile/googlemaps/roadmap/{z}/{x}/{y}.png',\n    preview: ''\n  },\n  Founder: {\n    title: '方正PGIS',\n    server: 'http://127.0.0.1:3000/proxy',\n    preview: ''\n  }\n}\n\n\n// 验证配置的名称是否存在\nexport function validate(key) {\n  const keys = Object.keys(LAYERS)\n  const valid = keys.includes(key)\n  if (!valid) {\n    throw new Error(`图层配置 ${key} 不存在`)\n  }\n  return valid\n}\n\n\n/**\n * 更新图层服务配置\n * @param {Object} layers 图层配置信息对象\n *\n * @example\n *\n * setLayersConfig({\n *  Baidu: {\n *    title:'百度地图'\n *  }\n * })\n *\n */\nexport function set(layers) {\n  Object.keys(layers).forEach(key => {\n    const layer = layers[key]\n    Object.assign(LAYERS[key], layer)\n  })\n}\n\n/**\n * 获取图层服务配置\n * @param {String} [key=null] 图层名称,为null时表示获取全部图层配置\n * @param {boolean} [toArray=false] 是否转换成数组\n * @return {Object|Array}\n */\nexport function get(key = null, toArray = false) {\n  if (key && validate(key)) {\n    return LAYERS[key]\n  }\n  if (!toArray) {\n    return LAYERS\n  }\n  return Object.keys(LAYERS).map(key => {\n    return {\n      name: key,\n      ...LAYERS[key]\n    }\n  })\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n *  超图PGIS图层创建类\n *\n *  @example\n *  /src/utils/openlayers 实例化参数\n *       {\n *         type: 'SuperMap',\n *          path: 'http://53.1.238.17/iserver/services/map-pgisvec/rest/maps/pgisvecv1',\n *          center: [117.2794, 31.9265],\n *          zoom: 10,\n *          layerCreator(path, view, TileLayer) {\n *            return new TileLayer({\n *              source: new TileSuperMapRest({\n *                url: path\n *              }),\n *              projection: 'EPSG:4326'\n *            })\n *          }\n *        }\n */\n\nimport {TileImage} from 'ol/source'\nimport {toSize} from 'ol/size'\nimport {createXYZ} from 'ol/tilegrid'\nimport TileGrid from 'ol/tilegrid/TileGrid'\n\nconst Unit = {\n  /**  米 */\n  METER: 'METER',\n  /**  千米 */\n  KILOMETER: 'KILOMETER',\n  /**  英里 */\n  MILE: 'MILE',\n  /**  码 */\n  YARD: 'YARD',\n  /**  度 */\n  DEGREE: 'DEGREE',\n  /**  毫米 */\n  MILLIMETER: 'MILLIMETER',\n  /**  厘米 */\n  CENTIMETER: 'CENTIMETER',\n  /**  英寸 */\n  INCH: 'INCH',\n  /**  分米 */\n  DECIMETER: 'DECIMETER',\n  /**  英尺 */\n  FOOT: 'FOOT',\n  /**  秒 */\n  SECOND: 'SECOND',\n  /**  分 */\n  MINUTE: 'MINUTE',\n  /**  弧度 */\n  RADIAN: 'RADIAN'\n}\n\n/**\n * @enum ServerType\n * @memberOf SuperMap\n * @description 服务器类型\n * @type {string}\n */\nconst ServerType = {\n  /** ISERVER */\n  ISERVER: 'ISERVER',\n  /** IPORTAL */\n  IPORTAL: 'IPORTAL',\n  /** ONLINE */\n  ONLINE: 'ONLINE'\n}\n\n\n/**\n * @function ol.supermap.Util.resolutionToScale\n * @description 通过分辨率计算比例尺。\n * @param {number} resolution - 分辨率。\n * @param {number} dpi - 屏幕分辨率。\n * @param {string} mapUnit - 地图单位。\n * @returns {number} 比例尺。\n */\nfunction resolutionToScale(resolution, dpi, mapUnit) {\n  let inchPerMeter = 1 / 0.0254;\n  // 地球半径。\n  let meterPerMapUnit = getMeterPerMapUnit(mapUnit);\n  let scale = resolution * dpi * inchPerMeter * meterPerMapUnit;\n  scale = 1 / scale;\n  return scale;\n}\n\n/**\n * @function ol.supermap.Util.scaleToResolution\n * @description 通过比例尺计算分辨率。\n * @param {number} scale - 比例尺。\n * @param {number} dpi - 屏幕分辨率。\n * @param {string} mapUnit - 地图单位。\n * @returns {number} 分辨率。\n */\nfunction scaleToResolution(scale, dpi, mapUnit) {\n  let inchPerMeter = 1 / 0.0254;\n  let meterPerMapUnitValue = this.getMeterPerMapUnit(mapUnit);\n  let resolution = scale * dpi * inchPerMeter * meterPerMapUnitValue;\n  resolution = 1 / resolution;\n  return resolution;\n}\n\n/**\n * @private\n * @function ol.supermap.Util.getMeterPerMapUnit\n * @description 获取每地图单位多少米。\n * @param {string} mapUnit - 地图单位。\n * @returns {number} 返回每地图单位多少米。\n */\nfunction getMeterPerMapUnit(mapUnit) {\n  let earchRadiusInMeters = 6378137;\n  let meterPerMapUnit;\n  if (mapUnit === Unit.METER) {\n    meterPerMapUnit = 1;\n  } else if (mapUnit === Unit.DEGREE) {\n    // 每度表示多少米。\n    meterPerMapUnit = Math.PI * 2 * earchRadiusInMeters / 360;\n  } else if (mapUnit === Unit.KILOMETER) {\n    meterPerMapUnit = 1.0E-3;\n  } else if (mapUnit === Unit.INCH) {\n    meterPerMapUnit = 1 / 2.5399999918E-2;\n  } else if (mapUnit === Unit.FOOT) {\n    meterPerMapUnit = 0.3048;\n  } else {\n    return meterPerMapUnit;\n  }\n  return meterPerMapUnit;\n}\n\n\n/**\n * @class ol.source.TileSuperMapRest\n * @category iServer Map\n * @classdesc SuperMap iServer TileImage 图层源。\n * @param {Object} options - 参数。\n * @param {string} options.url - 服务地址。\n * @param {(ol.tilegrid.TileGrid|ol.tilegrid.TileGrid)} [options.tileGrid] - 瓦片网格对象。当不指定时，会通过 options.extent 或投影范围生成。\n * @param {SuperMap.ServerType} [options.serverType=ServerType.ISERVER] - 服务类型 iServer|iPortal|online。\n * @param {boolean} [options.redirect = false] - 是否重定向。\n * @param {boolean} [options.transparent = true] - 瓦片是否透明。\n * @param {boolean} [options.cacheEnabled = true] - 是否使用服务端的缓存。\n * @param {Object} [options.prjCoordSys] - 请求的地图的坐标参考系统。当此参数设置的坐标系统不同于地图的原有坐标系统时， 系统会进行动态投影，并返回动态投影后的地图瓦片。例如：{'epsgCode':3857}。\n * @param {string} [options.layersID] - 获取进行切片的地图图层 ID，即指定进行地图切片的图层，可以是临时图层集，也可以是当前地图中图层的组合。\n * @param {boolean} [options.clipRegionEnabled = false] - 是否只地图只显示该区域覆盖的部分。true 表示地图只显示该区域覆盖的部分。\n * @param {(ol.geom.Geometry|ol.geom.Geometry)} [options.clipRegion] - 地图显示裁剪的区域。是一个面对象，当 clipRegionEnabled = true 时有效，即地图只显示该区域覆盖的部分。\n * @param {boolean} [options.overlapDisplayed = false] - 地图对象在同一范围内时，是否重叠显示。如果为 true，则同一范围内的对象会直接压盖；如果为 false 则通过 overlapDisplayedOptions 控制对象不压盖显示。\n * @param {SuperMap.OverlapDisplayedOptions} [options.overlapDisplayedOptions] - 避免地图对象压盖显示的过滤选项，当 overlapDisplayed 为 false 时有效，用来增强对地图对象压盖时的处理。\n * @param {string} [options.tileversion] - 切片版本名称，_cache 为 true 时有效。\n * @param {string} [options.tileProxy] - 代理地址。\n * @param {string} [options.format = 'png'] - 瓦片表述类型，支持 'png' 、'bmp' 、'jpg' 和 'gif' 四种表述类型。\n * @extends {ol.source.TileImage}\n */\nexport default class TileSuperMapRest extends TileImage {\n  \n  // eslint-disable-next-line\n  constructor(options) {\n    options = options || {};\n    if (options.url === undefined) {\n      return;\n    }\n\n    options.format = options.format ? options.format : 'png';\n    let layerUrl = options.url + '/tileImage.' + options.format + '?';\n\n    options.serverType = options.serverType || ServerType.ISERVER;\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      logo: options.logo,\n      opaque: options.opaque,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: options.state,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      cacheEnabled: options.cacheEnabled,\n      layersID: options.layersID\n    });\n    if (options.tileProxy) {\n      this.tileProxy = options.tileProxy;\n    }\n    this.options = options;\n    this._url = options.url;\n    // 当前切片在切片集中的index\n    this.tileSetsIndex = -1;\n    this.tempIndex = -1;\n    let me = this;\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.getAllRequestParams\n     * @description 获取全部请求参数。\n     */\n    function getAllRequestParams() {\n      let me = this,\n        params = {};\n\n      params['redirect'] = options.redirect !== undefined ? options.redirect : false;\n      // 切片是否透明\n      params['transparent'] = options.transparent !== undefined ? options.transparent : true;\n      params['cacheEnabled'] = !(options.cacheEnabled === false);\n      // 存储一个cacheEnabled参数\n      me.cacheEnabled = params['cacheEnabled'];\n      params['_cache'] = params['cacheEnabled'];\n\n      // 设置切片原点\n      if (this.origin) {\n        params['origin'] = JSON.stringify({\n          x: this.origin[0],\n          y: this.origin[1]\n        });\n      }\n\n      if (options.prjCoordSys) {\n        params['prjCoordSys'] = JSON.stringify(options.prjCoordSys);\n      }\n\n      if (options.layersID) {\n        params['layersID'] = options.layersID.toString();\n      }\n\n      if (!options.overlapDisplayed) {\n        params['overlapDisplayed'] = false;\n        if (options.overlapDisplayedOptions) {\n          params['overlapDisplayedOptions'] = me.overlapDisplayedOptions.toString();\n        }\n      } else {\n        params['overlapDisplayed'] = true;\n      }\n\n      if (options.cacheEnabled && options.tileversion) {\n        params['tileversion'] = options.tileversion.toString();\n      }\n\n      return params;\n    }\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.getFullRequestUrl\n     * @description 获取完整的请求地址。\n     */\n    function getFullRequestUrl() {\n      if (this._paramsChanged) {\n        this._layerUrl = createLayerUrl.call(this);\n        this._paramsChanged = false;\n      }\n      return this._layerUrl || createLayerUrl.call(this);\n    }\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.createLayerUrl\n     * @description 获取新建图层地址。\n     */\n    function createLayerUrl() {\n      this._layerUrl = layerUrl + encodeURI(getRequestParamString.call(this));\n      return this._layerUrl;\n    }\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.getRequestParamString\n     * @description 获取请求参数的字符串。\n     */\n    function getRequestParamString() {\n      this.requestParams = this.requestParams || getAllRequestParams.call(this);\n      let params = [];\n      for (let key in this.requestParams) {\n        params.push(key + '=' + this.requestParams[key]);\n      }\n      return params.join('&');\n    }\n\n    function tileUrlFunction(tileCoord, pixelRatio, projection) {\n      if (!me.tileGrid) {\n        if (me.extent) {\n          me.tileGrid = TileSuperMapRest.createTileGrid(options.extent);\n          if (me.resolutions) {\n            me.tileGrid.resolutions = me.resolutions;\n          }\n        } else {\n          if (projection.getCode() === 'EPSG:3857') {\n            me.tileGrid = TileSuperMapRest.createTileGrid([-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892]);\n            me.extent = [-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892];\n          }\n          if (projection.getCode() === 'EPSG:4326') {\n            me.tileGrid = TileSuperMapRest.createTileGrid([-180, -90, 180, 90]);\n            me.extent = [-180, -90, 180, 90];\n          }\n        }\n      }\n      me.origin = me.tileGrid.getOrigin(0);\n      let z = tileCoord[0];\n      let x = tileCoord[1];\n      let y = -tileCoord[2] - 1;\n      let resolution = me.tileGrid.getResolution(z);\n      let dpi = 96;\n      let unit = projection.getUnits();\n      if (unit === 'degrees') {\n        unit = Unit.DEGREE;\n      }\n      if (unit === 'm') {\n        unit = Unit.METER;\n      }\n      let scale = resolutionToScale(resolution, dpi, unit);\n      let tileSize = toSize(me.tileGrid.getTileSize(z, me.tmpSize));\n      let layerUrl = getFullRequestUrl.call(me);\n      let url = layerUrl + encodeURI('&x=' + x + '&y=' + y + '&width=' + tileSize[0] + '&height=' + tileSize[1] + '&scale=' + scale);\n      // 支持代理\n      if (me.tileProxy) {\n        url = me.tileProxy + encodeURIComponent(url);\n      }\n      if (!me.cacheEnabled) {\n        url += '&_t=' + new Date().getTime();\n      }\n      return url;\n    }\n\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.setTileSetsInfo\n   * @description 设置瓦片集信息。\n   * @param {Object} tileSets - 瓦片集合。\n   */\n  setTileSetsInfo(tileSets) {\n    this.tileSets = tileSets;\n    if (Array.isArray(this.tileSets)) {\n      this.tileSets = tileSets[0];\n    }\n    if (!this.tileSets) {\n      return;\n    }\n    this.dispatchEvent({\n      type: 'tilesetsinfoloaded',\n      value: {\n        tileVersions: this.tileSets.tileVersions\n      }\n    });\n    this.changeTilesVersion();\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.lastTilesVersion\n   * @description 请求上一个版本切片，并重新绘制。\n   */\n  lastTilesVersion() {\n    this.tempIndex = this.tileSetsIndex - 1;\n    this.changeTilesVersion();\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.nextTilesVersion\n   * @description 请求下一个版本切片，并重新绘制。\n   */\n  nextTilesVersion() {\n    this.tempIndex = this.tileSetsIndex + 1;\n    this.changeTilesVersion();\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.changeTilesVersion\n   * @description 切换到某一版本的切片，并重绘。通过 this.tempIndex 保存需要切换的版本索引。\n   */\n  changeTilesVersion() {\n    let me = this;\n    // 切片版本集信息是否存在\n    if (me.tileSets == null) {\n      return;\n    }\n    if (me.tempIndex === me.tileSetsIndex || this.tempIndex < 0) {\n      return;\n    }\n    // 检测index是否可用\n    let tileVersions = me.tileSets.tileVersions;\n    if (tileVersions && me.tempIndex < tileVersions.length && me.tempIndex >= 0) {\n      let name = tileVersions[me.tempIndex].name;\n      let result = me.mergeTileVersionParam(name);\n      if (result) {\n        me.tileSetsIndex = me.tempIndex;\n        me.dispatchEvent({\n          type: 'tileversionschanged',\n          value: {\n            tileVersion: tileVersions[me.tempIndex]\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.updateCurrentTileSetsIndex\n   * @description 更新当前切片集索引，目前主要提供给控件使用。\n   * @param {number} index - 索引号。\n   */\n  updateCurrentTileSetsIndex(index) {\n    this.tempIndex = index;\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.mergeTileVersionParam\n   * @description 更改 URL 请求参数中的切片版本号，并重绘。\n   * @param {Object} version - 版本信息。\n   * @returns {boolean} 是否成功。\n   */\n  mergeTileVersionParam(version) {\n    if (version) {\n      this.requestParams['tileversion'] = version;\n      this._paramsChanged = true;\n      this.refresh();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.optionsFromMapJSON\n   * @description 从 MapJSON 中获取参数对象。\n   * @param {string} url - 地址。\n   * @param {Object} mapJSONObj - 地图 JSON 对象。\n   */\n  static optionsFromMapJSON(url, mapJSONObj) {\n    let options = {};\n    options.url = url;\n    options.crossOrigin = 'anonymous';\n    let extent = [mapJSONObj.bounds.left, mapJSONObj.bounds.bottom, mapJSONObj.bounds.right, mapJSONObj.bounds.top];\n    let resolutions = getResolutions();\n\n    function getResolutions() {\n      let level = 17;\n      let dpi = 96;\n      let width = (extent[2] - extent[0]);\n      let height = (extent[3] - extent[1]);\n      let tileSize = width >= height ? width : height;\n      let maxReolution;\n      if (tileSize === width) {\n        maxReolution = tileSize / mapJSONObj.viewer.width;\n      } else {\n        maxReolution = tileSize / mapJSONObj.viewer.height;\n      }\n      let resolutions = [];\n      let unit = Unit.METER;\n      if (mapJSONObj.coordUnit === Unit.DEGREE) {\n        unit = Unit.DEGREE;\n      }\n      if (mapJSONObj.visibleScalesEnabled && mapJSONObj.visibleScales && mapJSONObj.visibleScales.length > 0) {\n        for (let i = 0; i < mapJSONObj.visibleScales.length; i++) {\n          resolutions.push(scaleToResolution(mapJSONObj.visibleScales[i], dpi, unit));\n        }\n      } else {\n        for (let i = 0; i < level; i++) {\n          resolutions.push(maxReolution / Math.pow(2, i));\n        }\n      }\n\n      function sortNumber(a, b) {\n        return b - a;\n      }\n\n      return resolutions.sort(sortNumber);\n    }\n\n    options.tileGrid = new TileGrid({\n      extent: extent,\n      resolutions: resolutions\n    });\n    return options;\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.createTileGrid\n   * @description 创建切片网格。\n   * @param {number} extent - 长度。\n   * @param {number} maxZoom - 最大的放大级别。\n   * @param {number} minZoom - 最小的放大级别。\n   * @param {number} tileSize - 瓦片的尺寸。\n   * @param {number} origin - 原点。\n   * */\n  static createTileGrid(extent, maxZoom, minZoom, tileSize, origin) {\n    let tilegrid = createXYZ({\n      extent: extent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: tileSize\n    });\n    return new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: tilegrid.getResolutions(),\n      tileSize: tilegrid.getTileSize()\n    });\n  }\n}\n","import TileLayer from 'ol/layer/Tile'\nimport OSM from 'ol/source/OSM'\nimport XYZ from 'ol/source/XYZ'\nimport TileGrid from 'ol/tilegrid/TileGrid'\nimport WMTSGrid from 'ol/tilegrid/WMTS'\nimport WMTS from 'ol/source/WMTS'\nimport TileImage from 'ol/source/TileImage'\nimport {get as getProj} from 'ol/proj'\nimport {getWidth, getTopLeft} from 'ol/extent'\nimport TileSuperMapRest from './TileSuperMapRest'\nimport {validate, get as getConfig} from './LayerSetting'\n\n\n// 创建百度地图图层\nfunction createBaiduLayer(config) {\n  const projection = getProj('EPSG:3857')\n  \n  const tileGrid = new TileGrid({\n    origin: [0, 0],\n    resolutions: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\n      .map(function (x) {\n        return Math.pow(2, 18 - x)\n      })\n  });\n  let source = new TileImage({\n    projection: projection,\n    tileGrid: tileGrid,\n    tileUrlFunction: function (tileCoord) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const index = Math.ceil(Math.random() * 5)\n      return config.server.replace(/{x}/g, x)\n        .replace(/{y}/g, y)\n        .replace(/{z}/g, z)\n        .replace(/{index}/g, index)\n    }\n  });\n  \n  return new TileLayer({\n    source: source\n  })\n  \n}\n\n// 创建方正地图图层\nfunction createFounderLayer(config) {\n  const tileSizePixels = 256\n  const projection = getProj('EPSG:4326')\n  const projectionExtent = projection.getExtent();\n  const size = getWidth(projectionExtent) / tileSizePixels\n  let matrixIds = [];\n  let resolutions = [];\n  for (let i = 0; i <= 20; i++) {\n    matrixIds[i] = i;\n    resolutions[i] = size / Math.pow(2, i);\n  }\n  const tileGrid = new WMTSGrid({\n    origin: getTopLeft(projectionExtent),\n    resolutions: resolutions,\n    matrixIds: matrixIds\n  });\n  const basePath = config.server\n  return new TileLayer({\n    source: new WMTS({\n      url: basePath,\n      tileGrid: tileGrid,\n      projection: projection,\n      tileLoadFunction: function (imageTile, src) {\n        const tileCoord = imageTile.tileCoord;\n        let zoom = tileCoord[0];\n        let col = tileCoord[1];\n        let row = -(tileCoord[2] + 1);\n        imageTile.getImage().src = `${basePath}?Service=getImage&Type=RGB&ZoomOffset=0&Col=${col}&Row=${row}&Zoom=${zoom}&V=0.3`;\n      }\n    }),\n    wrapX: false\n  })\n}\n\n\n/**\n * 创建地图图层\n * @param {String} key 地图图层配置名称\n * @return {TileLayer} TileLayer\n *\n * @example\n *\n * new Map({\n *           layers: [createLayer('Baidu')],\n *           target: this.$refs.map,\n *           view: new View({\n *              projection: 'EPSG:4326',\n *              center: [120, 30],\n *              zoom: 4\n *           })\n *       })\n */\nexport function createLayer(key = 'OSM') {\n  if (!validate(key)) return null\n  \n  const config = getConfig(key)\n  let layer = null\n  switch (key) {\n    case 'OSM':\n      layer = new TileLayer({\n        source: new OSM()\n      })\n      break\n    // Google和高德的方式相同\n    case 'Google':\n    case 'Amap':\n      layer = new TileLayer({\n        source: new XYZ({\n          url: config.server\n        })\n      })\n      break\n    case 'Baidu':\n      layer = createBaiduLayer(config)\n      break\n    case 'SuperMap':\n      layer = new TileLayer({\n        source: new TileSuperMapRest({\n          url: config.server\n        }),\n        projection: 'EPSG:4326'\n      })\n      break\n    case 'Founder':\n      layer = createFounderLayer(config)\n      break\n  }\n  return layer\n}\n","<template>\n  <div class=\"xdh-map\" ref=\"map\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\n  import Map from 'ol/Map'\n  import View from 'ol/View'\n  import VectorLayer from 'ol/layer/Vector'\n  import VectorSource from 'ol/source/Vector'\n  import {set as setLayerConfig} from 'utils/LayerSetting'\n  import {createLayer} from 'utils/Layers'\n  /*\n   地图支持以下事件：\n    change        (module:ol/events/Event~Event)    - Generic change event. Triggered when the revision counter is increased.change:layerGroup (module:ol/Object.ObjectEvent)\n    change:size   (module:ol/Object.ObjectEvent)\n    change:target (module:ol/Object.ObjectEvent)\n    change:view   (module:ol/Object.ObjectEvent)\n    click         (module:ol/MapBrowserEvent~MapBrowserEvent) - A click with no dragging. A double click will fire two of this.\n    dblclick      (module:ol/MapBrowserEvent~MapBrowserEvent) - A true double click, with no dragging.\n    moveend       (module:ol/MapEvent~MapEvent) - Triggered after the map is moved.\n    movestart     (module:ol/MapEvent~MapEvent) - Triggered when the map starts moving.\n    pointerdrag   (module:ol/MapBrowserEvent~MapBrowserEvent) - Triggered when a pointer is dragged.\n    pointermove   (module:ol/MapBrowserEvent~MapBrowserEvent) - Triggered when a pointer is moved. Note that on touch devices this is triggered when the map is panned, so is not the same as mousemove.\n    postcompose   (module:ol/render/Event~RenderEvent)\n    postrender    (module:ol/MapEvent~MapEvent) - Triggered after a map frame is rendered.\n    precompose    (module:ol/render/Event~RenderEvent)\n    propertychange (module:ol/Object.ObjectEvent) - Triggered when a property is changed.\n    rendercomplete (module:ol/render/Event~RenderEvent) - Triggered when rendering is complete, i.e. all sources and tiles have finished loading for the current viewport, and all tiles are faded in.\n    singleclick    (module:ol/MapBrowserEvent~MapBrowserEvent) - A true single click with no dragging and no double click. Note that this event is delayed by 250 ms to ensure that it is not a double click.\n\n  */\n  export default {\n    name: 'XdhMap',\n    props: {\n      // 最小缩放\n      minZoom: {\n        type: Number,\n        default: 1\n      },\n      // 最大缩放\n      maxZoom: {\n        type: Number,\n        default: 20\n      },\n      // 初始化缩放层级\n      zoom: {\n        type: Number,\n        default: 10\n      },\n      // 初始化中心经纬度\n      center: {\n        type: Array,\n        default() {\n          return [120, 30]\n        }\n      },\n      // 初始化图层瓦片地图类型\n      type: {\n        type: String,\n        default: 'OSM'\n      },\n      // 图层瓦片服务配置，必须返回Promise\n      layerConfig: {\n        type: Function,\n        default() {\n          return Promise.resolve({})\n        }\n      }\n    },\n    methods: {\n      /**\n       * 图形事件处理句柄\n       * @private\n       */\n      _eventHandler(e) {\n        const feat = this.getFeatureAtPixel(e.pixel)\n        if (feat) {\n          const array = this._featureEvents[e.type] || []\n          const item = array.find(item => item.feature === feat)\n          if (item) {\n            item.listener(e, item.feature)\n          }\n        }\n      },\n      /**\n       * 绑定图形事件\n       * @private\n       * @param {string} type 事件类型名称\n       * @param {FeatureClass} feature 图形实例\n       * @param {Function} listener 事件句柄\n       * @param {number} uid 图形所属的Vue实例id\n       */\n      _bind(type, feature, listener, uid) {\n        // 图形的事件需要地图图层转发，为提高性能，共享图层事件\n        // 相同的事件名称只注册一次\n        let typeEvents = this._featureEvents[type]\n        if (!typeEvents) {\n          this._featureEvents[type] = []\n          this.map.on(type, this._eventHandler)\n        }\n        this._featureEvents[type].push({type, feature, listener, uid})\n      },\n      /**\n       * 给子组件的图形绑定事件\n       * @param {VueComponent} 子组件实例\n       */\n      bindEvents(vm) {\n        if (!this.map) return\n        const listeners = vm.$listeners\n        Object.keys(listeners).forEach(key => {\n          this._bind(key, vm.feature, listeners[key], vm._uid)\n        })\n      },\n      /**\n       * 给子组件的图形销毁事件\n       * @param {VueComponent} 子组件实例\n       */\n      unbindEvents(vm) {\n        if (!this.map) return\n        const listeners = vm.$listeners\n        const uid = vm._uid\n        Object.keys(listeners).forEach(key => {\n          const array = this._featureEvents[key] || []\n          array.splice(array.findIndex(item => item.uid === uid), 1)\n          if (array.length === 0) {\n            delete this._featureEvents[key]\n            this.map.un(key, this._eventHandler)\n          }\n        })\n      },\n      /**\n       * 在地图上画图形\n       * @param {FeatureClass} feature 图形实例\n       */\n      addFeature(feature) {\n        // 共享矢量图层，把所有图形就加入同一个图层\n        if (this.vectorLayer) {\n          const source = this.vectorLayer.getSource()\n          source.addFeature(feature)\n        } else {\n          let vectorSource = new VectorSource({\n            features: [feature]\n          })\n\n          this.vectorLayer = new VectorLayer({\n            source: vectorSource\n          })\n          this.map.addLayer(this.vectorLayer)\n        }\n      },\n      /**\n       * 删除图形\n       * @param {FeatureClass} feature 图形实例\n       */\n      removeFeature(feature) {\n        if (!this.vectorLayer) return\n        const source = this.vectorLayer.getSource()\n        source.removeFeature(feature)\n      },\n      /**\n       * 根据地图上的像素位置获取图形对象\n       * @param  {Array} pixel 位置像素 [x,y]\n       * @return {module:ol/Feature|module:ol/render/Feature|*}\n       */\n      getFeatureAtPixel(pixel) {\n        return this.map.forEachFeatureAtPixel(pixel, function (feature) {\n          return feature\n        })\n      },\n      /**\n       * 切换地图类型\n       * @param {string} type 地图类型，如： Baidu / Amap / OSM\n       */\n      changeType(type) {\n        if (!type) return\n\n        const layers = this.map.getLayers().getArray()\n        const tileLayer = layers.find(layer => layer.type === 'TILE')\n        if (tileLayer) {\n          this.map.removeLayer(tileLayer)\n        }\n        this.map.addLayer(createLayer(type))\n      },\n      /**\n       * 重置地图尺寸，当容器的尺寸变化后需要执行resize\n       */\n      resize() {\n        this.map.updateSize()\n      },\n      /**\n       * 设置地图缩放等级\n       * @param {Number} level 等级数值\n       */\n      zoomTo(level) {\n        const view = this.map.getView()\n        view.animate({\n          zoom: Number.parseInt(level)\n        })\n      },\n\n      /**\n       * 逐步放大\n       */\n      zoomIn() {\n        const view = this.map.getView()\n        this.zoom(view.getZoom() + 1)\n      },\n\n      /**\n       * 逐步缩小\n       */\n      zoomOut() {\n        const view = this.map.getView()\n        this.zoom(view.getZoom() - 1)\n      },\n      /**\n       * 移动到指定经纬度居中\n       * @param {Array} loc 经纬度数组\n       */\n      moveTo(loc) {\n        const view = this.map.getView()\n        view.animate({\n          center: loc\n        })\n      }\n    },\n    created() {\n      /**\n       * 图形绑定的事件集合，存储格式：\n       * { click: [{type, feature, listener, uid}, ...], movestart: [..]}\n       * type: 事件类型\n       * feature：触发的图形对象\n       * listener： Vue组件绑定的事件句柄\n       * uid: Vue组件实例id\n       */\n      this._featureEvents = {}\n\n      // 初始化图层瓦片服务配置\n      this.layerConfig().then(layers => {\n        setLayerConfig(layers)\n      })\n    },\n    mounted() {\n      const layer = createLayer(this.type)\n      const view = new View({\n        projection: 'EPSG:4326',\n        center: this.center,\n        zoom: this.zoom,\n        maxZoom: this.maxZoom,\n        minZoom: this.minZoom\n      })\n      this.map = new Map({\n        layers: [layer],\n        target: this.$refs.map,\n        view: view,\n        // 删除默认的控件\n        controls: []\n      })\n\n      /**\n       * @event ready\n       * 地图初始化完成\n       */\n      this.$emit('ready', this.map, this)\n\n      // 绑定地图事件\n      Object.keys(this.$listeners).forEach(key => {\n        this.map.on(key, this.$listeners[key])\n      })\n    },\n    beforeDestroy() {\n      // 销毁地图事件\n      Object.keys(this.$listeners).forEach(key => {\n        this.map.un(key, this.$listeners[key])\n      })\n      // 销毁地图\n      this.map && this.map.disposeInternal()\n    }\n  }\n</script>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./map.vue?vue&type=template&id=1d799272&\"\nimport script from \"./map.vue?vue&type=script&lang=js&\"\nexport * from \"./map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Map from './src/map'\n\nMap.install = function (Vue) {\n  Vue.component(Map.name, Map)\n}\nexport default Map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"xdh-map-text hidden\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","import {Atlas, AtlasManager, Circle, Fill, Icon, IconImage, Image, RegularShape, Stroke, Style, Text} from 'ol/style'\n\n/**\n * style json对象解析，通过传入json格式数据解析成Style实例\n * @param {Object} options ,json数据，去匹配转化成Style实例,\n * 其中每个实例节点需要有className属性，为字符串，className包括:\n * Atlas/AtlasManager/Circle/Fill/Icon/IconImage/Image/RegularShape/Stroke/Style/Text\n * 分别匹配Style对应的对象实例，其余属性，为对象实例化时传入的对象；\n * 如果没有包含className的对象属性，则直接返回该对象。\n * 如：{\n *   className: 'Style',\n *   fill: {\n *     className: 'Fill',\n *     color: 'rgba(255, 255, 255, 0.2)'\n *   },\n *   stroke: {\n *     className: 'Stroke',\n *     color: '#ffcc33',\n *     width: 2\n *   },\n *   image: {\n *     className: 'Circle',\n *     radius: 7,\n *     fill: {\n *       className: 'Fill',\n *       color: '#ffcc33'\n *     }\n *   }\n * }\n * 解析后等同于\n *  new Style({\n *    fill: new Fill({\n *      color: 'rgba(255, 255, 255, 0.2)'\n *    }),\n *    stroke: new Stroke({\n *      color: '#ffcc33',\n *      width: 2\n *    }),\n *    image: new Circle({\n *      radius: 7,\n *      fill: new Fill({\n *        color: '#ffcc33'\n *      })\n *    })\n *  })\n */\n\nconst StyleMap = {Atlas, AtlasManager, Circle, Fill, Icon, IconImage, Image, RegularShape, Stroke, Style, Text}\n\nexport function parse(options) {\n  if (options && options.className && StyleMap[options.className]) {\n    let childOptions = {};\n    Object.keys(options).map(v => {\n      if (v !== 'className') {\n        if (typeof options[v] === 'object' && options[v].className) {\n          childOptions[v] = parse(options[v]);\n        } else {\n          childOptions[v] = options[v];\n        }\n      }\n    });\n    return new StyleMap[options.className](childOptions)\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","import Feature from 'ol/Feature'\n\nexport default {\n  methods: {\n    draw() {\n      // createStyle 方法由父类实现\n      const style = this.createStyle()\n      \n      // createGeometry 方法由父类实现\n      const geometry = this.createGeometry()\n      this.feature = new Feature(geometry)\n      this.feature.setStyle(style)\n      // 在图层上画图形\n      if (this.$parent && this.$parent.addFeature) {\n        this.$parent.addFeature(this.feature)\n        this.$parent.bindEvents(this)\n      }\n    },\n    update() {\n      if (!this.feature) return\n      \n      const geometry = this.createGeometry()\n      // 更新图形\n      this.feature.setGeometry(geometry)\n    }\n  },\n  mounted() {\n    // 文本组件不需要生成html节点\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el)\n    }\n    \n    // 先检查父组件的地图是否初始化完成\n    if (this.$parent && this.$parent.map) {\n      this.draw()\n      return\n    }\n    // 父组件地图未初始化，侦听完成事件\n    this.$parent.$on('ready', map => {\n      this.draw()\n    })\n    \n  },\n  beforeDestroy() {\n    if (this.$parent && this.$parent.removeFeature && this.feature) {\n      this.$parent.removeFeature(this.feature)\n      this.$parent.unbindEvents(this)\n    }\n  }\n  \n}\n","<template>\n  <div class=\"xdh-map-text hidden\"></div>\n</template>\n\n<script>\n  import {parse} from 'utils/Style'\n  import FeatureMixin from 'utils/Feature'\n  import Point from 'ol/geom/Point'\n\n  export default {\n    name: 'XdhMapText',\n    mixins: [FeatureMixin],\n    props: {\n      // 经纬度坐标\n      loc: {\n        type: Array,\n        required: true\n      },\n      // 文本内容\n      content: {\n        type: String\n      },\n      // 字体\n      font: {\n        type: String,\n        default: '14px'\n      },\n      // 文本样式\n      color: {\n        type: String,\n        default: '#333'\n      },\n      // 背景颜色\n      background: {\n        type: String,\n        default: 'transparent'\n      },\n      // 边框颜色\n      border: {\n        type: String,\n        default: 'transparent'\n      },\n      // 内边距\n      padding: {\n        type: Array,\n        default() {\n          return [2, 2, 2, 2]\n        }\n      },\n      // 位置偏移\n      offset: {\n        type: Array,\n        default() {\n          return [0, 0]\n        }\n      }\n    },\n    computed: {\n      fullFont() {\n        return `${this.font} sans-serif`\n      },\n      coordinate() {\n        // 转换坐标的数组类型\n        return this.loc.map(n => Number.parseFloat(n))\n      }\n    },\n    watch: {\n      /**\n       * 文本变化更新图形样式\n       */\n      content() {\n        const style = this.getStyle()\n        this.feature && this.feature.setStyle(style)\n      }\n    },\n    methods: {\n      createStyle() {\n        return parse({\n          className: 'Style',\n          text: {\n            className: 'Text',\n            text: this.content,\n            font: this.fullFont,\n            fill: {\n              className: 'Fill',\n              color: this.color\n            },\n            backgroundFill: {\n              className: 'Fill',\n              color: this.background\n            },\n            backgroundStroke: {\n              className: 'Stroke',\n              color: this.border\n            },\n            padding: this.padding,\n            offsetX: this.offset[0],\n            offsetY: this.offset[1]\n          }\n        })\n      },\n      createGeometry() {\n        return new Point(this.coordinate)\n      }\n\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./text.vue?vue&type=template&id=075ccc55&\"\nimport script from \"./text.vue?vue&type=script&lang=js&\"\nexport * from \"./text.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Text from './src/text'\n\nText.install = function (Vue) {\n  Vue.component(Text.name, Text)\n}\nexport default Text\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div></div>\n</template>\n\n<script>\n  import Polygon from 'ol/geom/Polygon'\n  import {parse} from 'utils/Style'\n  import FeatureMixin from 'utils/Feature'\n\n  // 左上角为开始点\n  export default {\n    name: 'XdhMapRectangle',\n    mixins: [FeatureMixin],\n    props: {\n      loc: {\n        type: Array,\n        required: true\n      },\n      width: {\n        type: Number,\n        default: 0,\n        required: true\n      },\n      height: {\n        type: Number,\n        default: 0,\n        required: true\n      },\n      background: {\n        type: String,\n        default: 'red'\n      },\n      strokeWidth: {\n        type: Number,\n        default: 0\n      },\n      strokeColor: {\n        type: String,\n        default: ''\n      },\n      zIndex: {\n        type: Number\n      }\n    },\n    computed: {\n      coordinate() {\n        // 转换坐标的数组类型\n        return this.loc.map(n => Number.parseFloat(n))\n      },\n      coordinates() {\n        const loc = this.coordinate\n        return [\n          loc,\n          [loc[0] + this.width, loc[1]],\n          [loc[0] + this.width, loc[1] - this.height],\n          [loc[0], loc[1] - this.height],\n          loc\n        ]\n      }\n    },\n    methods: {\n      createStyle() {\n        return parse({\n          className: 'Style',\n          fill: {\n            className: 'Fill',\n            color: this.background\n          },\n          stroke: {\n            className: 'Stroke',\n            width: this.strokeWidth,\n            color: this.strokeColor\n          },\n          text: {\n            className: 'Text',\n            text: '阿斯顿发生地方'\n          },\n          zIndex: this.zIndex\n        })\n      },\n      createGeometry() {\n        return new Polygon([this.coordinates])\n      }\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rectangle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rectangle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./rectangle.vue?vue&type=template&id=89228cbe&\"\nimport script from \"./rectangle.vue?vue&type=script&lang=js&\"\nexport * from \"./rectangle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Rectangle from './src/rectangle'\n\nRectangle.install = function (Vue) {\n  Vue.component(Rectangle.name, Rectangle)\n}\nexport default Rectangle\n","import Map from './map'\nimport Text from './text'\nimport Rectangle from './rectangle'\nimport '../theme/index.scss'\n\nconst components = [\n  Map,\n  Text,\n  Rectangle\n]\n\nconst install = function (Vue) {\n  if (install.installed) return\n  \n  components.forEach(component => Vue.component(component.name, component))\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue)\n}\n\nexport default {\n  install,\n  ...components\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}
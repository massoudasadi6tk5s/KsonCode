{"version":3,"sources":["webpack://xdhmap/webpack/universalModuleDefinition","webpack://xdhmap/webpack/bootstrap","webpack://xdhmap/./node_modules/rbush/index.js","webpack://xdhmap/./node_modules/quickselect/quickselect.js","webpack://xdhmap/./node_modules/clipboard/dist/clipboard.js","webpack://xdhmap/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://xdhmap/./packages/map/src/map.vue?38f1","webpack://xdhmap/./node_modules/ol/util.js","webpack://xdhmap/./node_modules/ol/AssertionError.js","webpack://xdhmap/./node_modules/ol/CollectionEventType.js","webpack://xdhmap/./node_modules/ol/ObjectEventType.js","webpack://xdhmap/./node_modules/ol/obj.js","webpack://xdhmap/./node_modules/ol/events.js","webpack://xdhmap/./node_modules/ol/Disposable.js","webpack://xdhmap/./node_modules/ol/functions.js","webpack://xdhmap/./node_modules/ol/events/Event.js","webpack://xdhmap/./node_modules/ol/events/Target.js","webpack://xdhmap/./node_modules/ol/events/EventType.js","webpack://xdhmap/./node_modules/ol/Observable.js","webpack://xdhmap/./node_modules/ol/Object.js","webpack://xdhmap/./node_modules/ol/Collection.js","webpack://xdhmap/./node_modules/ol/MapEvent.js","webpack://xdhmap/./node_modules/ol/MapBrowserEvent.js","webpack://xdhmap/./node_modules/ol/has.js","webpack://xdhmap/./node_modules/ol/MapBrowserEventType.js","webpack://xdhmap/./node_modules/ol/MapBrowserPointerEvent.js","webpack://xdhmap/./node_modules/ol/pointer/EventType.js","webpack://xdhmap/./node_modules/ol/pointer/EventSource.js","webpack://xdhmap/./node_modules/ol/pointer/MouseSource.js","webpack://xdhmap/./node_modules/ol/pointer/MsSource.js","webpack://xdhmap/./node_modules/ol/pointer/NativeSource.js","webpack://xdhmap/./node_modules/ol/pointer/PointerEvent.js","webpack://xdhmap/./node_modules/ol/array.js","webpack://xdhmap/./node_modules/ol/pointer/TouchSource.js","webpack://xdhmap/./node_modules/ol/pointer/PointerEventHandler.js","webpack://xdhmap/./node_modules/ol/MapBrowserEventHandler.js","webpack://xdhmap/./node_modules/ol/MapEventType.js","webpack://xdhmap/./node_modules/ol/MapProperty.js","webpack://xdhmap/./node_modules/ol/render/EventType.js","webpack://xdhmap/./node_modules/ol/TileState.js","webpack://xdhmap/./node_modules/ol/asserts.js","webpack://xdhmap/./node_modules/ol/structs/PriorityQueue.js","webpack://xdhmap/./node_modules/ol/TileQueue.js","webpack://xdhmap/./node_modules/ol/tilegrid/common.js","webpack://xdhmap/./node_modules/ol/math.js","webpack://xdhmap/./node_modules/ol/centerconstraint.js","webpack://xdhmap/./node_modules/ol/resolutionconstraint.js","webpack://xdhmap/./node_modules/ol/rotationconstraint.js","webpack://xdhmap/./node_modules/ol/ViewHint.js","webpack://xdhmap/./node_modules/ol/ViewProperty.js","webpack://xdhmap/./node_modules/ol/coordinate.js","webpack://xdhmap/./node_modules/ol/easing.js","webpack://xdhmap/./node_modules/ol/extent/Corner.js","webpack://xdhmap/./node_modules/ol/extent/Relationship.js","webpack://xdhmap/./node_modules/ol/extent.js","webpack://xdhmap/./node_modules/ol/geom/GeometryType.js","webpack://xdhmap/./node_modules/ol/geom/GeometryLayout.js","webpack://xdhmap/./node_modules/ol/geom/flat/transform.js","webpack://xdhmap/./node_modules/ol/sphere.js","webpack://xdhmap/./node_modules/ol/proj/Units.js","webpack://xdhmap/./node_modules/ol/proj/Projection.js","webpack://xdhmap/./node_modules/ol/proj/epsg3857.js","webpack://xdhmap/./node_modules/ol/proj/epsg4326.js","webpack://xdhmap/./node_modules/ol/proj/projections.js","webpack://xdhmap/./node_modules/ol/proj/transforms.js","webpack://xdhmap/./node_modules/ol/proj.js","webpack://xdhmap/./node_modules/ol/transform.js","webpack://xdhmap/./node_modules/ol/geom/Geometry.js","webpack://xdhmap/./node_modules/ol/geom/SimpleGeometry.js","webpack://xdhmap/./node_modules/ol/geom/flat/area.js","webpack://xdhmap/./node_modules/ol/geom/flat/closest.js","webpack://xdhmap/./node_modules/ol/geom/flat/deflate.js","webpack://xdhmap/./node_modules/ol/geom/flat/inflate.js","webpack://xdhmap/./node_modules/ol/geom/flat/simplify.js","webpack://xdhmap/./node_modules/ol/geom/LinearRing.js","webpack://xdhmap/./node_modules/ol/geom/Point.js","webpack://xdhmap/./node_modules/ol/geom/flat/contains.js","webpack://xdhmap/./node_modules/ol/geom/flat/interiorpoint.js","webpack://xdhmap/./node_modules/ol/geom/flat/segments.js","webpack://xdhmap/./node_modules/ol/geom/flat/intersectsextent.js","webpack://xdhmap/./node_modules/ol/geom/flat/reverse.js","webpack://xdhmap/./node_modules/ol/geom/flat/orient.js","webpack://xdhmap/./node_modules/ol/geom/Polygon.js","webpack://xdhmap/./node_modules/ol/View.js","webpack://xdhmap/./node_modules/ol/dom.js","webpack://xdhmap/./node_modules/ol/layer/Property.js","webpack://xdhmap/./node_modules/ol/layer/Base.js","webpack://xdhmap/./node_modules/ol/source/State.js","webpack://xdhmap/./node_modules/ol/layer/Group.js","webpack://xdhmap/./node_modules/ol/size.js","webpack://xdhmap/./node_modules/ol/PluggableMap.js","webpack://xdhmap/./node_modules/ol/control/Control.js","webpack://xdhmap/./node_modules/ol/css.js","webpack://xdhmap/./node_modules/ol/layer/Layer.js","webpack://xdhmap/./node_modules/ol/control/Attribution.js","webpack://xdhmap/./node_modules/ol/control/Rotate.js","webpack://xdhmap/./node_modules/ol/control/Zoom.js","webpack://xdhmap/./node_modules/ol/control/util.js","webpack://xdhmap/./node_modules/ol/Kinetic.js","webpack://xdhmap/./node_modules/ol/interaction/Property.js","webpack://xdhmap/./node_modules/ol/interaction/Interaction.js","webpack://xdhmap/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://xdhmap/./node_modules/ol/events/condition.js","webpack://xdhmap/./node_modules/ol/interaction/Pointer.js","webpack://xdhmap/./node_modules/ol/interaction/DragPan.js","webpack://xdhmap/./node_modules/ol/interaction/DragRotate.js","webpack://xdhmap/./node_modules/ol/render/Box.js","webpack://xdhmap/./node_modules/ol/interaction/DragBox.js","webpack://xdhmap/./node_modules/ol/interaction/DragZoom.js","webpack://xdhmap/./node_modules/ol/events/KeyCode.js","webpack://xdhmap/./node_modules/ol/interaction/KeyboardPan.js","webpack://xdhmap/./node_modules/ol/interaction/KeyboardZoom.js","webpack://xdhmap/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://xdhmap/./node_modules/ol/interaction/PinchRotate.js","webpack://xdhmap/./node_modules/ol/interaction/PinchZoom.js","webpack://xdhmap/./node_modules/ol/interaction.js","webpack://xdhmap/./node_modules/ol/reproj/common.js","webpack://xdhmap/./node_modules/ol/ImageBase.js","webpack://xdhmap/./node_modules/ol/ImageState.js","webpack://xdhmap/./node_modules/ol/ImageCanvas.js","webpack://xdhmap/./node_modules/ol/LayerType.js","webpack://xdhmap/./node_modules/ol/layer/VectorRenderType.js","webpack://xdhmap/./node_modules/ol/render/Event.js","webpack://xdhmap/./node_modules/ol/structs/LRUCache.js","webpack://xdhmap/./node_modules/ol/render/canvas.js","webpack://xdhmap/./node_modules/ol/color.js","webpack://xdhmap/./node_modules/ol/colorlike.js","webpack://xdhmap/./node_modules/ol/render/VectorContext.js","webpack://xdhmap/./node_modules/ol/render/canvas/Immediate.js","webpack://xdhmap/./node_modules/ol/style/IconImageCache.js","webpack://xdhmap/./node_modules/ol/renderer/Map.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/Map.js","webpack://xdhmap/./node_modules/ol/renderer/Layer.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/Layer.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://xdhmap/./node_modules/ol/TileRange.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://xdhmap/./node_modules/ol/render/ReplayGroup.js","webpack://xdhmap/./node_modules/ol/render/ReplayType.js","webpack://xdhmap/./node_modules/ol/geom/flat/length.js","webpack://xdhmap/./node_modules/ol/geom/flat/textpath.js","webpack://xdhmap/./node_modules/ol/render/canvas/Instruction.js","webpack://xdhmap/./node_modules/ol/render/replay.js","webpack://xdhmap/./node_modules/ol/render/canvas/Replay.js","webpack://xdhmap/./node_modules/ol/render/canvas/ImageReplay.js","webpack://xdhmap/./node_modules/ol/render/canvas/LineStringReplay.js","webpack://xdhmap/./node_modules/ol/render/canvas/PolygonReplay.js","webpack://xdhmap/./node_modules/ol/geom/flat/straightchunk.js","webpack://xdhmap/./node_modules/ol/style/TextPlacement.js","webpack://xdhmap/./node_modules/ol/render/canvas/TextReplay.js","webpack://xdhmap/./node_modules/ol/render/canvas/ReplayGroup.js","webpack://xdhmap/./node_modules/ol/renderer/vector.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://xdhmap/./node_modules/ol/layer/VectorTileRenderType.js","webpack://xdhmap/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://xdhmap/./node_modules/ol/Map.js","webpack://xdhmap/./node_modules/ol/style/Image.js","webpack://xdhmap/./node_modules/ol/style/RegularShape.js","webpack://xdhmap/./node_modules/ol/style/Circle.js","webpack://xdhmap/./node_modules/ol/style/Fill.js","webpack://xdhmap/./node_modules/ol/style/Stroke.js","webpack://xdhmap/./node_modules/ol/style/Style.js","webpack://xdhmap/./node_modules/ol/layer/Vector.js","webpack://xdhmap/./node_modules/ol/format/FormatType.js","webpack://xdhmap/./node_modules/ol/featureloader.js","webpack://xdhmap/./node_modules/ol/loadingstrategy.js","webpack://xdhmap/./node_modules/ol/source/Source.js","webpack://xdhmap/./node_modules/ol/source/VectorEventType.js","webpack://xdhmap/./node_modules/ol/structs/RBush.js","webpack://xdhmap/./node_modules/ol/source/Vector.js","webpack://xdhmap/./utils/setting.js","webpack://xdhmap/./node_modules/ol/layer/TileProperty.js","webpack://xdhmap/./node_modules/ol/layer/Tile.js","webpack://xdhmap/./node_modules/ol/Tile.js","webpack://xdhmap/./node_modules/ol/ImageTile.js","webpack://xdhmap/./node_modules/ol/tilecoord.js","webpack://xdhmap/./node_modules/ol/TileCache.js","webpack://xdhmap/./node_modules/ol/reproj.js","webpack://xdhmap/./node_modules/ol/reproj/Triangulation.js","webpack://xdhmap/./node_modules/ol/reproj/Tile.js","webpack://xdhmap/./node_modules/ol/tileurlfunction.js","webpack://xdhmap/./node_modules/ol/tilegrid/TileGrid.js","webpack://xdhmap/./node_modules/ol/tilegrid.js","webpack://xdhmap/./node_modules/ol/source/Tile.js","webpack://xdhmap/./node_modules/ol/source/TileEventType.js","webpack://xdhmap/./node_modules/ol/source/UrlTile.js","webpack://xdhmap/./node_modules/ol/source/TileImage.js","webpack://xdhmap/./node_modules/ol/source/XYZ.js","webpack://xdhmap/./node_modules/ol/source/OSM.js","webpack://xdhmap/./node_modules/ol/tilegrid/WMTS.js","webpack://xdhmap/./node_modules/ol/source/WMTSRequestEncoding.js","webpack://xdhmap/./node_modules/ol/uri.js","webpack://xdhmap/./node_modules/ol/source/WMTS.js","webpack://xdhmap/./utils/plugins/TileSuperMapRest.js","webpack://xdhmap/./utils/layers.js","webpack://xdhmap/packages/map/src/map.vue","webpack://xdhmap/./packages/map/src/map.vue?4837","webpack://xdhmap/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://xdhmap/./packages/map/src/map.vue","webpack://xdhmap/./packages/map/index.js","webpack://xdhmap/./packages/text/src/text.vue?3d9b","webpack://xdhmap/./node_modules/ol/style/Atlas.js","webpack://xdhmap/./node_modules/ol/webgl.js","webpack://xdhmap/./node_modules/ol/style/AtlasManager.js","webpack://xdhmap/./node_modules/ol/style/IconAnchorUnits.js","webpack://xdhmap/./node_modules/ol/style/IconImage.js","webpack://xdhmap/./node_modules/ol/style/IconOrigin.js","webpack://xdhmap/./node_modules/ol/style/Icon.js","webpack://xdhmap/./node_modules/ol/style/Text.js","webpack://xdhmap/./utils/style.js","webpack://xdhmap/./node_modules/ol/Feature.js","webpack://xdhmap/./utils/util.js","webpack://xdhmap/./utils/mixins/feature.js","webpack://xdhmap/./utils/mixins/base.js","webpack://xdhmap/./utils/mixins/stroke.js","webpack://xdhmap/./utils/mixins/text.js","webpack://xdhmap/./utils/mixins/clean.js","webpack://xdhmap/./utils/mixins/factory.js","webpack://xdhmap/packages/text/src/text.vue","webpack://xdhmap/./packages/text/src/text.vue?0e16","webpack://xdhmap/./packages/text/src/text.vue","webpack://xdhmap/./packages/text/index.js","webpack://xdhmap/./packages/rectangle/src/rectangle.vue?8394","webpack://xdhmap/./packages/polygon/src/polygon.vue?a5a4","webpack://xdhmap/packages/polygon/src/polygon.vue","webpack://xdhmap/./packages/polygon/src/polygon.vue?b69b","webpack://xdhmap/./packages/polygon/src/polygon.vue","webpack://xdhmap/packages/rectangle/src/rectangle.vue","webpack://xdhmap/./packages/rectangle/src/rectangle.vue?bb5e","webpack://xdhmap/./packages/rectangle/src/rectangle.vue","webpack://xdhmap/./packages/rectangle/index.js","webpack://xdhmap/./packages/polygon/index.js","webpack://xdhmap/./packages/circle/src/circle.vue?7636","webpack://xdhmap/./node_modules/ol/geom/Circle.js","webpack://xdhmap/packages/circle/src/circle.vue","webpack://xdhmap/./packages/circle/src/circle.vue?a834","webpack://xdhmap/./packages/circle/src/circle.vue","webpack://xdhmap/./packages/circle/index.js","webpack://xdhmap/./packages/line/src/line.vue?568d","webpack://xdhmap/./node_modules/ol/geom/flat/interpolate.js","webpack://xdhmap/./node_modules/ol/geom/LineString.js","webpack://xdhmap/packages/line/src/line.vue","webpack://xdhmap/./packages/line/src/line.vue?85d6","webpack://xdhmap/./packages/line/src/line.vue","webpack://xdhmap/./packages/line/index.js","webpack://xdhmap/./packages/placement/src/placement.vue?8837","webpack://xdhmap/packages/placement/src/placement.vue","webpack://xdhmap/./packages/placement/src/placement.vue?8428","webpack://xdhmap/./packages/placement/src/placement.vue","webpack://xdhmap/./packages/placement/index.js","webpack://xdhmap/./packages/pointer/src/pointer.vue?6c46","webpack://xdhmap/packages/pointer/src/pointer.vue","webpack://xdhmap/./packages/pointer/src/pointer.vue?1b84","webpack://xdhmap/./packages/pointer/src/pointer.vue","webpack://xdhmap/./packages/pointer/index.js","webpack://xdhmap/./packages/index.js","webpack://xdhmap/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","global","quickselectStep","defaultCompare","z","exp","sd","newLeft","floor","newRight","swap","tmp","_typeof","iterator","obj","constructor","_createClass","defineProperties","target","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","_clipboardAction","_clipboardAction2","_interopRequireDefault","_tinyEmitter","_tinyEmitter2","_goodListener","_goodListener2","_classCallCheck","instance","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","Clipboard","_Emitter","trigger","options","_this","getPrototypeOf","resolveOptions","listenClick","arguments","undefined","action","defaultAction","defaultTarget","text","defaultText","container","document","body","_this2","listener","e","onClick","delegateTarget","currentTarget","clipboardAction","emitter","getAttributeValue","selector","querySelector","destroy","actions","support","queryCommandSupported","forEach","suffix","element","attribute","hasAttribute","getAttribute","_select","_select2","ClipboardAction","initSelection","selectedText","selectFake","selectTarget","isRTL","documentElement","removeFake","fakeHandlerCallback","fakeHandler","addEventListener","fakeElem","createElement","style","fontSize","border","padding","position","yPosition","window","pageYOffset","scrollTop","top","setAttribute","appendChild","copyText","removeEventListener","removeChild","succeeded","execCommand","err","handleResult","emit","clearSelection","focus","getSelection","removeAllRanges","set","_action","Error","nodeType","_target","select","nodeName","isReadOnly","setSelectionRange","removeAttribute","selection","range","createRange","selectNodeContents","addRange","toString","E","on","callback","ctx","fn","once","off","_","evtArr","evts","liveEvents","is","delegate","listen","type","string","listenNode","nodeList","listenNodeList","listenSelector","Array","HTMLElement","String","closest","_delegate","useCapture","listenerFn","elements","querySelectorAll","map","DOCUMENT_NODE_TYPE","Element","matches","proto","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","parentNode","setPublicPath_i","currentScript","src","match","mapvue_type_template_id_79a2a374_render","_vm","_h","$createElement","_c","_self","ref","staticClass","_t","staticRenderFns","util_abstract","uidCounter_","getUid","ol_uid","VERSION","AssertionError_AssertionError","AssertionError","code","split","message","ol_AssertionError","CollectionEventType","ADD","REMOVE","ObjectEventType","PROPERTYCHANGE","obj_assign","assign","var_sources","arguments$1","output","ii","source","obj_clear","getValues","values","obj_isEmpty","bindListener","listenerObj","boundListener","evt","bindTo","callOnce","unlistenByKey","findListener","listeners","opt_this","opt_setDeleteIndex","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","keys","opt_once","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","events_Event","Target_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","events_Target","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_Observable","EventTarget","Observable","revision_","changed","getRevision","isArray","un","ol_Observable","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Property","LENGTH","CollectionEvent","opt_element","Collection_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_Collection","MapEvent","opt_frameState","frameState","ol_MapEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ol_MapBrowserEvent","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","getContext","setLineDash","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserPointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","EventSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","pointer_NativeSource","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","pointer_PointerEvent","binarySearch","haystack","needle","opt_comparator","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","linearFindNearest","direction","reverseSubArray","begin","end","extension","array_remove","equals","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","every","currentVal","res","CLICK_COUNT_TIMEOUT","TouchSource_POINTER_TYPE","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","Number","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","pointer_TouchSource","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapEventType","POSTRENDER","MOVESTART","MOVEEND","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","PI","modulo","lerp","createExtent","extent","center","none","createSnapToResolutions","resolutions","resolution","delta","power","createSnapToPower","maxResolution","opt_maxLevel","offset","oldLevel","newLevel","disable","rotation","rotationconstraint_none","createSnapToN","theta","createSnapToZero","opt_tolerance","tolerance","ViewHint","ANIMATING","INTERACTING","ViewProperty","CENTER","RESOLUTION","ROTATION","coordinate_add","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getCorner","corner","getForViewAndSize","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","transform_rotate","anchor","anchorX","anchorY","transform_scale","sx","sy","transform_translate","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_RADIUS","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections_get","projections_add","projection","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","addProjections","projections","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","proj_getTransform","proj_transform","addCommon","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","dx2","dy2","invert","det","determinant","tmpTransform","Geometry_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","rotate","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","geom_SimpleGeometry","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedOffset","markers","last","first","maxSquaredDistance","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_LinearRing","Point_Point","Point","geom_Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRing","intersectsLinearRingArray","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","reverse","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getCenter","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerX","centerY","setResolution","centerOn","hint","returnValue","defaultMaxZoom","defaultZoomFactor","defaultMaxResolution","defaultMinResolution","enableRotation","ol_View","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","replaceChild","removeNode","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_BaseLayer","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Base","State","UNDEFINED","READY","Group_Property","LAYERS","Group_LayerGroup","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","Group","hasArea","size_scale","ratio","toSize","PluggableMap_PluggableMap","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","getTarget","getTargetElement","getElementById","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","mapBrowserEvent","interactionsArray","getActive","cont","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","moveStart","idle","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","ol_PluggableMap","getSource","loading","Control_Control","Control","target_","listenerKeys","getMap","control_Control","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","cache","font","family","fontFamily","Layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","visibleAtResolution","layer_Layer","Attribution_Attribution","Attribution","Attribution_render","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","control_Zoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_Interaction","Interaction","setActive","active","pan","opt_duration","Interaction_rotate","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","DoubleClickZoom","DoubleClickZoom_handleEvent","delta_","stopEvent","interaction_DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_PointerInteraction","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","Pointer_centroid","pointerEvents","Pointer","DragPan_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragPan","DragRotate_DragRotate","DragRotate","lastAngle_","interaction_DragRotate","Box_RenderBox","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","interaction_DragBox","DragZoom_DragZoom","DragZoom","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan_KeyboardPan","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom_KeyboardZoom","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_PinchZoom","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase_ImageBase","ImageBase","getImage","getPixelRatio","ol_ImageBase","ImageState","ImageCanvas_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","ol_ImageCanvas","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","render_Event","LRUCache_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","structs_LRUCache","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromNamed","el","rgb","fromString","MAX_CACHE_SIZE","cacheSize","fromStringInternal_","asArray","g","exec","hasAlpha","substr","normalize","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate_CanvasImmediateRenderer","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","IconImageCache","cache_","cacheSize_","maxCacheSize_","crossOrigin","colorString","expire","iconImage","maxCacheSize","shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","worldsAway","numLayers","layerRenderer","getLayerRenderer","getWrapX","hasFeature","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","renderer_Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","forEachLayerAtCoordinate","ctor","canvas_Map","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","tileCoord","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","renderer_Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","canvas_Layer","IntermediateCanvas_IntermediateCanvasRenderer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","IntermediateCanvas","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textReplay","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","Replay","ImageReplay_CanvasImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","ImageReplay","LineStringReplay_CanvasLineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextPlacement","LINE","TextReplay_CanvasTextReplay","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","TextReplay","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","arraySize","error","replayDeclutter","zz","replayData","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","MultiPoint","renderMultiPointGeometry","MultiLineString","renderMultiLineStringGeometry","MultiPolygon","renderMultiPolygonGeometry","GeometryCollection","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","replayGroup","circleReplay","renderFeature","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageReplay","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","ol_Map","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","style_Image","RegularShape_RegularShape","ImageStyle","RegularShape","checksums_","hitDetectionCanvas_","origin_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getPoints","getRadius","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","recalculate","checksum","style_RegularShape","CircleStyle","setRadius","style_Circle","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","setGeometry","zIndex_","toFunction","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","Vector_Property","RENDER_ORDER","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","style_","styleFunction_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","getStyle","setRenderOrder","Vector","FormatType","ARRAY_BUFFER","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","sourceOrTile","addFeatures","loadingstrategy_all","Source_Source","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","source_Source","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","structs_RBush","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","removed","setLoader","source_Vector","OSM","server","preview","Baidu","Amap","SuperMap","Google","Founder","validate","setting_set","setting_get","toArray","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","Tile_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","fillRect","ol_ImageTile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache_TileCache","TileCache","pruneExceptNewestZ","ol_TileCache","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","stop","tmpTileCoord","TileGrid_TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","tilegrid_wrapX","extentFromProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","source_UrlTile","TileImage_TileImage","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","source_TileImage","XYZ_XYZ","source_XYZ","ATTRIBUTION","source_OSM","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","WMTSRequestEncoding","KVP","REST","appendParams","uri","params","keyParams","encodeURIComponent","qs","WMTS_WMTS","WMTS","requestEncoding","version_","version","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","source_WMTS","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","Unit","METER","KILOMETER","MILE","YARD","DEGREE","MILLIMETER","CENTIMETER","INCH","DECIMETER","FOOT","SECOND","MINUTE","RADIAN","ServerType","ISERVER","IPORTAL","ONLINE","resolutionToScale","dpi","mapUnit","inchPerMeter","meterPerMapUnit","getMeterPerMapUnit","scaleToResolution","meterPerMapUnitValue","earchRadiusInMeters","TileSuperMapRest_TileSuperMapRest","[object Object]","layerUrl","serverType","super","logo","cacheEnabled","layersID","tileProxy","_url","tileSetsIndex","tempIndex","me","getAllRequestParams","redirect","transparent","stringify","prjCoordSys","overlapDisplayed","overlapDisplayedOptions","tileversion","getFullRequestUrl","_paramsChanged","_layerUrl","createLayerUrl","encodeURI","getRequestParamString","requestParams","createTileGrid","unit","getTime","tileSets","tileVersions","changeTilesVersion","mergeTileVersionParam","tileVersion","mapJSONObj","bounds","maxReolution","viewer","coordUnit","visibleScalesEnabled","visibleScales","sortNumber","createBaiduLayer","config","random","createFounderLayer","tileSizePixels","basePath","col","row","createLayer","mapvue_type_script_lang_js_","layerConfig","Promise","resolve","methods","feat","getFeatureAtPixel","_featureEvents","find","typeEvents","_eventHandler","vm","$listeners","_bind","_uid","findIndex","zoomTo","loc","isMap","then","$refs","$emit","src_mapvue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","component","src_map","install","Vue","packages_map","textvue_type_template_id_60e5a8fa_render","textvue_type_template_id_60e5a8fa_staticRenderFns","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","deltaWidth","deltaHeight","updateBlocks_","args","style_Atlas","CONTEXT_IDS","opt_attributes","MAX_TEXTURE_SIZE","webgl_canvas","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","style_AtlasManager","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconImage_get","style_IconImage","IconOrigin","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Icon","DEFAULT_FILL_COLOR","Text_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","StyleMap","Atlas","AtlasManager","parse","childOptions","v","Feature_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","ol_Feature","BASE_TYPES","capitalize","rest","lowerRest","toUpperCase","prefix","fixName","keyMap","mix","mv","featureStyleRender","baseStyleRender","strokeRender","textRender","mixProps","propsArray","from","fixedProps","entries","getParent","$parent","mapReady","$once","mixins_feature","createGeometry","bindEvents","createStyle","draw","unbindEvents","base","watch","deep","computed","stroke_options","prefixOptions","mixins_stroke","mixins_text","background","fontWithFamily","clean","$el","textvue_type_script_lang_js_options","factoryMixin","vueProps","required","textvue_type_script_lang_js_","mixins","styleFactory","src_textvue_type_script_lang_js_","text_component","src_text","packages_text","rectanglevue_type_template_id_4ae1176a_render","_b","attrs","handleDraw","$props","rectanglevue_type_template_id_4ae1176a_staticRenderFns","polygonvue_type_template_id_31041c7f_render","polygonvue_type_template_id_31041c7f_staticRenderFns","polygonvue_type_script_lang_js_vueProps","polygonvue_type_script_lang_js_props","polygonvue_type_script_lang_js_","src_polygonvue_type_script_lang_js_","polygon_component","src_polygon","rectanglevue_type_script_lang_js_vueProps","rectanglevue_type_script_lang_js_props","rectanglevue_type_script_lang_js_","components","XdhMapPolygon","$attrs","src_rectanglevue_type_script_lang_js_","rectangle_component","rectangle","packages_rectangle","packages_polygon","circlevue_type_template_id_85abfdb0_render","circlevue_type_template_id_85abfdb0_staticRenderFns","Circle_Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","geom_Circle","circlevue_type_script_lang_js_vueProps","circlevue_type_script_lang_js_props","circlevue_type_script_lang_js_","src_circlevue_type_script_lang_js_","circle_component","circle","packages_circle","linevue_type_template_id_4fcb5a61_render","linevue_type_template_id_4fcb5a61_staticRenderFns","interpolatePoint","pointY","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","LineString_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geom_LineString","linevue_type_script_lang_js_vueProps","arrow","arrowAnchor","arrowEach","linevue_type_script_lang_js_props","linevue_type_script_lang_js_","arrowStyle","lastSegment","src_linevue_type_script_lang_js_","line_component","line","packages_line","placementvue_type_template_id_1c74675d_render","class","placementvue_type_template_id_1c74675d_staticRenderFns","placementvue_type_script_lang_js_","src_placementvue_type_script_lang_js_","placement_component","packages_placement","pointervue_type_template_id_733569cf_render","is-lock","lock","click","copy","_v","_s","pointervue_type_template_id_733569cf_staticRenderFns","pointervue_type_script_lang_js_vueProps","precision","pointervue_type_script_lang_js_props","pointervue_type_script_lang_js_","XdhMapPlacement","pick","toFixed","clipboard","clipboard_default","btn","ready","src_pointervue_type_script_lang_js_","pointer_component","packages_pointer","installed","packages_0","__webpack_exports__"],"mappings":"CAAA,SAAAA,EAAAC,GACA,kBAAAC,SAAA,kBAAAC,OACAA,OAAAD,QAAAD,IACA,oBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,kBAAAC,QACAA,QAAA,UAAAD,IAEAD,EAAA,UAAAC,KARA,CASC,qBAAAK,UAAAC,KAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAV,QAAA,IAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAvB,GACA,qBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,8CChFAvC,EAAAD,QAAAyC,EACAxC,EAAAD,QAAA0C,QAAAD,EAEA,IAAAE,EAAkBpC,EAAQ,QAE1B,SAAAkC,EAAAG,EAAAC,GACA,KAAAxC,gBAAAoC,GAAA,WAAAA,EAAAG,EAAAC,GAGAxC,KAAAyC,YAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAvC,KAAA4C,YAAAF,KAAAC,IAAA,EAAAD,KAAAG,KAAA,GAAA7C,KAAAyC,cAEAD,GACAxC,KAAA8C,YAAAN,GAGAxC,KAAA+C,QAwbA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAA,EAAA,OAAAD,EAAAE,QAAAH,GAEA,QAAA7C,EAAA,EAAmBA,EAAA8C,EAAAG,OAAkBjD,IACrC,GAAA+C,EAAAF,EAAAC,EAAA9C,IAAA,OAAAA,EAEA,SAIA,SAAAkD,EAAAC,EAAAC,GACAC,EAAAF,EAAA,EAAAA,EAAAG,SAAAL,OAAAG,EAAAD,GAIA,SAAAE,EAAAF,EAAAI,EAAAzB,EAAAsB,EAAAI,GACAA,MAAAC,EAAA,OACAD,EAAAE,KAAAC,IACAH,EAAAI,KAAAD,IACAH,EAAAK,MAAAF,IACAH,EAAAM,MAAAH,IAEA,QAAAI,EAAA/D,EAAAuD,EAA0BvD,EAAA8B,EAAO9B,IACjC+D,EAAAZ,EAAAG,SAAAtD,GACAgE,EAAAR,EAAAL,EAAAc,KAAAb,EAAAW,MAGA,OAAAP,EAGA,SAAAQ,EAAAE,EAAAC,GAKA,OAJAD,EAAAR,KAAApB,KAAA8B,IAAAF,EAAAR,KAAAS,EAAAT,MACAQ,EAAAN,KAAAtB,KAAA8B,IAAAF,EAAAN,KAAAO,EAAAP,MACAM,EAAAL,KAAAvB,KAAAC,IAAA2B,EAAAL,KAAAM,EAAAN,MACAK,EAAAJ,KAAAxB,KAAAC,IAAA2B,EAAAJ,KAAAK,EAAAL,MACAI,EAGA,SAAAG,EAAAH,EAAAC,GAAgC,OAAAD,EAAAR,KAAAS,EAAAT,KAChC,SAAAY,EAAAJ,EAAAC,GAAgC,OAAAD,EAAAN,KAAAO,EAAAP,KAEhC,SAAAW,EAAAL,GAAwB,OAAAA,EAAAL,KAAAK,EAAAR,OAAAQ,EAAAJ,KAAAI,EAAAN,MACxB,SAAAY,EAAAN,GAAwB,OAAAA,EAAAL,KAAAK,EAAAR,MAAAQ,EAAAJ,KAAAI,EAAAN,MAExB,SAAAa,EAAAP,EAAAC,GACA,OAAA7B,KAAAC,IAAA4B,EAAAN,KAAAK,EAAAL,MAAAvB,KAAA8B,IAAAD,EAAAT,KAAAQ,EAAAR,QACApB,KAAAC,IAAA4B,EAAAL,KAAAI,EAAAJ,MAAAxB,KAAA8B,IAAAD,EAAAP,KAAAM,EAAAN,OAGA,SAAAc,EAAAR,EAAAC,GACA,IAAAT,EAAApB,KAAAC,IAAA2B,EAAAR,KAAAS,EAAAT,MACAE,EAAAtB,KAAAC,IAAA2B,EAAAN,KAAAO,EAAAP,MACAC,EAAAvB,KAAA8B,IAAAF,EAAAL,KAAAM,EAAAN,MACAC,EAAAxB,KAAA8B,IAAAF,EAAAJ,KAAAK,EAAAL,MAEA,OAAAxB,KAAAC,IAAA,EAAAsB,EAAAH,GACApB,KAAAC,IAAA,EAAAuB,EAAAF,GAGA,SAAAe,EAAAT,EAAAC,GACA,OAAAD,EAAAR,MAAAS,EAAAT,MACAQ,EAAAN,MAAAO,EAAAP,MACAO,EAAAN,MAAAK,EAAAL,MACAM,EAAAL,MAAAI,EAAAJ,KAGA,SAAAc,EAAAV,EAAAC,GACA,OAAAA,EAAAT,MAAAQ,EAAAL,MACAM,EAAAP,MAAAM,EAAAJ,MACAK,EAAAN,MAAAK,EAAAR,MACAS,EAAAL,MAAAI,EAAAN,KAGA,SAAAH,EAAAH,GACA,OACAA,WACAuB,OAAA,EACAZ,MAAA,EACAP,KAAAC,IACAC,KAAAD,IACAE,MAAAF,IACAG,MAAAH,KAOA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,GACA,IACAC,EADAC,EAAA,CAAAJ,EAAAC,GAGA,MAAAG,EAAAnC,OACAgC,EAAAG,EAAAC,MACAL,EAAAI,EAAAC,MAEAJ,EAAAD,GAAAvD,IAEA0D,EAAAH,EAAA1C,KAAAG,MAAAwC,EAAAD,GAAAvD,EAAA,GAAAA,EACAS,EAAA6C,EAAAI,EAAAH,EAAAC,EAAAC,GAEAE,EAAAE,KAAAN,EAAAG,IAAAF,IA1hBAjD,EAAAJ,UAAA,CAEA2D,IAAA,WACA,OAAA3F,KAAA4F,KAAA5F,KAAA6F,KAAA,KAGAC,OAAA,SAAAC,GAEA,IAAAxC,EAAAvD,KAAA6F,KACAG,EAAA,GACAxC,EAAAxD,KAAAwD,OAEA,IAAAwB,EAAAe,EAAAxC,GAAA,OAAAyC,EAEA,IACA5F,EAAA6F,EAAA9B,EAAA+B,EADAC,EAAA,GAGA,MAAA5C,EAAA,CACA,IAAAnD,EAAA,EAAA6F,EAAA1C,EAAAG,SAAAL,OAAmDjD,EAAA6F,EAAS7F,IAE5D+D,EAAAZ,EAAAG,SAAAtD,GACA8F,EAAA3C,EAAAc,KAAAb,EAAAW,KAEAa,EAAAe,EAAAG,KACA3C,EAAAc,KAAA2B,EAAAN,KAAAvB,GACAY,EAAAgB,EAAAG,GAAAlG,KAAA4F,KAAAzB,EAAA6B,GACAG,EAAAT,KAAAvB,IAGAZ,EAAA4C,EAAAV,MAGA,OAAAO,GAGAI,SAAA,SAAAL,GAEA,IAAAxC,EAAAvD,KAAA6F,KACArC,EAAAxD,KAAAwD,OAEA,IAAAwB,EAAAe,EAAAxC,GAAA,SAEA,IACAnD,EAAA6F,EAAA9B,EAAA+B,EADAC,EAAA,GAGA,MAAA5C,EAAA,CACA,IAAAnD,EAAA,EAAA6F,EAAA1C,EAAAG,SAAAL,OAAmDjD,EAAA6F,EAAS7F,IAK5D,GAHA+D,EAAAZ,EAAAG,SAAAtD,GACA8F,EAAA3C,EAAAc,KAAAb,EAAAW,KAEAa,EAAAe,EAAAG,GAAA,CACA,GAAA3C,EAAAc,MAAAU,EAAAgB,EAAAG,GAAA,SACAC,EAAAT,KAAAvB,GAGAZ,EAAA4C,EAAAV,MAGA,UAGAY,KAAA,SAAAR,GACA,IAAAA,MAAAxC,OAAA,OAAArD,KAEA,GAAA6F,EAAAxC,OAAArD,KAAA4C,YAAA,CACA,QAAAxC,EAAA,EAAA6F,EAAAJ,EAAAxC,OAA8CjD,EAAA6F,EAAS7F,IACvDJ,KAAAsG,OAAAT,EAAAzF,IAEA,OAAAJ,KAIA,IAAAuD,EAAAvD,KAAAuG,OAAAV,EAAAW,QAAA,EAAAX,EAAAxC,OAAA,KAEA,GAAArD,KAAA6F,KAAAnC,SAAAL,OAIS,GAAArD,KAAA6F,KAAAZ,SAAA1B,EAAA0B,OAETjF,KAAAyG,WAAAzG,KAAA6F,KAAAtC,OAES,CACT,GAAAvD,KAAA6F,KAAAZ,OAAA1B,EAAA0B,OAAA,CAEA,IAAAyB,EAAA1G,KAAA6F,KACA7F,KAAA6F,KAAAtC,EACAA,EAAAmD,EAIA1G,KAAA2G,QAAApD,EAAAvD,KAAA6F,KAAAZ,OAAA1B,EAAA0B,OAAA,WAfAjF,KAAA6F,KAAAtC,EAkBA,OAAAvD,MAGAsG,OAAA,SAAArD,GAEA,OADAA,GAAAjD,KAAA2G,QAAA1D,EAAAjD,KAAA6F,KAAAZ,OAAA,GACAjF,MAGA+C,MAAA,WAEA,OADA/C,KAAA6F,KAAAhC,EAAA,IACA7D,MAGA4G,OAAA,SAAA3D,EAAAE,GACA,IAAAF,EAAA,OAAAjD,KAEA,IAIAI,EAAAyG,EAAAC,EAAAC,EAJAxD,EAAAvD,KAAA6F,KACAE,EAAA/F,KAAAwD,OAAAP,GACA+D,EAAA,GACAC,EAAA,GAIA,MAAA1D,GAAAyD,EAAA3D,OAAA,CASA,GAPAE,IACAA,EAAAyD,EAAAvB,MACAoB,EAAAG,IAAA3D,OAAA,GACAjD,EAAA6G,EAAAxB,MACAsB,GAAA,GAGAxD,EAAAc,OACAyC,EAAA9D,EAAAC,EAAAM,EAAAG,SAAAP,IAEA,IAAA2D,GAKA,OAHAvD,EAAAG,SAAAwD,OAAAJ,EAAA,GACAE,EAAAtB,KAAAnC,GACAvD,KAAAmH,UAAAH,GACAhH,KAIA+G,GAAAxD,EAAAc,OAAAU,EAAAxB,EAAAwC,GAOac,GACbzG,IACAmD,EAAAsD,EAAAnD,SAAAtD,GACA2G,GAAA,GAEaxD,EAAA,MAXbyD,EAAAtB,KAAAnC,GACA0D,EAAAvB,KAAAtF,GACAA,EAAA,EACAyG,EAAAtD,EACAA,IAAAG,SAAA,IAUA,OAAA1D,MAGAwD,OAAA,SAAAP,GAA6B,OAAAA,GAE7BmE,YAAA3C,EACA4C,YAAA3C,EAEA4C,OAAA,WAAyB,OAAAtH,KAAA6F,MAEzB0B,SAAA,SAAA1B,GAEA,OADA7F,KAAA6F,OACA7F,MAGA4F,KAAA,SAAArC,EAAAyC,GACA,IAAAG,EAAA,GACA,MAAA5C,EACAA,EAAAc,KAAA2B,EAAAN,KAAA8B,MAAAxB,EAAAzC,EAAAG,UACAyC,EAAAT,KAAA8B,MAAArB,EAAA5C,EAAAG,UAEAH,EAAA4C,EAAAV,MAEA,OAAAO,GAGAO,OAAA,SAAArD,EAAAkC,EAAAC,EAAAJ,GAEA,IAEA1B,EAFAkE,EAAApC,EAAAD,EAAA,EACAsC,EAAA1H,KAAAyC,YAGA,GAAAgF,GAAAC,EAIA,OAFAnE,EAAAM,EAAAX,EAAAsD,MAAApB,EAAAC,EAAA,IACA/B,EAAAC,EAAAvD,KAAAwD,QACAD,EAGA0B,IAEAA,EAAAvC,KAAAG,KAAAH,KAAAiF,IAAAF,GAAA/E,KAAAiF,IAAAD,IAGAA,EAAAhF,KAAAG,KAAA4E,EAAA/E,KAAAkF,IAAAF,EAAAzC,EAAA,KAGA1B,EAAAM,EAAA,IACAN,EAAAc,MAAA,EACAd,EAAA0B,SAIA,IAEA7E,EAAAyH,EAAAC,EAAAC,EAFAC,EAAAtF,KAAAG,KAAA4E,EAAAC,GACAO,EAAAD,EAAAtF,KAAAG,KAAAH,KAAAwF,KAAAR,IAKA,IAFAxC,EAAAhC,EAAAkC,EAAAC,EAAA4C,EAAAjI,KAAAoH,aAEAhH,EAAAgF,EAAsBhF,GAAAiF,EAAYjF,GAAA6H,EAMlC,IAJAH,EAAApF,KAAA8B,IAAApE,EAAA6H,EAAA,EAAA5C,GAEAH,EAAAhC,EAAA9C,EAAA0H,EAAAE,EAAAhI,KAAAqH,aAEAQ,EAAAzH,EAAuByH,GAAAC,EAAaD,GAAAG,EAEpCD,EAAArF,KAAA8B,IAAAqD,EAAAG,EAAA,EAAAF,GAGAvE,EAAAG,SAAAgC,KAAA1F,KAAAuG,OAAArD,EAAA2E,EAAAE,EAAA9C,EAAA,IAMA,OAFA3B,EAAAC,EAAAvD,KAAAwD,QAEAD,GAGA4E,eAAA,SAAApC,EAAAxC,EAAA6E,EAAApB,GAEA,IAAA5G,EAAA6F,EAAA9B,EAAAkE,EAAAC,EAAAC,EAAAC,EAAAC,EAEA,SAGA,GAFAzB,EAAAtB,KAAAnC,GAEAA,EAAAc,MAAA2C,EAAA3D,OAAA,IAAA+E,EAAA,MAIA,IAFAI,EAAAC,EAAA1E,IAEA3D,EAAA,EAAA6F,EAAA1C,EAAAG,SAAAL,OAAmDjD,EAAA6F,EAAS7F,IAC5D+D,EAAAZ,EAAAG,SAAAtD,GACAkI,EAAA3D,EAAAR,GACAoE,EAAA1D,EAAAkB,EAAA5B,GAAAmE,EAGAC,EAAAE,GACAA,EAAAF,EACAC,EAAAF,EAAAE,EAAAF,EAAAE,EACAH,EAAAlE,GAEiBoE,IAAAE,GAEjBH,EAAAE,IACAA,EAAAF,EACAD,EAAAlE,GAKAZ,EAAA8E,GAAA9E,EAAAG,SAAA,GAGA,OAAAH,GAGAoD,QAAA,SAAA1D,EAAAmF,EAAAM,GAEA,IAAAlF,EAAAxD,KAAAwD,OACAuC,EAAA2C,EAAAzF,EAAAO,EAAAP,GACA0F,EAAA,GAGApF,EAAAvD,KAAAmI,eAAApC,EAAA/F,KAAA6F,KAAAuC,EAAAO,GAGApF,EAAAG,SAAAgC,KAAAzC,GACAmB,EAAAb,EAAAwC,GAGA,MAAAqC,GAAA,GACA,KAAAO,EAAAP,GAAA1E,SAAAL,OAAArD,KAAAyC,aAGa,MAFbzC,KAAA4I,OAAAD,EAAAP,GACAA,IAKApI,KAAA6I,oBAAA9C,EAAA4C,EAAAP,IAIAQ,OAAA,SAAAD,EAAAP,GAEA,IAAA7E,EAAAoF,EAAAP,GACAV,EAAAnE,EAAAG,SAAAL,OACA7C,EAAAR,KAAA4C,YAEA5C,KAAA8I,iBAAAvF,EAAA/C,EAAAkH,GAEA,IAAAqB,EAAA/I,KAAAgJ,kBAAAzF,EAAA/C,EAAAkH,GAEAuB,EAAApF,EAAAN,EAAAG,SAAAwD,OAAA6B,EAAAxF,EAAAG,SAAAL,OAAA0F,IACAE,EAAAhE,OAAA1B,EAAA0B,OACAgE,EAAA5E,KAAAd,EAAAc,KAEAf,EAAAC,EAAAvD,KAAAwD,QACAF,EAAA2F,EAAAjJ,KAAAwD,QAEA4E,EAAAO,EAAAP,EAAA,GAAA1E,SAAAgC,KAAAuD,GACAjJ,KAAAyG,WAAAlD,EAAA0F,IAGAxC,WAAA,SAAAlD,EAAA0F,GAEAjJ,KAAA6F,KAAAhC,EAAA,CAAAN,EAAA0F,IACAjJ,KAAA6F,KAAAZ,OAAA1B,EAAA0B,OAAA,EACAjF,KAAA6F,KAAAxB,MAAA,EACAf,EAAAtD,KAAA6F,KAAA7F,KAAAwD,SAGAwF,kBAAA,SAAAzF,EAAA/C,EAAAkH,GAEA,IAAAtH,EAAA8I,EAAAC,EAAAC,EAAAd,EAAAe,EAAAb,EAAA1B,EAIA,IAFAuC,EAAAb,EAAAzE,IAEA3D,EAAAI,EAAmBJ,GAAAsH,EAAAlH,EAAYJ,IAC/B8I,EAAAzF,EAAAF,EAAA,EAAAnD,EAAAJ,KAAAwD,QACA2F,EAAA1F,EAAAF,EAAAnD,EAAAsH,EAAA1H,KAAAwD,QAEA4F,EAAAtE,EAAAoE,EAAAC,GACAb,EAAA3D,EAAAuE,GAAAvE,EAAAwE,GAGAC,EAAAC,GACAA,EAAAD,EACAtC,EAAA1G,EAEAoI,EAAAF,EAAAE,EAAAF,EAAAE,GAEaY,IAAAC,GAEbf,EAAAE,IACAA,EAAAF,EACAxB,EAAA1G,GAKA,OAAA0G,GAIAgC,iBAAA,SAAAvF,EAAA/C,EAAAkH,GAEA,IAAAN,EAAA7D,EAAAc,KAAArE,KAAAoH,YAAA3C,EACA4C,EAAA9D,EAAAc,KAAArE,KAAAqH,YAAA3C,EACA4E,EAAAtJ,KAAAuJ,eAAAhG,EAAA/C,EAAAkH,EAAAN,GACAoC,EAAAxJ,KAAAuJ,eAAAhG,EAAA/C,EAAAkH,EAAAL,GAIAiC,EAAAE,GAAAjG,EAAAG,SAAA+F,KAAArC,IAIAmC,eAAA,SAAAhG,EAAA/C,EAAAkH,EAAApC,GAEA/B,EAAAG,SAAA+F,KAAAnE,GAEA,IAIAlF,EAAA+D,EAJAX,EAAAxD,KAAAwD,OACAkG,EAAAjG,EAAAF,EAAA,EAAA/C,EAAAgD,GACAmG,EAAAlG,EAAAF,EAAAmE,EAAAlH,EAAAkH,EAAAlE,GACAoG,EAAAhF,EAAA8E,GAAA9E,EAAA+E,GAGA,IAAAvJ,EAAAI,EAAmBJ,EAAAsH,EAAAlH,EAAWJ,IAC9B+D,EAAAZ,EAAAG,SAAAtD,GACAgE,EAAAsF,EAAAnG,EAAAc,KAAAb,EAAAW,MACAyF,GAAAhF,EAAA8E,GAGA,IAAAtJ,EAAAsH,EAAAlH,EAAA,EAA2BJ,GAAAI,EAAQJ,IACnC+D,EAAAZ,EAAAG,SAAAtD,GACAgE,EAAAuF,EAAApG,EAAAc,KAAAb,EAAAW,MACAyF,GAAAhF,EAAA+E,GAGA,OAAAC,GAGAf,oBAAA,SAAA9C,EAAAiB,EAAAoB,GAEA,QAAAhI,EAAAgI,EAA2BhI,GAAA,EAAQA,IACnCgE,EAAA4C,EAAA5G,GAAA2F,IAIAoB,UAAA,SAAAH,GAEA,QAAA6C,EAAAzJ,EAAA4G,EAAA3D,OAAA,EAA+CjD,GAAA,EAAQA,IACvD,IAAA4G,EAAA5G,GAAAsD,SAAAL,OACAjD,EAAA,GACAyJ,EAAA7C,EAAA5G,EAAA,GAAAsD,SACAmG,EAAA3C,OAAA2C,EAAAzG,QAAA4D,EAAA5G,IAAA,IAEiBJ,KAAA+C,QAEJO,EAAA0D,EAAA5G,GAAAJ,KAAAwD,SAIbV,YAAA,SAAAN,GAOA,IAAAsH,EAAA,wBAEA9J,KAAAoH,YAAA,IAAA2C,SAAA,QAAAD,EAAAE,KAAAxH,EAAA,KACAxC,KAAAqH,YAAA,IAAA0C,SAAA,QAAAD,EAAAE,KAAAxH,EAAA,KAEAxC,KAAAwD,OAAA,IAAAuG,SAAA,IACA,kBAAqBvH,EAAA,GACrB,YAAAA,EAAA,GACA,YAAAA,EAAA,GACA,YAAAA,EAAA,6DCtcA,SAAAyH,EAAAvK,GAC6DE,EAAAD,QAAAD,KAD7D,CAICM,EAAA,WAAqB,aAEtB,SAAAsC,EAAA6C,EAAAxB,EAAAyB,EAAAC,EAAAC,GACA4E,EAAA/E,EAAAxB,EAAAyB,GAAA,EAAAC,GAAAF,EAAA9B,OAAA,EAAAiC,GAAA6E,GAGA,SAAAD,EAAA/E,EAAAxB,EAAAyB,EAAAC,EAAAC,GAEA,MAAAD,EAAAD,EAAA,CACA,GAAAC,EAAAD,EAAA,KACA,IAAAvD,EAAAwD,EAAAD,EAAA,EACA5E,EAAAmD,EAAAyB,EAAA,EACAgF,EAAA1H,KAAAiF,IAAA9F,GACAM,EAAA,GAAAO,KAAA2H,IAAA,EAAAD,EAAA,GACAE,EAAA,GAAA5H,KAAAwF,KAAAkC,EAAAjI,GAAAN,EAAAM,GAAAN,IAAArB,EAAAqB,EAAA,UACA0I,EAAA7H,KAAAC,IAAAyC,EAAA1C,KAAA8H,MAAA7G,EAAAnD,EAAA2B,EAAAN,EAAAyI,IACAG,EAAA/H,KAAA8B,IAAAa,EAAA3C,KAAA8H,MAAA7G,GAAA9B,EAAArB,GAAA2B,EAAAN,EAAAyI,IACAJ,EAAA/E,EAAAxB,EAAA4G,EAAAE,EAAAnF,GAGA,IAAAhE,EAAA6D,EAAAxB,GACAvD,EAAAgF,EACAyC,EAAAxC,EAEAqF,EAAAvF,EAAAC,EAAAzB,GACA2B,EAAAH,EAAAE,GAAA/D,GAAA,GAAAoJ,EAAAvF,EAAAC,EAAAC,GAEA,MAAAjF,EAAAyH,EAAA,CACA6C,EAAAvF,EAAA/E,EAAAyH,GACAzH,IACAyH,IACA,MAAAvC,EAAAH,EAAA/E,GAAAkB,GAAA,EAAAlB,IACA,MAAAkF,EAAAH,EAAA0C,GAAAvG,GAAA,EAAAuG,IAGA,IAAAvC,EAAAH,EAAAC,GAAA9D,GAAAoJ,EAAAvF,EAAAC,EAAAyC,IAEAA,IACA6C,EAAAvF,EAAA0C,EAAAxC,IAGAwC,GAAAlE,IAAAyB,EAAAyC,EAAA,GACAlE,GAAAkE,IAAAxC,EAAAwC,EAAA,IAIA,SAAA6C,EAAAvF,EAAA/E,EAAAyH,GACA,IAAA8C,EAAAxF,EAAA/E,GACA+E,EAAA/E,GAAA+E,EAAA0C,GACA1C,EAAA0C,GAAA8C,EAGA,SAAAR,EAAA7F,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IAGA,OAAAjC;;;;;;;CCtDA,SAAA7C,EAAAC,GAEAE,EAAAD,QAAAD,KAFA,CASCM,EAAA,WACD,gBAAAM,GAEA,IAAAL,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAV,QAAA,IAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,EAAA,CAAkDK,YAAA,EAAAC,IAAAL,KAKlDV,EAAAgB,EAAA,SAAAvB,GACA,qBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,YAAA,CAAgEC,MAAA,WAEhEP,OAAAC,eAAApB,EAAA,cAAyD0B,OAAA,KAQzDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAiDT,YAAA,EAAAK,UACjD,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAwH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IAC7I,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAAmC,OAAA5B,EAAA,YACnC,WAAyC,OAAAA,GAEzC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAA8D,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAG9D7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,GAnFA,CAsFA,CAEA,SAAAvC,EAAAD,EAAAO,GAEA,aAGA,IAAA0K,EAAA,oBAAAzJ,QAAA,kBAAAA,OAAA0J,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAA3J,QAAA2J,EAAAC,cAAA5J,QAAA2J,IAAA3J,OAAAa,UAAA,gBAAA8I,GAE5IE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAA/K,EAAA,EAAgBA,EAAA+K,EAAA9H,OAAkBjD,IAAA,CAAO,IAAAgL,EAAAD,EAAA/K,GAA2BgL,EAAApK,WAAAoK,EAAApK,aAAA,EAAwDoK,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuDxK,OAAAC,eAAAmK,EAAAE,EAAAzJ,IAAAyJ,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAAvJ,UAAAwJ,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAG,EAAAxL,EAAA,GAEAyL,EAAAC,EAAAF,GAEAG,EAAA3L,EAAA,GAEA4L,EAAAF,EAAAC,GAEAE,EAAA7L,EAAA,GAEA8L,EAAAJ,EAAAG,GAEA,SAAAH,EAAAd,GAAsC,OAAAA,KAAAtJ,WAAAsJ,EAAA,CAAuCzI,QAAAyI,GAE7E,SAAAmB,EAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAE3F,SAAAC,EAAArM,EAAAQ,GAAiD,IAAAR,EAAa,UAAAsM,eAAA,6DAAyF,OAAA9L,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAA+L,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAAL,UAAA,kEAAAK,GAAuGD,EAAAvK,UAAAlB,OAAAY,OAAA8K,KAAAxK,UAAA,CAAyE+I,YAAA,CAAe1J,MAAAkL,EAAAvL,YAAA,EAAAsK,UAAA,EAAAD,cAAA,KAA6EmB,IAAA1L,OAAA2L,eAAA3L,OAAA2L,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAMrX,IAAAG,EAAA,SAAAC,GAOA,SAAAD,EAAAE,EAAAC,GACAb,EAAAjM,KAAA2M,GAEA,IAAAI,EAAAX,EAAApM,MAAA2M,EAAAD,WAAA5L,OAAAkM,eAAAL,IAAApM,KAAAP,OAIA,OAFA+M,EAAAE,eAAAH,GACAC,EAAAG,YAAAL,GACAE,EAsIA,OAnJAT,EAAAK,EAAAC,GAuBA5B,EAAA2B,EAAA,EACAhL,IAAA,iBACAN,MAAA,WACA,IAAAyL,EAAAK,UAAA9J,OAAA,QAAA+J,IAAAD,UAAA,GAAAA,UAAA,MAEAnN,KAAAqN,OAAA,oBAAAP,EAAAO,OAAAP,EAAAO,OAAArN,KAAAsN,cACAtN,KAAAkL,OAAA,oBAAA4B,EAAA5B,OAAA4B,EAAA5B,OAAAlL,KAAAuN,cACAvN,KAAAwN,KAAA,oBAAAV,EAAAU,KAAAV,EAAAU,KAAAxN,KAAAyN,YACAzN,KAAA0N,UAAA,WAAA9C,EAAAkC,EAAAY,WAAAZ,EAAAY,UAAAC,SAAAC,OAQK,CACLjM,IAAA,cACAN,MAAA,SAAAwL,GACA,IAAAgB,EAAA7N,KAEAA,KAAA8N,UAAA,EAAA9B,EAAA3J,SAAAwK,EAAA,iBAAAkB,GACA,OAAAF,EAAAG,QAAAD,OASK,CACLpM,IAAA,UACAN,MAAA,SAAA0M,GACA,IAAAlB,EAAAkB,EAAAE,gBAAAF,EAAAG,cAEAlO,KAAAmO,kBACAnO,KAAAmO,gBAAA,MAGAnO,KAAAmO,gBAAA,IAAAxC,EAAAtJ,QAAA,CACAgL,OAAArN,KAAAqN,OAAAR,GACA3B,OAAAlL,KAAAkL,OAAA2B,GACAW,KAAAxN,KAAAwN,KAAAX,GACAa,UAAA1N,KAAA0N,UACAb,UACAuB,QAAApO,SASK,CACL2B,IAAA,gBACAN,MAAA,SAAAwL,GACA,OAAAwB,EAAA,SAAAxB,KAQK,CACLlL,IAAA,gBACAN,MAAA,SAAAwL,GACA,IAAAyB,EAAAD,EAAA,SAAAxB,GAEA,GAAAyB,EACA,OAAAX,SAAAY,cAAAD,KAUK,CACL3M,IAAA,cAOAN,MAAA,SAAAwL,GACA,OAAAwB,EAAA,OAAAxB,KAOK,CACLlL,IAAA,UACAN,MAAA,WACArB,KAAA8N,SAAAU,UAEAxO,KAAAmO,kBACAnO,KAAAmO,gBAAAK,UACAxO,KAAAmO,gBAAA,SAGK,EACLxM,IAAA,cACAN,MAAA,WACA,IAAAgM,EAAAF,UAAA9J,OAAA,QAAA+J,IAAAD,UAAA,GAAAA,UAAA,kBAEAsB,EAAA,kBAAApB,EAAA,CAAAA,KACAqB,IAAAf,SAAAgB,sBAMA,OAJAF,EAAAG,QAAA,SAAAvB,GACAqB,OAAAf,SAAAgB,sBAAAtB,KAGAqB,MAIA/B,EApJA,CAqJCb,EAAAzJ,SASD,SAAAgM,EAAAQ,EAAAC,GACA,IAAAC,EAAA,kBAAAF,EAEA,GAAAC,EAAAE,aAAAD,GAIA,OAAAD,EAAAG,aAAAF,GAGAnP,EAAAD,QAAAgN,GAIA,SAAA/M,EAAAD,EAAAO,GAEA,aAGA,IAAA0K,EAAA,oBAAAzJ,QAAA,kBAAAA,OAAA0J,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAA3J,QAAA2J,EAAAC,cAAA5J,QAAA2J,IAAA3J,OAAAa,UAAA,gBAAA8I,GAE5IE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAA/K,EAAA,EAAgBA,EAAA+K,EAAA9H,OAAkBjD,IAAA,CAAO,IAAAgL,EAAAD,EAAA/K,GAA2BgL,EAAApK,WAAAoK,EAAApK,aAAA,EAAwDoK,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuDxK,OAAAC,eAAAmK,EAAAE,EAAAzJ,IAAAyJ,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAAvJ,UAAAwJ,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEA2D,EAAAhP,EAAA,GAEAiP,EAAAvD,EAAAsD,GAEA,SAAAtD,EAAAd,GAAsC,OAAAA,KAAAtJ,WAAAsJ,EAAA,CAAuCzI,QAAAyI,GAE7E,SAAAmB,EAAAC,EAAAX,GAAiD,KAAAW,aAAAX,GAA0C,UAAAY,UAAA,qCAM3F,IAAAiD,EAAA,WAIA,SAAAA,EAAAtC,GACAb,EAAAjM,KAAAoP,GAEApP,KAAAiN,eAAAH,GACA9M,KAAAqP,gBAwOA,OA/NArE,EAAAoE,EAAA,EACAzN,IAAA,iBACAN,MAAA,WACA,IAAAyL,EAAAK,UAAA9J,OAAA,QAAA+J,IAAAD,UAAA,GAAAA,UAAA,MAEAnN,KAAAqN,OAAAP,EAAAO,OACArN,KAAA0N,UAAAZ,EAAAY,UACA1N,KAAAoO,QAAAtB,EAAAsB,QACApO,KAAAkL,OAAA4B,EAAA5B,OACAlL,KAAAwN,KAAAV,EAAAU,KACAxN,KAAA6M,QAAAC,EAAAD,QAEA7M,KAAAsP,aAAA,KAQK,CACL3N,IAAA,gBACAN,MAAA,WACArB,KAAAwN,KACAxN,KAAAuP,aACavP,KAAAkL,QACblL,KAAAwP,iBASK,CACL7N,IAAA,aACAN,MAAA,WACA,IAAA0L,EAAA/M,KAEAyP,EAAA,OAAA9B,SAAA+B,gBAAAT,aAAA,OAEAjP,KAAA2P,aAEA3P,KAAA4P,oBAAA,WACA,OAAA7C,EAAA4C,cAEA3P,KAAA6P,YAAA7P,KAAA0N,UAAAoC,iBAAA,QAAA9P,KAAA4P,uBAAA,EAEA5P,KAAA+P,SAAApC,SAAAqC,cAAA,YAEAhQ,KAAA+P,SAAAE,MAAAC,SAAA,OAEAlQ,KAAA+P,SAAAE,MAAAE,OAAA,IACAnQ,KAAA+P,SAAAE,MAAAG,QAAA,IACApQ,KAAA+P,SAAAE,MAAArG,OAAA,IAEA5J,KAAA+P,SAAAE,MAAAI,SAAA,WACArQ,KAAA+P,SAAAE,MAAAR,EAAA,0BAEA,IAAAa,EAAAC,OAAAC,aAAA7C,SAAA+B,gBAAAe,UACAzQ,KAAA+P,SAAAE,MAAAS,IAAAJ,EAAA,KAEAtQ,KAAA+P,SAAAY,aAAA,eACA3Q,KAAA+P,SAAA1O,MAAArB,KAAAwN,KAEAxN,KAAA0N,UAAAkD,YAAA5Q,KAAA+P,UAEA/P,KAAAsP,cAAA,EAAAH,EAAA9M,SAAArC,KAAA+P,UACA/P,KAAA6Q,aAQK,CACLlP,IAAA,aACAN,MAAA,WACArB,KAAA6P,cACA7P,KAAA0N,UAAAoD,oBAAA,QAAA9Q,KAAA4P,qBACA5P,KAAA6P,YAAA,KACA7P,KAAA4P,oBAAA,MAGA5P,KAAA+P,WACA/P,KAAA0N,UAAAqD,YAAA/Q,KAAA+P,UACA/P,KAAA+P,SAAA,QAQK,CACLpO,IAAA,eACAN,MAAA,WACArB,KAAAsP,cAAA,EAAAH,EAAA9M,SAAArC,KAAAkL,QACAlL,KAAA6Q,aAOK,CACLlP,IAAA,WACAN,MAAA,WACA,IAAA2P,OAAA,EAEA,IACAA,EAAArD,SAAAsD,YAAAjR,KAAAqN,QACa,MAAA6D,GACbF,GAAA,EAGAhR,KAAAmR,aAAAH,KAQK,CACLrP,IAAA,eACAN,MAAA,SAAA2P,GACAhR,KAAAoO,QAAAgD,KAAAJ,EAAA,mBACA3D,OAAArN,KAAAqN,OACAG,KAAAxN,KAAAsP,aACAzC,QAAA7M,KAAA6M,QACAwE,eAAArR,KAAAqR,eAAAzP,KAAA5B,UAQK,CACL2B,IAAA,iBACAN,MAAA,WACArB,KAAA6M,SACA7M,KAAA6M,QAAAyE,QAGAf,OAAAgB,eAAAC,oBAQK,CACL7P,IAAA,UAMAN,MAAA,WACArB,KAAA2P,eAEK,CACLhO,IAAA,SACA8P,IAAA,WACA,IAAApE,EAAAF,UAAA9J,OAAA,QAAA+J,IAAAD,UAAA,GAAAA,UAAA,UAIA,GAFAnN,KAAA0R,QAAArE,EAEA,SAAArN,KAAA0R,SAAA,QAAA1R,KAAA0R,QACA,UAAAC,MAAA,uDASA1Q,IAAA,WACA,OAAAjB,KAAA0R,UASK,CACL/P,IAAA,SACA8P,IAAA,SAAAvG,GACA,QAAAkC,IAAAlC,EAAA,CACA,IAAAA,GAAA,iCAAAA,EAAA,YAAAN,EAAAM,KAAA,IAAAA,EAAA0G,SAWA,UAAAD,MAAA,+CAVA,YAAA3R,KAAAqN,QAAAnC,EAAA8D,aAAA,YACA,UAAA2C,MAAA,qFAGA,WAAA3R,KAAAqN,SAAAnC,EAAA8D,aAAA,aAAA9D,EAAA8D,aAAA,aACA,UAAA2C,MAAA,0GAGA3R,KAAA6R,QAAA3G,IAYAjK,IAAA,WACA,OAAAjB,KAAA6R,YAIAzC,EAhPA,GAmPAxP,EAAAD,QAAAyP,GAIA,SAAAxP,EAAAD,GAEA,SAAAmS,EAAAhD,GACA,IAAAQ,EAEA,cAAAR,EAAAiD,SACAjD,EAAAwC,QAEAhC,EAAAR,EAAAzN,WAEA,aAAAyN,EAAAiD,UAAA,aAAAjD,EAAAiD,SAAA,CACA,IAAAC,EAAAlD,EAAAE,aAAA,YAEAgD,GACAlD,EAAA6B,aAAA,eAGA7B,EAAAgD,SACAhD,EAAAmD,kBAAA,EAAAnD,EAAAzN,MAAAgC,QAEA2O,GACAlD,EAAAoD,gBAAA,YAGA5C,EAAAR,EAAAzN,UAEA,CACAyN,EAAAE,aAAA,oBACAF,EAAAwC,QAGA,IAAAa,EAAA5B,OAAAgB,eACAa,EAAAzE,SAAA0E,cAEAD,EAAAE,mBAAAxD,GACAqD,EAAAX,kBACAW,EAAAI,SAAAH,GAEA9C,EAAA6C,EAAAK,WAGA,OAAAlD,EAGA1P,EAAAD,QAAAmS,GAKA,SAAAlS,EAAAD,GAEA,SAAA8S,KAKAA,EAAAzQ,UAAA,CACA0Q,GAAA,SAAA/R,EAAAgS,EAAAC,GACA,IAAA7E,EAAA/N,KAAA+N,IAAA/N,KAAA+N,EAAA,IAOA,OALAA,EAAApN,KAAAoN,EAAApN,GAAA,KAAA+E,KAAA,CACAmN,GAAAF,EACAC,QAGA5S,MAGA8S,KAAA,SAAAnS,EAAAgS,EAAAC,GACA,IAAA7S,EAAAC,KACA,SAAA8N,IACA/N,EAAAgT,IAAApS,EAAAmN,GACA6E,EAAAnL,MAAAoL,EAAAzF,WAIA,OADAW,EAAAkF,EAAAL,EACA3S,KAAA0S,GAAA/R,EAAAmN,EAAA8E,IAGAxB,KAAA,SAAAzQ,GACA,IAAAkF,EAAA,GAAAW,MAAAjG,KAAA4M,UAAA,GACA8F,IAAAjT,KAAA+N,IAAA/N,KAAA+N,EAAA,KAAyCpN,IAAA,IAAA6F,QACzCpG,EAAA,EACA6F,EAAAgN,EAAA5P,OAEA,IAAAjD,EAAWA,EAAA6F,EAAS7F,IACpB6S,EAAA7S,GAAAyS,GAAArL,MAAAyL,EAAA7S,GAAAwS,IAAA/M,GAGA,OAAA7F,MAGA+S,IAAA,SAAApS,EAAAgS,GACA,IAAA5E,EAAA/N,KAAA+N,IAAA/N,KAAA+N,EAAA,IACAmF,EAAAnF,EAAApN,GACAwS,EAAA,GAEA,GAAAD,GAAAP,EACA,QAAAvS,EAAA,EAAA6F,EAAAiN,EAAA7P,OAAwCjD,EAAA6F,EAAS7F,IACjD8S,EAAA9S,GAAAyS,KAAAF,GAAAO,EAAA9S,GAAAyS,GAAAG,IAAAL,GACAQ,EAAAzN,KAAAwN,EAAA9S,IAYA,OAJA+S,EAAA,OACApF,EAAApN,GAAAwS,SACApF,EAAApN,GAEAX,OAIAJ,EAAAD,QAAA8S,GAKA,SAAA7S,EAAAD,EAAAO,GAEA,IAAAkT,EAAAlT,EAAA,GACAmT,EAAAnT,EAAA,GAWA,SAAAoT,EAAApI,EAAAqI,EAAAZ,GACA,IAAAzH,IAAAqI,IAAAZ,EACA,UAAAhB,MAAA,8BAGA,IAAAyB,EAAAI,OAAAD,GACA,UAAApH,UAAA,oCAGA,IAAAiH,EAAAP,GAAAF,GACA,UAAAxG,UAAA,qCAGA,GAAAiH,EAAA7P,KAAA2H,GACA,OAAAuI,EAAAvI,EAAAqI,EAAAZ,GAEA,GAAAS,EAAAM,SAAAxI,GACA,OAAAyI,EAAAzI,EAAAqI,EAAAZ,GAEA,GAAAS,EAAAI,OAAAtI,GACA,OAAA0I,EAAA1I,EAAAqI,EAAAZ,GAGA,UAAAxG,UAAA,6EAaA,SAAAsH,EAAAlQ,EAAAgQ,EAAAZ,GAGA,OAFApP,EAAAuM,iBAAAyD,EAAAZ,GAEA,CACAnE,QAAA,WACAjL,EAAAuN,oBAAAyC,EAAAZ,KAcA,SAAAgB,EAAAD,EAAAH,EAAAZ,GAKA,OAJAkB,MAAA7R,UAAA4M,QAAArO,KAAAmT,EAAA,SAAAnQ,GACAA,EAAAuM,iBAAAyD,EAAAZ,KAGA,CACAnE,QAAA,WACAqF,MAAA7R,UAAA4M,QAAArO,KAAAmT,EAAA,SAAAnQ,GACAA,EAAAuN,oBAAAyC,EAAAZ,OAeA,SAAAiB,EAAAtF,EAAAiF,EAAAZ,GACA,OAAAU,EAAA1F,SAAAC,KAAAU,EAAAiF,EAAAZ,GAGA/S,EAAAD,QAAA2T,GAKA,SAAA1T,EAAAD,GAQAA,EAAA4D,KAAA,SAAAlC,GACA,YAAA+L,IAAA/L,GACAA,aAAAyS,aACA,IAAAzS,EAAAuQ,UASAjS,EAAA+T,SAAA,SAAArS,GACA,IAAAkS,EAAAzS,OAAAkB,UAAAwQ,SAAAjS,KAAAc,GAEA,YAAA+L,IAAA/L,IACA,sBAAAkS,GAAA,4BAAAA,IACA,WAAAlS,IACA,IAAAA,EAAAgC,QAAA1D,EAAA4D,KAAAlC,EAAA,MASA1B,EAAA6T,OAAA,SAAAnS,GACA,wBAAAA,GACAA,aAAA0S,QASApU,EAAAkT,GAAA,SAAAxR,GACA,IAAAkS,EAAAzS,OAAAkB,UAAAwQ,SAAAjS,KAAAc,GAEA,4BAAAkS,IAMA,SAAA3T,EAAAD,EAAAO,GAEA,IAAA8T,EAAA9T,EAAA,GAYA,SAAA+T,EAAAnF,EAAAR,EAAAiF,EAAAZ,EAAAuB,GACA,IAAAC,EAAArG,EAAAtG,MAAAxH,KAAAmN,WAIA,OAFA2B,EAAAgB,iBAAAyD,EAAAY,EAAAD,GAEA,CACA1F,QAAA,WACAM,EAAAgC,oBAAAyC,EAAAY,EAAAD,KAeA,SAAAb,EAAAe,EAAA9F,EAAAiF,EAAAZ,EAAAuB,GAEA,0BAAAE,EAAAtE,iBACAmE,EAAAzM,MAAA,KAAA2F,WAIA,oBAAAoG,EAGAU,EAAArS,KAAA,KAAA+L,UAAAnG,MAAA,KAAA2F,YAIA,kBAAAiH,IACAA,EAAAzG,SAAA0G,iBAAAD,IAIAP,MAAA7R,UAAAsS,IAAA/T,KAAA6T,EAAA,SAAAtF,GACA,OAAAmF,EAAAnF,EAAAR,EAAAiF,EAAAZ,EAAAuB,MAaA,SAAApG,EAAAgB,EAAAR,EAAAiF,EAAAZ,GACA,gBAAA5E,GACAA,EAAAE,eAAA+F,EAAAjG,EAAA7C,OAAAoD,GAEAP,EAAAE,gBACA0E,EAAApS,KAAAuO,EAAAf,IAKAnO,EAAAD,QAAA0T,GAKA,SAAAzT,EAAAD,GAEA,IAAA4U,EAAA,EAKA,wBAAAC,kBAAAxS,UAAAyS,QAAA,CACA,IAAAC,EAAAF,QAAAxS,UAEA0S,EAAAD,QAAAC,EAAAC,iBACAD,EAAAE,oBACAF,EAAAG,mBACAH,EAAAI,kBACAJ,EAAAK,sBAUA,SAAAf,EAAAlF,EAAAR,GACA,MAAAQ,KAAA8C,WAAA2C,EAAA,CACA,uBAAAzF,EAAA2F,SACA3F,EAAA2F,QAAAnG,GACA,OAAAQ,EAEAA,IAAAkG,YAIApV,EAAAD,QAAAqU,0CCz8BA,IAAMiB,UADN,qBAAA1E,WAEO0E,EAAC1E,OAAA5C,SAAAuH,iBAAsCD,EAAIA,EAACE,IAAAC,MAAA,+BAC/ClV,EAAAgC,EAA0B+S,EAAC,KAKhB,ICVXI,EAAM,WAAgB,IAAAC,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,IAAA,MAAAC,YAAA,WAAgC,CAAAN,EAAAO,GAAA,gBAC1IC,EAAA,GCMO,SAASC,IAChB,OAAsB,WACtB,UAAApE,MAAA,kCADsB,GAsCtB,IAAAqE,EAAA,EAYO,SAAAC,EAAAnL,GACP,OAAAA,EAAAoL,SAAApL,EAAAoL,OAAAnC,SAAAiC,IAOO,IAAAG,EAAA,QCxDHC,EAAc,SAAAzE,GAClB,SAAA0E,EAAAC,GACA,IAAAtP,EAAsB,WAAPmP,EAAuBA,EAAO,IAASA,EAAOI,MAAA,QAC7DC,EAAA,mDAAAxP,EACA,gBAAAsP,EAAA,gBAEA3E,EAAApR,KAAAP,KAAAwW,GAUAxW,KAAAsW,OAKAtW,KAAAW,KAAA,iBAGAX,KAAAwW,UAOA,OAJA7E,IAAA0E,EAAA3J,UAAAiF,GACA0E,EAAArU,UAAAlB,OAAAY,OAAAiQ,KAAA3P,WACAqU,EAAArU,UAAA+I,YAAAsL,EAEAA,EA/BkB,CAgCjB1E,OAEc8E,EAAA,ECrCAC,EAAA,CAMfC,IAAA,MAMAC,OAAA,UCZeC,EAAA,CAMfC,eAAA,kBCCWC,EAAM,oBAAAjW,OAAAkW,OAAAlW,OAAAkW,OAAA,SAAA9L,EAAA+L,GACjB,IAAAC,EAAA/J,UAEA,QAAAC,IAAAlC,GAAA,OAAAA,EACA,UAAAiB,UAAA,8CAIA,IADA,IAAAgL,EAAArW,OAAAoK,GACA9K,EAAA,EAAAgX,EAAAjK,UAAA9J,OAAwCjD,EAAAgX,IAAQhX,EAAA,CAChD,IAAAiX,EAAAH,EAAA9W,GACA,QAAAgN,IAAAiK,GAAA,OAAAA,EACA,QAAA1V,KAAA0V,EACAA,EAAApV,eAAAN,KACAwV,EAAAxV,GAAA0V,EAAA1V,IAKA,OAAAwV,GAQO,SAASG,EAAKxV,GACrB,QAAAC,KAAAD,SACAA,EAAAC,GAWO,SAAAwV,EAAAzV,GACP,IAAA0V,EAAA,GACA,QAAAzV,KAAAD,EACA0V,EAAA9R,KAAA5D,EAAAC,IAEA,OAAAyV,EASO,SAASC,EAAO3V,GACvB,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,ECvCO,SAAA2V,EAAAC,GACP,IAAAC,EAAA,SAAAC,GACA,IAAA/J,EAAA6J,EAAA7J,SACAgK,EAAAH,EAAAG,QAAAH,EAAAzM,OAIA,OAHAyM,EAAAI,UACAC,EAAAL,GAEA7J,EAAAvN,KAAAuX,EAAAD,IAGA,OADAF,EAAAC,gBACAA,EAeO,SAAAK,EAAAC,EAAApK,EAAAqK,EAAAC,GAEP,IADA,IAAAT,EACAvX,EAAA,EAAAgX,EAAAc,EAAA7U,OAAwCjD,EAAAgX,IAAQhX,EAEhD,GADAuX,EAAAO,EAAA9X,GACAuX,EAAA7J,cACA6J,EAAAG,SAAAK,EAIA,OAHAC,IACAT,EAAAU,YAAAjY,GAEAuX,EAYO,SAAAW,EAAApN,EAAAqI,GACP,IAAAgF,EAAAC,EAAAtN,GACA,OAAAqN,IAAAhF,QAAAnG,EAWA,SAAAoL,EAAAtN,EAAAuN,GACA,IAAAF,EAAArN,EAAAwN,MAIA,OAHAH,GAAAE,IACAF,EAAArN,EAAAwN,MAAA,IAEAH,EAQA,SAAAI,EAAAzN,UACAA,EAAAwN,MAWA,SAAAE,EAAA1N,EAAAqI,GACA,IAAA2E,EAAAI,EAAApN,EAAAqI,GACA,GAAA2E,EAAA,CACA,QAAA9X,EAAA,EAAAgX,EAAAc,EAAA7U,OAA0CjD,EAAAgX,IAAQhX,EACI,EACtD0Q,oBAAAyC,EAAA2E,EAAA9X,GAAAwX,eACMN,EAAKY,EAAA9X,IAEX8X,EAAA7U,OAAA,EACA,IAAAkV,EAAAC,EAAAtN,GACAqN,WACAA,EAAAhF,GACA,IAAAzS,OAAA+X,KAAAN,GAAAlV,QACAsV,EAAAzN,KAsBO,SAAAoI,EAAApI,EAAAqI,EAAAzF,EAAAqK,EAAAW,GACP,IAAAP,EAAAC,EAAAtN,GAAA,GACAgN,EAAAK,EAAAhF,GACA2E,IACAA,EAAAK,EAAAhF,GAAA,IAEA,IAAAoE,EAAAM,EAAAC,EAAApK,EAAAqK,GAAA,GAmBA,OAlBAR,EACAmB,IAEAnB,EAAAI,UAAA,IAGAJ,EAAuC,CACvCG,OAAAK,EACAJ,WAAAe,EACAhL,WACA5C,SACAqI,QAEoD,EACpDzD,iBAAAyD,EAAAmE,EAAAC,IACAO,EAAAxS,KAAAiS,IAGAA,EAwBO,SAAAoB,EAAA7N,EAAAqI,EAAAzF,EAAAqK,GACP,OAAA7E,EAAApI,EAAAqI,EAAAzF,EAAAqK,GAAA,GAiBO,SAAAa,EAAA9N,EAAAqI,EAAAzF,EAAAqK,GACP,IAAAD,EAAAI,EAAApN,EAAAqI,GACA,GAAA2E,EAAA,CACA,IAAAP,EAAAM,EAAAC,EAAApK,EAAAqK,GAAA,GACAR,GACAK,EAAAL,IAeO,SAAAK,EAAArW,GACP,GAAAA,KAAAuJ,OAAA,CACoDvJ,EAAA,OACpDmP,oBAAAnP,EAAA4R,KAAA5R,EAAAiW,eACA,IAAAM,EAAAI,EAAA3W,EAAAuJ,OAAAvJ,EAAA4R,MACA,GAAA2E,EAAA,CACA,IAAA9X,EAAA,gBAAAuB,IAAA0W,YAAAH,EAAA9U,QAAAzB,IACA,IAAAvB,GACA8X,EAAAhR,OAAA9G,EAAA,GAEA,IAAA8X,EAAA7U,QACAuV,EAAAjX,EAAAuJ,OAAAvJ,EAAA4R,MAGI+D,EAAK3V,IAWF,SAAAsX,EAAA/N,GACP,IAAAqN,EAAAC,EAAAtN,GACA,GAAAqN,EACA,QAAAhF,KAAAgF,EACAK,EAAA1N,EAAAqI,GCpQA,IAAI2F,EAAU,WAMdlZ,KAAAmZ,WAAA,GAMAD,EAAUlX,UAAAoX,QAAA,WACVpZ,KAAAmZ,YACAnZ,KAAAmZ,WAAA,EACAnZ,KAAAqZ,oBAQAH,EAAUlX,UAAAqX,gBAAA,aAEK,IAAAC,EAAA,ECzBR,SAAAC,IACP,SAOO,SAAAC,IACP,SAQO,SAAAC,KCXP,IAAAC,EAAA,SAAAnG,GAKAvT,KAAA2Z,mBAOA3Z,KAAAuT,OAOAvT,KAAAkL,OAAA,MAuBO,SAAA0O,EAAA/B,GACPA,EAAA+B,kBAjBAF,EAAA1X,UAAA6X,eAAA,WACA7Z,KAAA2Z,oBAAA,GAOAD,EAAA1X,UAAA4X,gBAAA,WACA5Z,KAAA2Z,oBAAA,GAmBe,IAAAG,EAAA,ECvCXC,EAAM,SAAAC,GACV,SAAAC,IAEAD,EAAAzZ,KAAAP,MAMAA,KAAAka,iBAAA,GAMAla,KAAAma,aAAA,GAMAna,KAAAoa,WAAA,GAoHA,OAhHAJ,IAAAC,EAAAvN,UAAAsN,GACAC,EAAAjY,UAAAlB,OAAAY,OAAAsY,KAAAhY,WACAiY,EAAAjY,UAAA+I,YAAAkP,EAMAA,EAAAjY,UAAA8N,iBAAA,SAAAyD,EAAAzF,GACA,IAAAoK,EAAAlY,KAAAoa,WAAA7G,GACA2E,IACAA,EAAAlY,KAAAoa,WAAA7G,GAAA,KAEA,IAAA2E,EAAA9U,QAAA0K,IACAoK,EAAAxS,KAAAoI,IAiBAmM,EAAAjY,UAAAqY,cAAA,SAAAC,GACA,IAAAzC,EAAA,kBAAAyC,EAAA,IAA8CR,EAAKQ,KACnD/G,EAAAsE,EAAAtE,KACAsE,EAAA3M,OAAAlL,KACA,IACAua,EADArC,EAAAlY,KAAAoa,WAAA7G,GAEA,GAAA2E,EAAA,CACA3E,KAAAvT,KAAAma,eACAna,KAAAma,aAAA5G,GAAA,EACAvT,KAAAka,iBAAA3G,GAAA,KAEAvT,KAAAma,aAAA5G,GACA,QAAAnT,EAAA,EAAAgX,EAAAc,EAAA7U,OAA4CjD,EAAAgX,IAAQhX,EACpD,QAAA8X,EAAA9X,GAAAG,KAAAP,KAAA6X,MAAA8B,mBAAA,CACAY,GAAA,EACA,MAIA,KADAva,KAAAma,aAAA5G,GACA,IAAAvT,KAAAma,aAAA5G,GAAA,CACA,IAAAiH,EAAAxa,KAAAka,iBAAA3G,UACAvT,KAAAka,iBAAA3G,GACA,MAAAiH,IACAxa,KAAA8Q,oBAAAyC,EAAyCkG,UAEzCzZ,KAAAma,aAAA5G,GAEA,OAAAgH,IAOAN,EAAAjY,UAAAqX,gBAAA,WACIJ,EAAWjZ,OAUfia,EAAAjY,UAAAsW,aAAA,SAAA/E,GACA,OAAAvT,KAAAoa,WAAA7G,IAQA0G,EAAAjY,UAAAyY,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAA1a,KAAAoa,WACAtZ,OAAA+X,KAAA7Y,KAAAoa,YAAA/W,OAAA,GAOA4W,EAAAjY,UAAA8O,oBAAA,SAAAyC,EAAAzF,GACA,IAAAoK,EAAAlY,KAAAoa,WAAA7G,GACA,GAAA2E,EAAA,CACA,IAAApR,EAAAoR,EAAA9U,QAAA0K,GACAyF,KAAAvT,KAAAka,kBAEAhC,EAAApR,GAA2B2S,IAC3BzZ,KAAAka,iBAAA3G,KAEA2E,EAAAhR,OAAAJ,EAAA,GACA,IAAAoR,EAAA7U,eACArD,KAAAoa,WAAA7G,MAMA0G,EAzIU,CA0IRX,GAGaqB,EAAA,EClKAC,EAAA,CAMfC,OAAA,SAEAC,MAAA,QACAC,YAAA,cACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,SCnBIC,EAAU,SAAAC,GACd,SAAAC,IAEAD,EAAA9b,KAAAP,MAMAA,KAAAuc,UAAA,EAwFA,OApFAF,IAAAC,EAAA5P,UAAA2P,GACAC,EAAAta,UAAAlB,OAAAY,OAAA2a,KAAAra,WACAsa,EAAAta,UAAA+I,YAAAuR,EAMAA,EAAAta,UAAAwa,QAAA,aACAxc,KAAAuc,UACAvc,KAAAqa,cAAuBO,EAASC,SAShCyB,EAAAta,UAAAya,YAAA,WACA,OAAAzc,KAAAuc,WAYAD,EAAAta,UAAA0Q,GAAA,SAAAa,EAAAzF,GACA,GAAA+F,MAAA6I,QAAAnJ,GAAA,CAGA,IAFA,IAAAtN,EAAAsN,EAAAlQ,OACAwV,EAAA,IAAAhF,MAAA5N,GACA7F,EAAA,EAAqBA,EAAA6F,IAAS7F,EAC9ByY,EAAAzY,GAAkBkT,EAAMtT,KAAAuT,EAAAnT,GAAA0N,GAExB,OAAA+K,EAEA,OAAavF,EAAMtT,KAAyB,EAAA8N,IAa5CwO,EAAAta,UAAA8Q,KAAA,SAAAS,EAAAzF,GACA,GAAA+F,MAAA6I,QAAAnJ,GAAA,CAGA,IAFA,IAAAtN,EAAAsN,EAAAlQ,OACAwV,EAAA,IAAAhF,MAAA5N,GACA7F,EAAA,EAAqBA,EAAA6F,IAAS7F,EAC9ByY,EAAAzY,GAAkB2Y,EAAU/Y,KAAAuT,EAAAnT,GAAA0N,GAE5B,OAAA+K,EAEA,OAAaE,EAAU/Y,KAAyB,EAAA8N,IAUhDwO,EAAAta,UAAA2a,GAAA,SAAApJ,EAAAzF,GACA,GAAA+F,MAAA6I,QAAAnJ,GACA,QAAAnT,EAAA,EAAAgX,EAAA7D,EAAAlQ,OAAuCjD,EAAAgX,IAAQhX,EACvC4Y,EAAQhZ,KAAAuT,EAAAnT,GAAA0N,QAIVkL,EAAQhZ,KAAyB,EAAA8N,IAIvCwO,EAjGc,CAkGZ3B,GAoBa,IAAAiC,EAAA,EC1HRC,EAAA,SAAAnD,GACP,SAAAmD,EAAAtJ,EAAA5R,EAAAmb,GACApD,EAAAnZ,KAAAP,KAAAuT,GAOAvT,KAAA2B,MAQA3B,KAAA8c,WAQA,OAJApD,IAAAmD,EAAAnQ,UAAAgN,GACAmD,EAAA7a,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACA6a,EAAA7a,UAAA+I,YAAA8R,EAEAA,EAzBO,CA0BL/C,GA8CEiD,EAAU,SAAAT,GACd,SAAAU,EAAAC,GACAX,EAAA/b,KAAAP,MAMIiW,EAAMjW,MAMVA,KAAAkd,QAAA,QAEA9P,IAAA6P,GACAjd,KAAAmd,cAAAF,GAoGA,OAhGAX,IAAAU,EAAAtQ,UAAA4P,GACAU,EAAAhb,UAAAlB,OAAAY,OAAA4a,KAAAta,WACAgb,EAAAhb,UAAA+I,YAAAiS,EAQAA,EAAAhb,UAAAf,IAAA,SAAAU,GACA,IAAAN,EAIA,OAHArB,KAAAkd,QAAAjb,eAAAN,KACAN,EAAArB,KAAAkd,QAAAvb,IAEAN,GAQA2b,EAAAhb,UAAAob,QAAA,WACA,OAAAtc,OAAA+X,KAAA7Y,KAAAkd,UAQAF,EAAAhb,UAAAqb,cAAA,WACA,OAAWtG,EAAM,GAAG/W,KAAAkd,UAOpBF,EAAAhb,UAAAsb,OAAA,SAAA3b,EAAAmb,GACA,IAAAS,EACAA,EAAAC,EAAA7b,GACA3B,KAAAqa,cAAA,IAAAwC,EAAAU,EAAA5b,EAAAmb,IACAS,EAAgB1G,EAAeC,eAC/B9W,KAAAqa,cAAA,IAAAwC,EAAAU,EAAA5b,EAAAmb,KAUAE,EAAAhb,UAAAyP,IAAA,SAAA9P,EAAAN,EAAAoc,GACA,GAAAA,EACAzd,KAAAkd,QAAAvb,GAAAN,MACK,CACL,IAAAyb,EAAA9c,KAAAkd,QAAAvb,GACA3B,KAAAkd,QAAAvb,GAAAN,EACAyb,IAAAzb,GACArB,KAAAsd,OAAA3b,EAAAmb,KAYAE,EAAAhb,UAAAmb,cAAA,SAAA3F,EAAAiG,GACA,QAAA9b,KAAA6V,EACAxX,KAAAyR,IAAA9P,EAAA6V,EAAA7V,GAAA8b,IAUAT,EAAAhb,UAAA0b,MAAA,SAAA/b,EAAA8b,GACA,GAAA9b,KAAA3B,KAAAkd,QAAA,CACA,IAAAJ,EAAA9c,KAAAkd,QAAAvb,UACA3B,KAAAkd,QAAAvb,GACA8b,GACAzd,KAAAsd,OAAA3b,EAAAmb,KAKAE,EArHc,CAsHZJ,GAMFe,EAAA,GAOO,SAAAH,EAAA7b,GACP,OAAAgc,EAAA1b,eAAAN,GACAgc,EAAAhc,GACAgc,EAAAhc,GAAA,UAAAA,EAIe,IAAAic,EAAA,ECnNfC,EAAA,CACAC,OAAA,UASOC,EAAA,SAAArE,GACP,SAAAqE,EAAAxK,EAAAyK,GACAtE,EAAAnZ,KAAAP,KAAAuT,GAOAvT,KAAA8O,QAAAkP,EAQA,OAJAtE,IAAAqE,EAAArR,UAAAgN,GACAqE,EAAA/b,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACA+b,EAAA/b,UAAA+I,YAAAgT,EAEAA,EAjBO,CAkBLjE,GAsBEmE,EAAU,SAAAjB,GACd,SAAAkB,EAAAC,EAAAC,GAEApB,EAAAzc,KAAAP,MAEA,IAAA8M,EAAAsR,GAAA,GAcA,GARApe,KAAAqe,UAAAvR,EAAAwR,OAMAte,KAAAue,OAAAJ,GAAA,GAEAne,KAAAqe,QACA,QAAAje,EAAA,EAAAgX,EAAApX,KAAAue,OAAAlb,OAA8CjD,EAAAgX,IAAQhX,EACtDJ,KAAAwe,cAAAxe,KAAAue,OAAAne,MAIAJ,KAAAye,gBAoMA,OAhMAzB,IAAAkB,EAAAxR,UAAAsQ,GACAkB,EAAAlc,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACAkc,EAAAlc,UAAA+I,YAAAmT,EAMAA,EAAAlc,UAAAe,MAAA,WACA,MAAA/C,KAAA0e,YAAA,EACA1e,KAAAyF,OAWAyY,EAAAlc,UAAAoC,OAAA,SAAAe,GACA,QAAA/E,EAAA,EAAAgX,EAAAjS,EAAA9B,OAAoCjD,EAAAgX,IAAQhX,EAC5CJ,KAAA0F,KAAAP,EAAA/E,IAEA,OAAAJ,MAUAke,EAAAlc,UAAA4M,QAAA,SAAA+P,GAEA,IADA,IAAAC,EAAA5e,KAAAue,OACAne,EAAA,EAAAgX,EAAAwH,EAAAvb,OAAsCjD,EAAAgX,IAAQhX,EAC9Cue,EAAAC,EAAAxe,KAAAwe,IAYAV,EAAAlc,UAAA6c,SAAA,WACA,OAAA7e,KAAAue,QASAL,EAAAlc,UAAAiB,KAAA,SAAA6D,GACA,OAAA9G,KAAAue,OAAAzX,IASAoX,EAAAlc,UAAA0c,UAAA,WACA,OAAA1e,KAAAiB,IAAA4c,EAAAC,SASAI,EAAAlc,UAAA8c,SAAA,SAAAhY,EAAAiY,GACA/e,KAAAqe,SACAre,KAAAwe,cAAAO,GAEA/e,KAAAue,OAAArX,OAAAJ,EAAA,EAAAiY,GACA/e,KAAAye,gBACAze,KAAAqa,cACA,IAAA0D,EAA0BrH,EAAmBC,IAAAoI,KAS7Cb,EAAAlc,UAAAyD,IAAA,WACA,OAAAzF,KAAAgf,SAAAhf,KAAA0e,YAAA,IASAR,EAAAlc,UAAA0D,KAAA,SAAAqZ,GACA/e,KAAAqe,SACAre,KAAAwe,cAAAO,GAEA,IAAAld,EAAA7B,KAAA0e,YAEA,OADA1e,KAAA8e,SAAAjd,EAAAkd,GACA/e,KAAA0e,aASAR,EAAAlc,UAAA4E,OAAA,SAAAmY,GAEA,IADA,IAAA5Z,EAAAnF,KAAAue,OACAne,EAAA,EAAAgX,EAAAjS,EAAA9B,OAAoCjD,EAAAgX,IAAQhX,EAC5C,GAAA+E,EAAA/E,KAAA2e,EACA,OAAA/e,KAAAgf,SAAA5e,IAaA8d,EAAAlc,UAAAgd,SAAA,SAAAlY,GACA,IAAAmY,EAAAjf,KAAAue,OAAAzX,GAIA,OAHA9G,KAAAue,OAAArX,OAAAJ,EAAA,GACA9G,KAAAye,gBACAze,KAAAqa,cAAA,IAAA0D,EAA2CrH,EAAmBE,OAAAqI,IAC9DA,GASAf,EAAAlc,UAAAkd,MAAA,SAAApY,EAAAiY,GACA,IAAAld,EAAA7B,KAAA0e,YACA,GAAA5X,EAAAjF,EAAA,CACA7B,KAAAqe,SACAre,KAAAwe,cAAAO,EAAAjY,GAEA,IAAAmY,EAAAjf,KAAAue,OAAAzX,GACA9G,KAAAue,OAAAzX,GAAAiY,EACA/e,KAAAqa,cACA,IAAA0D,EAA4BrH,EAAmBE,OAAAqI,IAC/Cjf,KAAAqa,cACA,IAAA0D,EAA4BrH,EAAmBC,IAAAoI,QAC1C,CACL,QAAAlX,EAAAhG,EAAqBgG,EAAAf,IAAWe,EAChC7H,KAAA8e,SAAAjX,OAAAuF,GAEApN,KAAA8e,SAAAhY,EAAAiY,KAOAb,EAAAlc,UAAAyc,cAAA,WACAze,KAAAyR,IAAAoM,EAAAC,OAAA9d,KAAAue,OAAAlb,SAQA6a,EAAAlc,UAAAwc,cAAA,SAAAO,EAAAI,GACA,QAAA/e,EAAA,EAAAgX,EAAApX,KAAAue,OAAAlb,OAA4CjD,EAAAgX,IAAQhX,EACpD,GAAAJ,KAAAue,OAAAne,KAAA2e,GAAA3e,IAAA+e,EACA,UAAkB1I,EAAc,KAKhCyH,EA7Nc,CA8NZN,GAGawB,EAAA,ECtRfC,EAAA,SAAA3F,GACA,SAAA2F,EAAA9L,EAAAe,EAAAgL,GAEA5F,EAAAnZ,KAAAP,KAAAuT,GAOAvT,KAAAsU,MAOAtU,KAAAuf,gBAAAnS,IAAAkS,IAAA,KAQA,OAJA5F,IAAA2F,EAAA3S,UAAAgN,GACA2F,EAAArd,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACAqd,EAAArd,UAAA+I,YAAAsU,EAEAA,EAzBA,CA0BEvF,GAEa0F,EAAA,EC5BfC,EAAA,SAAAJ,GACA,SAAAI,EAAAlM,EAAAe,EAAAoL,EAAAC,EAAAL,GAEAD,EAAA9e,KAAAP,KAAAuT,EAAAe,EAAAgL,GAQAtf,KAAA4f,cAAAF,EAOA1f,KAAA6f,MAAAvL,EAAAwL,cAAAJ,GAOA1f,KAAA+f,WAAAzL,EAAA0L,uBAAAhgB,KAAA6f,OASA7f,KAAAigB,cAAA7S,IAAAuS,KA8BA,OA1BAN,IAAAI,EAAA/S,UAAA2S,GACAI,EAAAzd,UAAAlB,OAAAY,OAAA2d,KAAArd,WACAyd,EAAAzd,UAAA+I,YAAA0U,EAQAA,EAAAzd,UAAA6X,eAAA,WACAwF,EAAArd,UAAA6X,eAAAtZ,KAAAP,MACAA,KAAA4f,cAAA/F,kBASA4F,EAAAzd,UAAA4X,gBAAA,WACAyF,EAAArd,UAAA4X,gBAAArZ,KAAAP,MACAA,KAAA4f,cAAAhG,mBAGA6F,EAhEA,CAiEED,GAGaU,GAAA,EC1EfC,GAAA,qBAAAC,UACAA,UAAAC,UAAAC,cAAA,GAMOC,IAAA,IAAAJ,GAAA/c,QAAA,WAMAod,IAAA,IAAAL,GAAA/c,QAAA,eAAA+c,GAAA/c,QAAA,SAMAqd,IAAA,IAAAN,GAAA/c,QAAA,eAAA+c,GAAA/c,QAAA,QAMAsd,IAAA,IAAAP,GAAA/c,QAAA,aAUAud,GAAApQ,OAAAqQ,kBAAA,EAOAC,GAAA,WACP,IAAAC,GAAA,EACA,IACAA,IAAAnT,SAAAqC,cAAA,UAAA+Q,WAAA,MAAAC,YACG,MAAAjT,IAGH,OAAA+S,EAPO,GA0BAG,IATAb,UASA,iBAAA7P,QAQA2Q,GAAA,iBAAA3Q,OAQA4Q,KAAAf,UAAA,iBC/EQgB,GAAA,CAQfC,YAAA,cAOArG,MAASJ,EAASI,MAOlBC,SAAYL,EAASK,SAOrBqG,YAAA,cAQAC,YAAA,cAEAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCjDAC,GAAA,SAAAtC,GACA,SAAAsC,EAAAxO,EAAAe,EAAA0N,EAAArC,EAAAL,GAEAG,EAAAlf,KAAAP,KAAAuT,EAAAe,EAAA0N,EAAApC,cAAAD,EAAAL,GAMAtf,KAAAgiB,eAQA,OAJAvC,IAAAsC,EAAArV,UAAA+S,GACAsC,EAAA/f,UAAAlB,OAAAY,OAAA+d,KAAAzd,WACA+f,EAAA/f,UAAA+I,YAAAgX,EAEAA,EAjBA,CAkBE7B,IAEa+B,GAAA,GCjBAC,GAAA,CACfX,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCZIK,GAAW,SAAAC,EAAAC,GAKfriB,KAAAoiB,aAOApiB,KAAAsiB,SAAAD,GAOAF,GAAWngB,UAAAugB,UAAA,WACX,OAAAzhB,OAAA+X,KAAA7Y,KAAAsiB,WAQAH,GAAWngB,UAAAwgB,mBAAA,SAAAjF,GACX,OAAAvd,KAAAsiB,SAAA/E,IAGe,IAAAkF,GAAA,GCIRC,GAAA,EAMAC,GAAA,QAQPC,GAAA,GAQA,SAAAC,GAAAC,GACA,IAAA9iB,KAAA+iB,2BAAAD,GAAA,CAGAJ,GAAAlQ,aAAAxS,KAAAgjB,YACAhjB,KAAAijB,OAAAH,GAEA,IAAA/U,EAAAmV,GAAAJ,EAAA9iB,KAAAoiB,YACApiB,KAAAgjB,WAAAN,GAAAlQ,YAAAsQ,EACA9iB,KAAAoiB,WAAAe,KAAApV,EAAA+U,IAUA,SAAAM,GAAAN,GACA,IAAA9iB,KAAA+iB,2BAAAD,GAAA,CACA,IAAA/U,EAAAmV,GAAAJ,EAAA9iB,KAAAoiB,YACApiB,KAAAoiB,WAAAiB,KAAAtV,EAAA+U,IAUA,SAAAQ,GAAAR,GACA,IAAA9iB,KAAA+iB,2BAAAD,GAAA,CACA,IAAA5gB,EAAAlC,KAAAgjB,WAAAN,GAAAlQ,YAEA,GAAAtQ,KAAAqhB,SAAAT,EAAAS,OAAA,CACA,IAAAxV,EAAAmV,GAAAJ,EAAA9iB,KAAAoiB,YACApiB,KAAAoiB,WAAAoB,GAAAzV,EAAA+U,GACA9iB,KAAAyjB,iBAWA,SAAAC,GAAAZ,GACA,IAAA9iB,KAAA+iB,2BAAAD,GAAA,CACA,IAAA/U,EAAAmV,GAAAJ,EAAA9iB,KAAAoiB,YACApiB,KAAAoiB,WAAAuB,UAAA5V,EAAA+U,IAUA,SAAAc,GAAAd,GACA,IAAA9iB,KAAA+iB,2BAAAD,GAAA,CACA,IAAA/U,EAAAmV,GAAAJ,EAAA9iB,KAAAoiB,YACApiB,KAAAoiB,WAAAyB,SAAA9V,EAAA+U,IAKA,IAAAgB,GAAA,SAAAC,GACA,SAAAD,EAAA1B,GACA,IAAAC,EAAA,CACAQ,aACAO,aACAE,WACAI,aACAE,aAEAG,EAAAxjB,KAAAP,KAAAoiB,EAAAC,GAMAriB,KAAAgjB,WAAAZ,EAAAY,WAMAhjB,KAAAgkB,YAAA,GAgEA,OA7DAD,IAAAD,EAAApX,UAAAqX,GACAD,EAAA9hB,UAAAlB,OAAAY,OAAAqiB,KAAA/hB,WACA8hB,EAAA9hB,UAAA+I,YAAA+Y,EA0BAA,EAAA9hB,UAAA+gB,2BAAA,SAAAD,GAIA,IAHA,IAAAmB,EAAAjkB,KAAAgkB,YACAE,EAAApB,EAAAqB,QACAC,EAAAtB,EAAAuB,QACAjkB,EAAA,EAAAC,EAAA4jB,EAAA5gB,OAAA/B,OAAA,EAAiDlB,EAAAC,IAAAiB,EAAA2iB,EAAA7jB,IAAuBA,IAAA,CAExE,IAAAkkB,EAAA5hB,KAAA6hB,IAAAL,EAAA5iB,EAAA,IACAkjB,EAAA9hB,KAAA6hB,IAAAH,EAAA9iB,EAAA,IACA,GAAAgjB,GAAA1B,IAAA4B,GAAA5B,GACA,SAGA,UAQAkB,EAAA9hB,UAAAihB,OAAA,SAAAH,GACA,IAAA/U,EAAAmV,GAAAJ,EAAA9iB,KAAAoiB,YACApiB,KAAAoiB,WAAAa,OAAAlV,EAAA+U,GACA9iB,KAAAyjB,gBAMAK,EAAA9hB,UAAAyhB,aAAA,kBACAzjB,KAAAgjB,WAAAN,GAAAlQ,aAGAsR,EArFA,CAsFErB,IAWK,SAAAS,GAAAJ,EAAAV,GACP,IAAArU,EAAAqU,EAAAqC,WAAA3B,KAGA4B,EAAA3W,EAAA8L,eAUA,OATA9L,EAAA8L,eAAA,WACAiJ,EAAAjJ,iBACA6K,KAGA3W,EAAA4W,UAAAjC,GACA3U,EAAA6W,WAAA,EACA7W,EAAA8W,YAAAlC,GAEA5U,EAIe,IAAA+W,GAAA,GChNfC,GAAA,CACA,GACA,cACA,QACA,MACA,SASA,SAAAC,GAAAlC,GACA9iB,KAAAgjB,WAAAF,EAAA6B,UAAAnS,YAAAsQ,EACA,IAAA/U,EAAA/N,KAAAilB,cAAAnC,GACA9iB,KAAAoiB,WAAAe,KAAApV,EAAA+U,GASA,SAAAoC,GAAApC,GACA,IAAA/U,EAAA/N,KAAAilB,cAAAnC,GACA9iB,KAAAoiB,WAAAiB,KAAAtV,EAAA+U,GASA,SAAAqC,GAAArC,GACA,IAAA/U,EAAA/N,KAAAilB,cAAAnC,GACA9iB,KAAAoiB,WAAAoB,GAAAzV,EAAA+U,GACA9iB,KAAAolB,QAAAtC,EAAA6B,WASA,SAAAU,GAAAvC,GACA,IAAA/U,EAAA/N,KAAAilB,cAAAnC,GACA9iB,KAAAoiB,WAAAyB,SAAA9V,EAAA+U,GASA,SAAAwC,GAAAxC,GACA,IAAA/U,EAAA/N,KAAAilB,cAAAnC,GACA9iB,KAAAoiB,WAAAuB,UAAA5V,EAAA+U,GASA,SAAAyC,GAAAzC,GACA,IAAA/U,EAAA/N,KAAAilB,cAAAnC,GACA9iB,KAAAoiB,WAAAa,OAAAlV,EAAA+U,GACA9iB,KAAAolB,QAAAtC,EAAA6B,WASA,SAAAa,GAAA1C,GACA,IAAA/U,EAAA/N,KAAAoiB,WAAAqD,UAAA,qBAAA3C,KACA9iB,KAAAoiB,WAAA/H,cAAAtM,GASA,SAAA2X,GAAA5C,GACA,IAAA/U,EAAA/N,KAAAoiB,WAAAqD,UAAA,oBAAA3C,KACA9iB,KAAAoiB,WAAA/H,cAAAtM,GAGA,IAAA4X,GAAA,SAAA5B,GACA,SAAA4B,EAAAvD,GACA,IAAAC,EAAA,CACAuD,cAAAZ,GACAa,cAAAX,GACAY,YAAAX,GACAY,aAAAV,GACAW,cAAAV,GACAW,gBAAAV,GACAW,oBAAAR,GACAS,qBAAAX,IAEAzB,EAAAxjB,KAAAP,KAAAoiB,EAAAC,GAMAriB,KAAAgjB,WAAAZ,EAAAY,WAkCA,OA/BAe,IAAA4B,EAAAjZ,UAAAqX,GACA4B,EAAA3jB,UAAAlB,OAAAY,OAAAqiB,KAAA/hB,WACA2jB,EAAA3jB,UAAA+I,YAAA4a,EAUAA,EAAA3jB,UAAAijB,cAAA,SAAAnC,GAEA,IAAA/U,EAAA+U,EAMA,MALA,kBAAAA,EAAA+B,cACA9W,EAAA/N,KAAAoiB,WAAAqC,WAAA3B,KACA/U,EAAA8W,YAAAE,GAAAjC,EAAA+B,cAGA9W,GAOA4X,EAAA3jB,UAAAojB,QAAA,SAAAT,UACA3kB,KAAAgjB,WAAA2B,EAAAnS,aAGAmT,EApDA,CAqDElD,IAEa2D,GAAA,GCxJf,SAAAC,GAAAvD,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAAyD,GAAAzD,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAA0D,GAAA1D,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAA2D,GAAA3D,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAA4D,GAAA5D,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAA6D,GAAA7D,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAA8D,GAAA9D,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GASA,SAAA+D,GAAA/D,GACA9iB,KAAAoiB,WAAAkE,gBAAAxD,GAGA,IAAAgE,GAAA,SAAA/C,GACA,SAAA+C,EAAA1E,GACA,IAAAC,EAAA,CACA0E,YAAAV,GACAW,YAAAT,GACAU,UAAAT,GACAU,WAAAT,GACAU,YAAAT,GACAU,cAAAT,GACAU,kBAAAR,GACAS,mBAAAV,IAEA7C,EAAAxjB,KAAAP,KAAAoiB,EAAAC,GAOA,OAJA0B,IAAA+C,EAAApa,UAAAqX,GACA+C,EAAA9kB,UAAAlB,OAAAY,OAAAqiB,KAAA/hB,WACA8kB,EAAA9kB,UAAA+I,YAAA+b,EAEAA,EAnBA,CAoBErE,IAEa8E,GAAA,GCjGfC,IAAA,EAGAC,GAAA,SAAAC,GACA,SAAAD,EAAAlU,EAAAqM,EAAA+H,GACAD,EAAAnnB,KAAAP,KAAAuT,GAMAvT,KAAA4f,gBAEA,IAAAgI,EAAAD,GAAA,GAKA3nB,KAAA6nB,QAAAC,GAAAF,GAKA5nB,KAAA+nB,SAAAC,GAAAJ,EAAA5nB,KAAA6nB,SAOA7nB,KAAAioB,QAAA,YAAAL,KAAA,WAKA5nB,KAAAkoB,WAAA,eAAAN,KAAA,cAKA5nB,KAAAmoB,KAAA,SAAAP,IAAA,aAKA5nB,KAAAooB,OAAA,WAAAR,IAAA,eAKA5nB,KAAAqoB,QAAA,YAAAT,IAAA,aAKA5nB,KAAAsoB,QAAA,YAAAV,IAAA,aAKA5nB,KAAAmkB,QAAA,YAAAyD,IAAA,aAKA5nB,KAAAqkB,QAAA,YAAAuD,IAAA,aAKA5nB,KAAAuoB,QAAA,YAAAX,KAAA,WAKA5nB,KAAAwoB,OAAA,WAAAZ,KAAA,UAKA5nB,KAAAyoB,SAAA,aAAAb,KAAA,YAKA5nB,KAAA0oB,QAAA,YAAAd,KAAA,WAKA5nB,KAAAujB,OAAA,WAAAqE,IAAA,YAKA5nB,KAAA2oB,cAAA,kBAAAf,EACAA,EAAA,sBAQA5nB,KAAA2kB,UAAA,cAAAiD,IAAA,eAKA5nB,KAAA4oB,MAAA,UAAAhB,IAAA,WAKA5nB,KAAAiF,OAAA,WAAA2iB,IAAA,YAKA5nB,KAAA6oB,MAAA,UAAAjB,IAAA,WAKA5nB,KAAA8oB,MAAA,UAAAlB,IAAA,WAKA5nB,KAAA6kB,YAAA,gBAAA+C,IAAA,kBAKA5nB,KAAA+oB,YAAA,gBAAAnB,IAAA,iBAKA5nB,KAAA4kB,UAAA,cAAAgD,KAAA,aAGAhI,EAAA/F,iBACA7Z,KAAA6Z,eAAA,WACA+F,EAAA/F,mBASA,OAJA6N,IAAAD,EAAA/a,UAAAgb,GACAD,EAAAzlB,UAAAlB,OAAAY,OAAAgmB,KAAA1lB,WACAylB,EAAAzlB,UAAA+I,YAAA0c,EAEAA,EAtJA,CAuJE3N,GAOF,SAAAgO,GAAAF,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAL,GACAK,EAAAD,EAAAC,aAEA,OAAAD,EAAAoB,OACA,OAAAnB,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,QAAAA,EAAA,EAGA,OAAAA,EASA,SAAAG,GAAAJ,EAAAC,GAGA,IAAAE,EAAA,EAMA,OAJAA,EADAH,EAAAG,SACAH,EAAAG,SAEAF,EAAA,KAEAE,GAOA,WACA,IACA,IAAAkB,EAAA,IAAAC,WAAA,SAAsCrB,QAAA,IACtCL,GAAA,IAAAyB,EAAApB,QACG,MAAA9Z,MAJH,GASe,IAAAob,GAAA,GC/PR,SAAAC,GAAAC,EAAAC,EAAAC,GACP,IAAAhkB,EAAAikB,EACAC,EAAAF,GAAAG,GACAC,EAAA,EACAC,EAAAP,EAAAhmB,OACAwmB,GAAA,EAEA,MAAAF,EAAAC,EAGArkB,EAAAokB,GAAAC,EAAAD,GAAA,GACAH,GAAAC,EAAAJ,EAAA9jB,GAAA+jB,GAEAE,EAAA,EACAG,EAAApkB,EAAA,GAGAqkB,EAAArkB,EACAskB,GAAAL,GAKA,OAAAK,EAAAF,KAWO,SAAAD,GAAAplB,EAAAC,GACP,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,IAUO,SAAAulB,GAAA3kB,EAAA2F,GACP,OAAA3F,EAAA/B,QAAA0H,IAAA,EAYO,SAAAif,GAAA5kB,EAAA+F,EAAA8e,GACP,IAMA5pB,EANAyB,EAAAsD,EAAA9B,OACA,GAAA8B,EAAA,IAAA+F,EACA,SACG,GAAAA,GAAA/F,EAAAtD,EAAA,GACH,OAAAA,EAAA,EAGA,GAAAmoB,EAAA,GACA,IAAA5pB,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxB,GAAA+E,EAAA/E,GAAA8K,EACA,OAAA9K,EAAA,OAGK,GAAA4pB,EAAA,GACL,IAAA5pB,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxB,GAAA+E,EAAA/E,IAAA8K,EACA,OAAA9K,OAIA,IAAAA,EAAA,EAAiBA,EAAAyB,IAAOzB,EAAA,CACxB,GAAA+E,EAAA/E,IAAA8K,EACA,OAAA9K,EACS,GAAA+E,EAAA/E,GAAA8K,EACT,OAAA/F,EAAA/E,EAAA,GAAA8K,IAAA/F,EAAA/E,GACAA,EAAA,EAEAA,EAKA,OAAAyB,EAAA,EAUO,SAAAooB,GAAA9kB,EAAA+kB,EAAAC,GACP,MAAAD,EAAAC,EAAA,CACA,IAAAxf,EAAAxF,EAAA+kB,GACA/kB,EAAA+kB,GAAA/kB,EAAAglB,GACAhlB,EAAAglB,GAAAxf,IACAuf,IACAC,GAUO,SAAA/lB,GAAAe,EAAAU,GAGP,IAFA,IAAAukB,EAAAvW,MAAA6I,QAAA7W,KAAA,CAAAA,GACAxC,EAAA+mB,EAAA/mB,OACAjD,EAAA,EAAiBA,EAAAiD,EAAYjD,IAC7B+E,IAAA9B,QAAA+mB,EAAAhqB,GAWO,SAASiqB,GAAMllB,EAAA2F,GACtB,IAAA1K,EAAA+E,EAAA/B,QAAA0H,GACA+e,EAAAzpB,GAAA,EAIA,OAHAypB,GACA1kB,EAAA+B,OAAA9G,EAAA,GAEAypB,EA6BO,SAAAS,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAAlnB,OACA,GAAAonB,IAAAD,EAAAnnB,OACA,SAEA,QAAAjD,EAAA,EAAiBA,EAAAqqB,EAAUrqB,IAC3B,GAAAmqB,EAAAnqB,KAAAoqB,EAAApqB,GACA,SAGA,SAWO,SAAAsqB,GAAAvlB,EAAAwlB,GACP,IAEAvqB,EAFAiD,EAAA8B,EAAA9B,OACAsH,EAAAkJ,MAAA1O,EAAA9B,QAEA,IAAAjD,EAAA,EAAaA,EAAAiD,EAAYjD,IACzBuK,EAAAvK,GAAA,CAAc0G,MAAA1G,EAAAiB,MAAA8D,EAAA/E,IAKd,IAHAuK,EAAAlB,KAAA,SAAAnF,EAAAC,GACA,OAAAomB,EAAArmB,EAAAjD,MAAAkD,EAAAlD,QAAAiD,EAAAwC,MAAAvC,EAAAuC,QAEA1G,EAAA,EAAaA,EAAA+E,EAAA9B,OAAgBjD,IAC7B+E,EAAA/E,GAAAuK,EAAAvK,GAAAiB,MA0BO,SAAAupB,GAAAzlB,EAAA0lB,EAAAC,GACP,IAAAxlB,EAAAulB,GAAAnB,GACA,OAAAvkB,EAAA4lB,MAAA,SAAAC,EAAAlkB,GACA,OAAAA,EACA,SAEA,IAAAmkB,EAAA3lB,EAAAH,EAAA2B,EAAA,GAAAkkB,GACA,QAAAC,EAAA,GAAAH,GAAA,IAAAG,KC5MA,IAAAC,GAAA,IAKIC,GAAY,QAShB,SAAAC,GAAAtI,GACA9iB,KAAAqrB,eAAAvI,GACA9iB,KAAAsrB,iBAAAxI,EAAAyI,eAAA,IACAvrB,KAAAwrB,iBAAA1I,GACA9iB,KAAAyrB,cACAzrB,KAAA0rB,gBAAA5I,EAAA9iB,KAAA2rB,WASA,SAAAC,GAAA9I,GACA9iB,KAAA0rB,gBAAA5I,EAAA9iB,KAAA6rB,cAUA,SAAAC,GAAAhJ,GACA9iB,KAAAwrB,iBAAA1I,GACA9iB,KAAA0rB,gBAAA5I,EAAA9iB,KAAA+rB,QAUA,SAAAC,GAAAlJ,GACA9iB,KAAA0rB,gBAAA5I,EAAA9iB,KAAAisB,YAIA,IAAIC,GAAW,SAAAnI,GACf,SAAAoI,EAAA/J,EAAAgK,GACA,IAAA/J,EAAA,CACA+I,cACAQ,aACAE,YACAE,gBAEAjI,EAAAxjB,KAAAP,KAAAoiB,EAAAC,GAMAriB,KAAAgjB,WAAAZ,EAAAY,WAMAhjB,KAAAosB,cAMApsB,KAAAqsB,mBAAAjf,EAMApN,KAAAyrB,YAAA,EAMAzrB,KAAAssB,SAQAtsB,KAAAusB,cAAA,KAqRA,OAlRAxI,IAAAoI,EAAAzf,UAAAqX,GACAoI,EAAAnqB,UAAAlB,OAAAY,OAAAqiB,KAAA/hB,WACAmqB,EAAAnqB,UAAA+I,YAAAohB,EAOAA,EAAAnqB,UAAAwqB,gBAAA,SAAAC,GACA,OAAAzsB,KAAAqsB,gBAAAI,EAAAC,YAQAP,EAAAnqB,UAAAspB,iBAAA,SAAAmB,GACA,IAAAE,EAAA7rB,OAAA+X,KAAA7Y,KAAAgjB,YAAA3f,QACA,IAAAspB,GAAA,IAAAA,GAAuCjK,GAAUlQ,aAAAxS,KAAAgjB,cACjDhjB,KAAAqsB,cAAAI,EAAAC,WACA1sB,KAAA4sB,2BAQAT,EAAAnqB,UAAA6qB,sBAAA,SAAAC,GACAA,EAAAlI,YACA5kB,KAAAqsB,mBAAAjf,EACApN,KAAA+sB,qBAOAZ,EAAAnqB,UAAA+qB,iBAAA,WACA/sB,KAAAssB,SAAAU,WACAhtB,KAAAitB,wBAAArrB,KAAA5B,MACAkrB,KAMAiB,EAAAnqB,UAAAirB,wBAAA,WACAjtB,KAAAyrB,YAAA,EACAzrB,KAAAssB,cAAAlf,GAMA+e,EAAAnqB,UAAA4qB,uBAAA,gBACAxf,IAAApN,KAAAssB,UACAY,aAAAltB,KAAAssB,WAUAH,EAAAnqB,UAAAmrB,gBAAA,SAAAzN,EAAA+M,GACA,IAAA1e,EAAA/N,KAAAoiB,WAAAqC,WAAA/E,EAAA+M,GAyBA,OArBA1e,EAAA4W,UAAA8H,EAAAC,WAAA,EAGA3e,EAAAka,SAAA,EACAla,EAAAma,YAAA,EACAna,EAAAqa,OAAApoB,KAAAyrB,YACA1d,EAAAwV,OAAA,EACAxV,EAAA8Z,QAAA,EACA9Z,EAAA6a,MAAA6D,EAAAW,SAAA,EACArf,EAAA9I,OAAAwnB,EAAAY,SAAA,EACAtf,EAAAga,SAAA0E,EAAAa,OAAA,GACAvf,EAAA6W,UAAA5kB,KAAAwsB,gBAAAC,GACA1e,EAAA8W,YAAoBsG,GAIpBpd,EAAAoW,QAAAsI,EAAAtI,QACApW,EAAAsW,QAAAoI,EAAApI,QACAtW,EAAAsa,QAAAoE,EAAApE,QACAta,EAAAua,QAAAmE,EAAAnE,QAEAva,GAQAoe,EAAAnqB,UAAA0pB,gBAAA,SAAA5I,EAAAyK,GACA,IAAAC,EAAA3Z,MAAA7R,UAAAwE,MAAAjG,KAAAuiB,EAAAyI,gBACAoB,EAAAa,EAAAnqB,OACA,SAAAwW,IACAiJ,EAAAjJ,iBAEA,QAAAzZ,EAAA,EAAmBA,EAAAusB,IAAWvsB,EAAA,CAC9B,IAAAqtB,EAAAztB,KAAAmtB,gBAAArK,EAAA0K,EAAAptB,IAEAqtB,EAAA5T,iBACA0T,EAAAhtB,KAAAP,KAAA8iB,EAAA2K,KAUAtB,EAAAnqB,UAAA0rB,WAAA,SAAAC,EAAAC,GAEA,IADA,IAAAvtB,EAAAstB,EAAAtqB,OACAjD,EAAA,EAAmBA,EAAAC,EAAOD,IAAA,CAC1B,IAAAytB,EAAAF,EAAAvtB,GACA,GAAAytB,EAAAnB,aAAAkB,EACA,SAGA,UAcAzB,EAAAnqB,UAAAqpB,eAAA,SAAAvI,GACA,IAAA6K,EAAA7K,EAAA0K,QAGA3U,EAAA/X,OAAA+X,KAAA7Y,KAAAgjB,YACA2J,EAAA9T,EAAAxV,OACA,GAAAspB,GAAAgB,EAAAtqB,OAAA,CAEA,IADA,IAAA3C,EAAA,GACAN,EAAA,EAAqBA,EAAAusB,IAAWvsB,EAAA,CAChC,IAAAuB,EAAAmsB,OAAAjV,EAAAzY,IACAiB,EAAArB,KAAAgjB,WAAArhB,GAIAA,GAAmB+gB,IAAU1iB,KAAA0tB,WAAAC,EAAAhsB,EAAA,IAC7BjB,EAAAgF,KAAArE,EAAA0sB,KAGA,QAAAC,EAAA,EAAuBA,EAAAttB,EAAA2C,SAAgB2qB,EACvChuB,KAAAisB,WAAAnJ,EAAApiB,EAAAstB,MAUA7B,EAAAnqB,UAAA2pB,UAAA,SAAAjM,EAAAoN,GACA9sB,KAAAgjB,WAAA8J,EAAAnI,WAAA,CACAzZ,OAAA4hB,EAAA5hB,OACA6iB,IAAAjB,EACAmB,UAAAnB,EAAA5hB,QAEAlL,KAAAoiB,WAAA8L,KAAApB,EAAApN,GACA1f,KAAAoiB,WAAA+L,MAAArB,EAAApN,GACA1f,KAAAoiB,WAAAe,KAAA2J,EAAApN,IAQAyM,EAAAnqB,UAAA6pB,aAAA,SAAAnM,EAAAoN,GACA,IAAAxS,EAAAwS,EACAW,EAAAztB,KAAAgjB,WAAA1I,EAAAqK,WAEA,GAAA8I,EAAA,CAGA,IAAAW,EAAAX,EAAAM,IACAE,EAAAR,EAAAQ,UACAjuB,KAAAoiB,WAAAiB,KAAA/I,EAAAoF,GACA0O,GAAAH,IAAA3T,EAAApP,SACAkjB,EAAAzF,cAAArO,EAAApP,OACwB,EAAAyd,cAAAsF,EAExBG,EAAAljB,OAAA+iB,EACA3T,EAAApP,QACAlL,KAAAoiB,WAAAyB,SAAAuK,EAAA1O,GACA1f,KAAAoiB,WAAAuB,UAAArJ,EAAAoF,KAG0B,EAAAxU,OAAA+iB,EACA,EAAAtF,cAAA,KAC1B3oB,KAAAisB,WAAAvM,EAAApF,KAGAmT,EAAAM,IAAAzT,EACAmT,EAAAQ,UAAA3T,EAAApP,SAQAihB,EAAAnqB,UAAA+pB,OAAA,SAAArM,EAAAoN,GACA9sB,KAAAoiB,WAAAoB,GAAAsJ,EAAApN,GACA1f,KAAAoiB,WAAA2L,IAAAjB,EAAApN,GACA1f,KAAAoiB,WAAAiM,MAAAvB,EAAApN,GACA1f,KAAAsuB,gBAAAxB,IAQAX,EAAAnqB,UAAAiqB,WAAA,SAAAvM,EAAAoN,GACA9sB,KAAAoiB,WAAAa,OAAA6J,EAAApN,GACA1f,KAAAoiB,WAAA2L,IAAAjB,EAAApN,GACA1f,KAAAoiB,WAAAiM,MAAAvB,EAAApN,GACA1f,KAAAsuB,gBAAAxB,IAOAX,EAAAnqB,UAAAssB,gBAAA,SAAAxB,UACA9sB,KAAAgjB,WAAA8J,EAAAnI,WACA3kB,KAAA6sB,sBAAAC,IASAX,EAAAnqB,UAAAwpB,iBAAA,SAAA1I,GACA,IAAAmB,EAAAjkB,KAAAosB,YAAApI,YACA1iB,EAAAwhB,EAAAyI,eAAA,GAEA,GAAAvrB,KAAAwsB,gBAAAlrB,GAAA,CAEA,IAAAitB,EAAA,CAAAjtB,EAAA6iB,QAAA7iB,EAAA+iB,SACAJ,EAAAve,KAAA6oB,GAEAvB,WAAA,WAEQ3C,GAAMpG,EAAAsK,IACPvuB,KAAAusB,iBAIPJ,EAnUe,CAoUb1J,IAEa+L,GAAA,GCvXfC,GAAA,CAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,aAIIC,GAAmB,SAAArS,GACvB,SAAAsS,EAAA7f,GACAuN,EAAA9b,KAAAP,MAOAA,KAAA4uB,SAAA9f,EAMA9O,KAAAgjB,WAAA,GAMAhjB,KAAA6uB,UAAA,GAMA7uB,KAAA8uB,iBAAA,GAEA9uB,KAAA+uB,kBA8SA,OA3SA1S,IAAAsS,EAAAjiB,UAAA2P,GACAsS,EAAA3sB,UAAAlB,OAAAY,OAAA2a,KAAAra,WACA2sB,EAAA3sB,UAAA+I,YAAA4jB,EAMAA,EAAA3sB,UAAA+sB,gBAAA,WACA,GAAQ7N,GACRlhB,KAAAgvB,eAAA,aAAwCzH,GAAYvnB,YAC/C,GAAUmhB,GACfnhB,KAAAgvB,eAAA,SAAoC5I,GAAQpmB,WACvC,CACL,IAAAosB,EAAA,IAA4BtH,GAAW9kB,MACvCA,KAAAgvB,eAAA,QAAA5C,GAEUnL,IACVjhB,KAAAgvB,eAAA,YAAyCR,GAAWxuB,KAAAosB,IAKpDpsB,KAAAivB,aASAN,EAAA3sB,UAAAgtB,eAAA,SAAAruB,EAAA0W,GACA,IAAAlV,EAAAkV,EACA6X,EAAA/sB,EAAAogB,YAEA2M,IACAA,EAAAtgB,QAAA,SAAAb,GACA,IAAAohB,EAAAhtB,EAAAqgB,mBAAAzU,GAEAohB,IACAnvB,KAAA6uB,UAAA9gB,GAAAohB,EAAAvtB,KAAAO,KAEOP,KAAA5B,OACPA,KAAA8uB,iBAAAppB,KAAAvD,KAQAwsB,EAAA3sB,UAAAitB,UAAA,WAEA,IADA,IAAA5uB,EAAAL,KAAA8uB,iBAAAzrB,OACAjD,EAAA,EAAmBA,EAAAC,EAAOD,IAAA,CAC1B,IAAAgvB,EAAApvB,KAAA8uB,iBAAA1uB,GACAJ,KAAAqvB,WAAAD,EAAA7M,eAQAoM,EAAA3sB,UAAAstB,YAAA,WAEA,IADA,IAAAjvB,EAAAL,KAAA8uB,iBAAAzrB,OACAjD,EAAA,EAAmBA,EAAAC,EAAOD,IAAA,CAC1B,IAAAgvB,EAAApvB,KAAA8uB,iBAAA1uB,GACAJ,KAAAuvB,cAAAH,EAAA7M,eASAoM,EAAA3sB,UAAAwtB,cAAA,SAAA1M,GACA,IAAAvP,EAAAuP,EAAAvP,KACA4b,EAAAnvB,KAAA6uB,UAAAtb,GACA4b,GACAA,EAAArM,IASA6L,EAAA3sB,UAAAqtB,WAAA,SAAAI,GACAA,EAAA7gB,QAAA,SAAA8gB,GACMpc,EAAMtT,KAAA4uB,SAAAc,EAAA1vB,KAAAwvB,cAAAxvB,OACP4B,KAAA5B,QAQL2uB,EAAA3sB,UAAAutB,cAAA,SAAAE,GACAA,EAAA7gB,QAAA,SAAAb,GACMiL,EAAQhZ,KAAA4uB,SAAA7gB,EAAA/N,KAAAwvB,cAAAxvB,OACT4B,KAAA5B,QAYL2uB,EAAA3sB,UAAAyiB,WAAA,SAAAnK,EAAAwI,GAEA,IADA,IAAA6M,EAAA,GACAvvB,EAAA,EAAAgX,EAAAqX,GAAAprB,OAA4CjD,EAAAgX,EAAQhX,IAAA,CACpD,IAAA8B,EAAAusB,GAAAruB,GAAA,GACAuvB,EAAAztB,GAAAoY,EAAApY,IAAA4gB,EAAA5gB,IAAAusB,GAAAruB,GAAA,GAGA,OAAAuvB,GAWAhB,EAAA3sB,UAAAmhB,KAAA,SAAAtd,EAAAyU,GACAta,KAAA4vB,UAAmB1N,GAAgBV,YAAA3b,EAAAyU,IAQnCqU,EAAA3sB,UAAAqhB,KAAA,SAAAxd,EAAAyU,GACAta,KAAA4vB,UAAmB1N,GAAgBX,YAAA1b,EAAAyU,IAQnCqU,EAAA3sB,UAAAwhB,GAAA,SAAA3d,EAAAyU,GACAta,KAAA4vB,UAAmB1N,GAAgBT,UAAA5b,EAAAyU,IAQnCqU,EAAA3sB,UAAAmsB,MAAA,SAAAtoB,EAAAyU,GACAzU,EAAAoiB,SAAA,EACAjoB,KAAA4vB,UAAmB1N,GAAgBN,aAAA/b,EAAAyU,IAQnCqU,EAAA3sB,UAAAqsB,MAAA,SAAAxoB,EAAAyU,GACAzU,EAAAoiB,SAAA,EACAjoB,KAAA4vB,UAAmB1N,GAAgBL,aAAAhc,EAAAyU,IAQnCqU,EAAA3sB,UAAAksB,KAAA,SAAAroB,EAAAyU,GACAzU,EAAAoiB,SAAA,EACAjoB,KAAA4vB,UAAmB1N,GAAgBR,YAAA7b,EAAAyU,IAQnCqU,EAAA3sB,UAAA+rB,IAAA,SAAAloB,EAAAyU,GACAzU,EAAAoiB,SAAA,EACAjoB,KAAA4vB,UAAmB1N,GAAgBP,WAAA9b,EAAAyU,IAQnCqU,EAAA3sB,UAAAihB,OAAA,SAAApd,EAAAyU,GACAta,KAAA4vB,UAAmB1N,GAAgBJ,cAAAjc,EAAAyU,IAQnCqU,EAAA3sB,UAAA6hB,SAAA,SAAAhe,EAAAyU,GACAta,KAAA+tB,IAAAloB,EAAAyU,GACAta,KAAA6vB,UAAAhqB,EAAAqF,OAAArF,EAAA8iB,gBACA3oB,KAAAquB,MAAAxoB,EAAAyU,IASAqU,EAAA3sB,UAAA2hB,UAAA,SAAA9d,EAAAyU,GACAta,KAAAkuB,KAAAroB,EAAAyU,GACAta,KAAA6vB,UAAAhqB,EAAAqF,OAAArF,EAAA8iB,gBACA3oB,KAAAmuB,MAAAtoB,EAAAyU,IAWAqU,EAAA3sB,UAAA6tB,UAAA,SAAAniB,EAAAoiB,GACA,SAAApiB,IAAAoiB,IAGApiB,EAAA3I,SAAA+qB,IAaAnB,EAAA3sB,UAAAyjB,UAAA,SAAAsK,EAAAlqB,EAAAyU,GACA,WAAe6O,GAAY4G,EAAAzV,EAAAzU,IAS3B8oB,EAAA3sB,UAAA4tB,UAAA,SAAAG,EAAAlqB,EAAAyU,GACA,IAAAvM,EAAA/N,KAAAylB,UAAAsK,EAAAlqB,EAAAyU,GACAta,KAAAqa,cAAAtM,IAQA4gB,EAAA3sB,UAAAskB,gBAAA,SAAAhM,GACA,IAAAvM,EAAA/N,KAAAylB,UAAAnL,EAAA/G,KAAA+G,KACAta,KAAAqa,cAAAtM,IAUA4gB,EAAA3sB,UAAAguB,eAAA,SAAAzS,EAAAjD,GACA,IAAA0H,EAAAhiB,KAAAylB,UACAlI,EAAiB2F,GAAiB5I,EAAAta,MAAAsa,GAClC,OAAA0H,GAMA2M,EAAA3sB,UAAAqX,gBAAA,WACArZ,KAAAsvB,cACAjT,EAAAra,UAAAqX,gBAAA9Y,KAAAP,OAGA2uB,EA3UuB,CA4UrBhU,GAEasV,GAAA,GCxZXC,GAAsB,SAAA7T,GAC1B,SAAA8T,EAAA7b,EAAA8b,GAEA/T,EAAA9b,KAAAP,MAOAA,KAAAqwB,KAAA/b,EAMAtU,KAAAswB,gBAMAtwB,KAAAuwB,WAAA,EAMAvwB,KAAAwwB,kBAAA,GAMAxwB,KAAAywB,eAAAL,EACAA,EAAsBzP,GAAqBA,GAQ3C3gB,KAAA0wB,MAAA,KAEA,IAAA5hB,EAAA9O,KAAAqwB,KAAAM,cAMA3wB,KAAA4wB,gBAAA,EAMA5wB,KAAA6wB,gBAAA,GASA7wB,KAAA8wB,qBAAA,IAAoCb,GAAmBnhB,GASvD9O,KAAA+wB,6BAAA,KAMA/wB,KAAAgxB,wBAAmC1d,EAAMtT,KAAA8wB,qBACnC5O,GAAgBV,YACtBxhB,KAAAixB,mBAAAjxB,MAMAA,KAAAkxB,oBAA+B5d,EAAMtT,KAAA8wB,qBAC/B5O,GAAgBX,YACtBvhB,KAAAmxB,YAAAnxB,MA2NA,OAvNAqc,IAAA8T,EAAAzjB,UAAA2P,GACA8T,EAAAnuB,UAAAlB,OAAAY,OAAA2a,KAAAra,WACAmuB,EAAAnuB,UAAA+I,YAAAolB,EAOAA,EAAAnuB,UAAAovB,cAAA,SAAApP,GACA,IAAAqP,EAAA,IAAuBpP,GACjBb,GAAmBpG,MAAAhb,KAAAqwB,KAAArO,GACzBhiB,KAAAqa,cAAAgX,QACAjkB,IAAApN,KAAAswB,iBAEApD,aAAAltB,KAAAswB,iBACAtwB,KAAAswB,qBAAAljB,EACAikB,EAAA,IAAqBpP,GACbb,GAAmBnG,SAAAjb,KAAAqwB,KAAArO,GAC3BhiB,KAAAqa,cAAAgX,IAGArxB,KAAAswB,gBAAAtD,WAAA,WACAhtB,KAAAswB,qBAAAljB,EACA,IAAAikB,EAAA,IAA2BpP,GACjBb,GAAmBC,YAAArhB,KAAAqwB,KAAArO,GAC7BhiB,KAAAqa,cAAAgX,IACOzvB,KAAA5B,MAAA,MAWPmwB,EAAAnuB,UAAAsvB,sBAAA,SAAAtP,GACA,IAAA1H,EAAA0H,EAEA1H,EAAA/G,MAAsB6N,GAAmBK,WACzCnH,EAAA/G,MAAsB6N,GAAmBU,qBACzC9hB,KAAA6wB,gBAAAvW,EAAAqK,WACKrK,EAAA/G,MAAwB6N,GAAmBI,cAChDxhB,KAAA6wB,gBAAAvW,EAAAqK,YAAA,GAEA3kB,KAAA4wB,gBAAA9vB,OAAA+X,KAAA7Y,KAAA6wB,iBAAAxtB,QAQA8sB,EAAAnuB,UAAAuvB,iBAAA,SAAAvP,GACAhiB,KAAAsxB,sBAAAtP,GACA,IAAAqP,EAAA,IAAuBpP,GACjBb,GAAmBK,UAAAzhB,KAAAqwB,KAAArO,GACzBhiB,KAAAqa,cAAAgX,GAQAA,EAAA1X,oBAAA3Z,KAAAuwB,YAAAvwB,KAAAwxB,qBAAAxP,IACAhiB,KAAAoxB,cAAApxB,KAAA0wB,OAGA,IAAA1wB,KAAA4wB,kBACA5wB,KAAAwwB,kBAAA5hB,QAAqCoJ,GACrChY,KAAAwwB,kBAAAntB,OAAA,EACArD,KAAAuwB,WAAA,EACAvwB,KAAA0wB,MAAA,KACA1wB,KAAA+wB,6BAAA3X,UACApZ,KAAA+wB,6BAAA,OAUAZ,EAAAnuB,UAAAwvB,qBAAA,SAAAxP,GACA,WAAAA,EAAAuB,QAQA4M,EAAAnuB,UAAAivB,mBAAA,SAAAjP,GACAhiB,KAAAsxB,sBAAAtP,GACA,IAAAqP,EAAA,IAAuBpP,GACjBb,GAAmBI,YAAAxhB,KAAAqwB,KAAArO,GACzBhiB,KAAAqa,cAAAgX,GAEArxB,KAAA0wB,MAAA1O,EAEA,IAAAhiB,KAAAwwB,kBAAAntB,SAKArD,KAAA+wB,6BACA,IAAcd,GAAmBtiB,UAEjC3N,KAAAwwB,kBAAA9qB,KACQ4N,EAAMtT,KAAA+wB,6BACJ3P,GAAmBG,YAC7BvhB,KAAAyxB,mBAAAzxB,MACQsT,EAAMtT,KAAA+wB,6BACJ3P,GAAmBK,UAC7BzhB,KAAAuxB,iBAAAvxB,MAcQsT,EAAMtT,KAAA8wB,qBACJ1P,GAAmBU,cAC7B9hB,KAAAuxB,iBAAAvxB,SAUAmwB,EAAAnuB,UAAAyvB,mBAAA,SAAAzP,GAIA,GAAAhiB,KAAA0xB,UAAA1P,GAAA,CACAhiB,KAAAuwB,WAAA,EACA,IAAAc,EAAA,IAAyBpP,GACjBb,GAAmBE,YAAAthB,KAAAqwB,KAAArO,EAC3BhiB,KAAAuwB,WACAvwB,KAAAqa,cAAAgX,GAOArP,EAAAnI,kBAUAsW,EAAAnuB,UAAAmvB,YAAA,SAAAnP,GACA,IAAA/B,KAAAjgB,KAAA0wB,QAAA1wB,KAAA0xB,UAAA1P,IACAhiB,KAAAqa,cAAA,IAA2B4H,GAC3BD,EAAAzO,KAAAvT,KAAAqwB,KAAArO,EAAA/B,KASAkQ,EAAAnuB,UAAA0vB,UAAA,SAAA1P,GACA,OAAAhiB,KAAAuwB,WACA7tB,KAAA6hB,IAAAvC,EAAAmC,QAAAnkB,KAAA0wB,MAAAvM,SAAAnkB,KAAAywB,gBACA/tB,KAAA6hB,IAAAvC,EAAAqC,QAAArkB,KAAA0wB,MAAArM,SAAArkB,KAAAywB,gBAMAN,EAAAnuB,UAAAqX,gBAAA,WACArZ,KAAAkxB,sBACMlZ,EAAahY,KAAAkxB,qBACnBlxB,KAAAkxB,oBAAA,MAEAlxB,KAAAgxB,0BACMhZ,EAAahY,KAAAgxB,yBACnBhxB,KAAAgxB,wBAAA,MAGAhxB,KAAAwwB,kBAAA5hB,QAAmCoJ,GACnChY,KAAAwwB,kBAAAntB,OAAA,EAEArD,KAAA+wB,+BACA/wB,KAAA+wB,6BAAA3X,UACApZ,KAAA+wB,6BAAA,MAEA/wB,KAAA8wB,uBACA9wB,KAAA8wB,qBAAA1X,UACApZ,KAAA8wB,qBAAA,MAEAzU,EAAAra,UAAAqX,gBAAA9Y,KAAAP,OAGAmwB,EAtT0B,CAuTxBxV,GAGagX,GAAA,GC9TAC,GAAA,CAOfC,WAAA,aAOAC,UAAA,YAOAC,QAAA,WCrBeC,GAAA,CACfC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,QCJeC,GAAA,CAKfC,YAAA,cAKAC,WAAA,aAKAC,OAAA,SAOAC,eAAA,kBCtBeC,GAAA,CACfC,KAAA,EACAC,QAAA,EACAC,OAAA,EAKAxX,MAAA,EACAyX,MAAA,EACAC,MAAA,GCRO,SAAAC,GAAAC,EAAAC,GACP,IAAAD,EACA,UAAcxc,EAAcyc,GCDrB,IAAA9X,GAAArX,IAeHovB,GAAa,SAAAC,EAAAC,GAMjBrzB,KAAAszB,kBAAAF,EAMApzB,KAAAuzB,aAAAF,EAMArzB,KAAAwzB,UAAA,GAMAxzB,KAAAyzB,YAAA,GAMAzzB,KAAA0zB,gBAAA,IAOAP,GAAanxB,UAAAe,MAAA,WACb/C,KAAAwzB,UAAAnwB,OAAA,EACArD,KAAAyzB,YAAApwB,OAAA,EACEiU,EAAKtX,KAAA0zB,kBAQPP,GAAanxB,UAAA2xB,QAAA,WACb,IAAAvf,EAAApU,KAAAwzB,UACAI,EAAA5zB,KAAAyzB,YACA3kB,EAAAsF,EAAA,GACA,GAAAA,EAAA/Q,QACA+Q,EAAA/Q,OAAA,EACAuwB,EAAAvwB,OAAA,IAEA+Q,EAAA,GAAAA,EAAA3O,MACAmuB,EAAA,GAAAA,EAAAnuB,MACAzF,KAAA6zB,QAAA,IAEA,IAAAC,EAAA9zB,KAAAuzB,aAAAzkB,GAEA,cADA9O,KAAA0zB,gBAAAI,GACAhlB,GASAqkB,GAAanxB,UAAA+xB,QAAA,SAAAjlB,GACXkkB,KAAMhzB,KAAAuzB,aAAAzkB,KAAA9O,KAAA0zB,iBACR,IACA,IAAAM,EAAAh0B,KAAAszB,kBAAAxkB,GACA,OAAAklB,GAAA5Y,KACApb,KAAAwzB,UAAA9tB,KAAAoJ,GACA9O,KAAAyzB,YAAA/tB,KAAAsuB,GACAh0B,KAAA0zB,gBAAA1zB,KAAAuzB,aAAAzkB,KAAA,EACA9O,KAAAi0B,UAAA,EAAAj0B,KAAAwzB,UAAAnwB,OAAA,IACA,IASA8vB,GAAanxB,UAAAkyB,SAAA,WACb,OAAAl0B,KAAAwzB,UAAAnwB,QAUA8vB,GAAanxB,UAAAmyB,mBAAA,SAAArtB,GACb,SAAAA,EAAA,GAUAqsB,GAAanxB,UAAAoyB,oBAAA,SAAAttB,GACb,SAAAA,EAAA,GAUAqsB,GAAanxB,UAAAqyB,gBAAA,SAAAvtB,GACb,OAAAA,EAAA,MAQAqsB,GAAanxB,UAAAsyB,SAAA,WACb,IAAAl0B,EACA,IAAAA,GAAAJ,KAAAwzB,UAAAnwB,QAAA,KAA4CjD,GAAA,EAAQA,IACpDJ,KAAA6zB,QAAAzzB,IAQA+yB,GAAanxB,UAAAuyB,QAAA,WACb,WAAAv0B,KAAAwzB,UAAAnwB,QAQA8vB,GAAanxB,UAAAwyB,YAAA,SAAA7yB,GACb,OAAAA,KAAA3B,KAAA0zB,iBAQAP,GAAanxB,UAAAyyB,SAAA,SAAA3lB,GACb,OAAA9O,KAAAw0B,YAAAx0B,KAAAuzB,aAAAzkB,KAQAqkB,GAAanxB,UAAA6xB,QAAA,SAAA/sB,GACb,IAAAsN,EAAApU,KAAAwzB,UACAI,EAAA5zB,KAAAyzB,YACA9G,EAAAvY,EAAA/Q,OACAyL,EAAAsF,EAAAtN,GACAktB,EAAAJ,EAAA9sB,GACA4tB,EAAA5tB,EAEA,MAAAA,EAAA6lB,GAAA,GACA,IAAAgI,EAAA30B,KAAAm0B,mBAAArtB,GACA8tB,EAAA50B,KAAAo0B,oBAAAttB,GAEA+tB,EAAAD,EAAAjI,GACAiH,EAAAgB,GAAAhB,EAAAe,GACAC,EAAAD,EAEAvgB,EAAAtN,GAAAsN,EAAAygB,GACAjB,EAAA9sB,GAAA8sB,EAAAiB,GACA/tB,EAAA+tB,EAGAzgB,EAAAtN,GAAAgI,EACA8kB,EAAA9sB,GAAAktB,EACAh0B,KAAAi0B,UAAAS,EAAA5tB,IASAqsB,GAAanxB,UAAAiyB,UAAA,SAAAS,EAAA5tB,GACb,IAAAsN,EAAApU,KAAAwzB,UACAI,EAAA5zB,KAAAyzB,YACA3kB,EAAAsF,EAAAtN,GACAktB,EAAAJ,EAAA9sB,GAEA,MAAAA,EAAA4tB,EAAA,CACA,IAAAI,EAAA90B,KAAAq0B,gBAAAvtB,GACA,KAAA8sB,EAAAkB,GAAAd,GAKA,MAJA5f,EAAAtN,GAAAsN,EAAA0gB,GACAlB,EAAA9sB,GAAA8sB,EAAAkB,GACAhuB,EAAAguB,EAKA1gB,EAAAtN,GAAAgI,EACA8kB,EAAA9sB,GAAAktB,GAOAb,GAAanxB,UAAA+yB,aAAA,WACb,IAKAjmB,EAAA1O,EAAA4zB,EALAZ,EAAApzB,KAAAszB,kBACAlf,EAAApU,KAAAwzB,UACAI,EAAA5zB,KAAAyzB,YACA3sB,EAAA,EACAjF,EAAAuS,EAAA/Q,OAEA,IAAAjD,EAAA,EAAaA,EAAAyB,IAAOzB,EACpB0O,EAAAsF,EAAAhU,GACA4zB,EAAAZ,EAAAtkB,GACAklB,GAAA5Y,UACApb,KAAA0zB,gBAAA1zB,KAAAuzB,aAAAzkB,KAEA8kB,EAAA9sB,GAAAktB,EACA5f,EAAAtN,KAAAgI,GAGAsF,EAAA/Q,OAAAyD,EACA8sB,EAAAvwB,OAAAyD,EACA9G,KAAAs0B,YAIe,IAAAU,GAAA,GCnQXC,GAAS,SAAAC,GACb,SAAAC,EAAAC,EAAAC,GAEAH,EAAA30B,KAKAP,KAAA,SAAA8O,GACA,OAAAsmB,EAAA5tB,MAAA,KAAAsH,IAMA,SAAAA,GACA,OAAuDA,EAAA,GAAAwmB,WAOvDt1B,KAAAu1B,oBAAAF,EAMAr1B,KAAAw1B,cAAA,EAMAx1B,KAAAy1B,kBAAA,GA2EA,OAvEAP,IAAAC,EAAAzoB,UAAAwoB,GACAC,EAAAnzB,UAAAlB,OAAAY,OAAAwzB,KAAAlzB,WACAmzB,EAAAnzB,UAAA+I,YAAAoqB,EAKAA,EAAAnzB,UAAA+xB,QAAA,SAAAjlB,GACA,IAAA4mB,EAAAR,EAAAlzB,UAAA+xB,QAAAxzB,KAAAP,KAAA8O,GACA,GAAA4mB,EAAA,CACA,IAAAC,EAAA7mB,EAAA,GACMwE,EAAMqiB,EAAO/a,EAASC,OAAA7a,KAAA41B,iBAAA51B,MAE5B,OAAA01B,GAMAP,EAAAnzB,UAAA6zB,gBAAA,WACA,OAAA71B,KAAAw1B,eAOAL,EAAAnzB,UAAA4zB,iBAAA,SAAAtb,GACA,IAAAqb,EAAsDrb,EAAA,OACtDwb,EAAAH,EAAAI,WACA,GAAAD,IAAkBpD,GAASG,QAAAiD,IAAqBpD,GAASrX,OACzDya,IAAkBpD,GAASI,OAAAgD,IAAoBpD,GAASK,MAAA,CAClD/Z,EAAQ2c,EAAO/a,EAASC,OAAA7a,KAAA41B,iBAAA51B,MAC9B,IAAAg2B,EAAAL,EAAAL,SACAU,KAAAh2B,KAAAy1B,2BACAz1B,KAAAy1B,kBAAAO,KACAh2B,KAAAw1B,eAEAx1B,KAAAu1B,wBAQAJ,EAAAnzB,UAAAi0B,cAAA,SAAAC,EAAAC,GACA,IAEAL,EAAAH,EAAAK,EAFAI,EAAA,EACAC,GAAA,EAEA,MAAAr2B,KAAAw1B,cAAAU,GAAAE,EAAAD,GACAn2B,KAAAk0B,WAAA,EACAyB,EAAoD31B,KAAA2zB,UAAA,GACpDqC,EAAAL,EAAAL,SACAQ,EAAAH,EAAAI,WACAD,IAAoBpD,GAASK,MAC7BsD,GAAA,EACOP,IAAoBpD,GAASC,MAAAqD,KAAAh2B,KAAAy1B,oBACpCz1B,KAAAy1B,kBAAAO,IAAA,IACAh2B,KAAAw1B,gBACAY,EACAT,EAAAtvB,QAGA,IAAA+vB,GAAAC,GAGAr2B,KAAAu1B,uBAIAJ,EA9Ga,CA+GXH,IAGasB,GAAA,GCxHRC,GAAA,GAMAC,GAAA,ICDA,SAAAC,GAAAp1B,EAAAmD,EAAA7B,GACP,OAAAD,KAAA8B,IAAA9B,KAAAC,IAAAtB,EAAAmD,GAAA7B,GAaO,IAAA+zB,GAAA,WAGP,IAAAA,EAWA,OARAA,EAFA,SAAAh0B,KAEAA,KAAAg0B,KAGA,SAAAxS,GACA,IAAAE,EAA8B,KAAA/Z,IAAA6Z,GAC9B,OAAAE,EAAA,EAAAA,GAAA,GAGAsS,EAdO,GAuCA,SAAAC,GAAAzS,EAAAE,EAAAwS,EAAAC,EAAAC,EAAAC,GACP,IAAAzS,EAAAwS,EAAAF,EACApS,EAAAuS,EAAAF,EACA,OAAAvS,GAAA,IAAAE,EAAA,CACA,IAAAljB,IAAA4iB,EAAA0S,GAAAtS,GAAAF,EAAAyS,GAAArS,IAAAF,IAAAE,KACAljB,EAAA,GACAs1B,EAAAE,EACAD,EAAAE,GACKz1B,EAAA,IACLs1B,GAAAtS,EAAAhjB,EACAu1B,GAAArS,EAAAljB,GAGA,OAAS01B,GAAe9S,EAAAE,EAAAwS,EAAAC,GAYjB,SAASG,GAAeJ,EAAAC,EAAAC,EAAAC,GAC/B,IAAAzS,EAAAwS,EAAAF,EACApS,EAAAuS,EAAAF,EACA,OAAAvS,IAAAE,IAWO,SAAAyS,GAAAC,GAGP,IAFA,IAAAr1B,EAAAq1B,EAAA7zB,OAEAjD,EAAA,EAAiBA,EAAAyB,EAAOzB,IAAA,CAIxB,IAFA,IAAA+2B,EAAA/2B,EACAg3B,EAAA10B,KAAA6hB,IAAA2S,EAAA92B,OACAc,EAAAd,EAAA,EAAuBc,EAAAW,EAAOX,IAAA,CAC9B,IAAAm2B,EAAA30B,KAAA6hB,IAAA2S,EAAAh2B,GAAAd,IACAi3B,EAAAD,IACAA,EAAAC,EACAF,EAAAj2B,GAIA,OAAAk2B,EACA,YAIA,IAAAzsB,EAAAusB,EAAAC,GACAD,EAAAC,GAAAD,EAAA92B,GACA82B,EAAA92B,GAAAuK,EAGA,QAAA9C,EAAAzH,EAAA,EAAuByH,EAAAhG,EAAOgG,IAE9B,IADA,IAAAyvB,GAAAJ,EAAArvB,GAAAzH,GAAA82B,EAAA92B,MACAuD,EAAAvD,EAAqBuD,EAAA9B,EAAA,EAAW8B,IAChCvD,GAAAuD,EACAuzB,EAAArvB,GAAAlE,GAAA,EAEAuzB,EAAArvB,GAAAlE,IAAA2zB,EAAAJ,EAAA92B,GAAAuD,GAQA,IADA,IAAAugB,EAAA,IAAArQ,MAAAhS,GACAxB,EAAAwB,EAAA,EAAqBxB,GAAA,EAAQA,IAAA,CAC7B6jB,EAAA7jB,GAAA62B,EAAA72B,GAAAwB,GAAAq1B,EAAA72B,MACA,QAAAG,EAAAH,EAAA,EAAuBG,GAAA,EAAQA,IAC/B02B,EAAA12B,GAAAqB,IAAAq1B,EAAA12B,GAAAH,GAAA6jB,EAAA7jB,GAGA,OAAA6jB,EAqBO,SAAAqT,GAAAC,GACP,OAAAA,EAAA90B,KAAA+0B,GAAA,IAUO,SAAAC,GAAApzB,EAAAC,GACP,IAAArD,EAAAoD,EAAAC,EACA,OAAArD,EAAAqD,EAAA,EAAArD,EAAAqD,EAAArD,EAWO,SAAAy2B,GAAArzB,EAAAC,EAAA2f,GACP,OAAA5f,EAAA4f,GAAA3f,EAAAD,GCrLO,SAAAszB,GAAAC,GACP,gBAKAC,GACA,OAAAA,EACA,CACUrB,GAAKqB,EAAA,GAAAD,EAAA,GAAAA,EAAA,IACLpB,GAAKqB,EAAA,GAAAD,EAAA,GAAAA,EAAA,UAGf,GAWO,SAAAE,GAAAD,GACP,OAAAA,ECxBO,SAAAE,GAAAC,GACP,gBAOAC,EAAAC,EAAAnO,GACA,QAAA5c,IAAA8qB,EAAA,CACA,IAAA9tB,EAAgB2f,GAAiBkO,EAAAC,EAAAlO,GACjC5f,EAAYqsB,GAAKrsB,EAAA+tB,EAAA,EAAAF,EAAA50B,OAAA,GACjB,IAAAyD,EAAApE,KAAA8H,MAAAJ,GACA,GAAAA,GAAAtD,KAAAmxB,EAAA50B,OAAA,GACA,IAAA+0B,EAAAH,EAAAnxB,GAAAmxB,EAAAnxB,EAAA,GACA,OAAAmxB,EAAAnxB,GAAApE,KAAAkF,IAAAwwB,EAAAhuB,EAAAtD,GAEA,OAAAmxB,EAAAnxB,KAgBO,SAAAuxB,GAAAD,EAAAE,EAAAC,GACP,gBAOAL,EAAAC,EAAAnO,GACA,QAAA5c,IAAA8qB,EAAA,CACA,IAAAM,GAAAxO,EAAA,KACAyO,EAAA/1B,KAAA8H,MACA9H,KAAAiF,IAAA2wB,EAAAJ,GAAAx1B,KAAAiF,IAAAywB,GAAAI,GACAE,EAAAh2B,KAAAC,IAAA81B,EAAAN,EAAA,GAIA,YAHA/qB,IAAAmrB,IACAG,EAAAh2B,KAAA8B,IAAAk0B,EAAAH,IAEAD,EAAA51B,KAAAkF,IAAAwwB,EAAAM,KClDO,SAAAC,GAAAC,EAAAT,GACP,YAAA/qB,IAAAwrB,EACA,OAEA,EAUO,SAASC,GAAID,EAAAT,GACpB,YAAA/qB,IAAAwrB,EACAA,EAAAT,OAEA,EASO,SAAAW,GAAAj3B,GACP,IAAAk3B,EAAA,EAAAr2B,KAAA+0B,GAAA51B,EACA,gBAMA+2B,EAAAT,GACA,YAAA/qB,IAAAwrB,GACAA,EAAAl2B,KAAA8H,OAAAouB,EAAAT,GAAAY,EAAA,IAAAA,EACAH,QAEA,GAUO,SAAAI,GAAAC,GACP,IAAAC,EAAAD,GAAmC1B,GAAS,GAC5C,gBAMAqB,EAAAT,GACA,YAAA/qB,IAAAwrB,EACAl2B,KAAA6hB,IAAAqU,EAAAT,IAAAe,EACA,EAEAN,EAAAT,OAGA,GC3Ee,IAAAgB,GAAA,CACfC,UAAA,EACAC,YAAA,GCFeC,GAAA,CACfC,OAAA,SACAC,WAAA,aACAC,SAAA,YC+BO,SAASC,GAAG3Z,EAAAoY,GAGnB,OAFApY,EAAA,IAAAoY,EAAA,GACApY,EAAA,IAAAoY,EAAA,GACApY,EAmMO,SAAS4Z,GAAMC,EAAAC,GAEtB,IADA,IAAAvP,GAAA,EACAlqB,EAAAw5B,EAAAv2B,OAAA,EAAsCjD,GAAA,IAAQA,EAC9C,GAAAw5B,EAAAx5B,IAAAy5B,EAAAz5B,GAAA,CACAkqB,GAAA,EACA,MAGA,OAAAA,EAsBO,SAASwP,GAAM/Z,EAAAga,GACtB,IAAAC,EAAAt3B,KAAAu3B,IAAAF,GACAG,EAAAx3B,KAAAy3B,IAAAJ,GACA7V,EAAAnE,EAAA,GAAAia,EAAAja,EAAA,GAAAma,EACA9V,EAAArE,EAAA,GAAAia,EAAAja,EAAA,GAAAma,EAGA,OAFAna,EAAA,GAAAmE,EACAnE,EAAA,GAAAqE,EACArE,EAqBO,SAASqa,GAAKra,EAAAsa,GAGrB,OAFAta,EAAA,IAAAsa,EACAta,EAAA,IAAAsa,EACAta,ECjSO,SAAAua,GAAAh5B,GACP,OAAAoB,KAAAkF,IAAAtG,EAAA,GAUO,SAAAi5B,GAAAj5B,GACP,SAAAg5B,GAAA,EAAAh5B,GAUO,SAAAk5B,GAAAl5B,GACP,SAAAA,IAAA,EAAAA,MAUO,SAAAm5B,GAAAn5B,GACP,OAAAA,ECrCe,IAAAo5B,GAAA,CACfC,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,aCJeC,GAAA,CACfC,QAAA,EACAC,aAAA,EACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,KAAA,ICOO,SAAAC,GAAAC,GAEP,IADA,IAAA1D,EAAA2D,KACAp7B,EAAA,EAAAgX,EAAAmkB,EAAAl4B,OAA0CjD,EAAAgX,IAAQhX,EAClDq7B,GAAA5D,EAAA0D,EAAAn7B,IAEA,OAAAy3B,EA4BO,SAAA6D,GAAA7D,EAAAx2B,EAAAs6B,GACP,OAAAA,GACAA,EAAA,GAAA9D,EAAA,GAAAx2B,EACAs6B,EAAA,GAAA9D,EAAA,GAAAx2B,EACAs6B,EAAA,GAAA9D,EAAA,GAAAx2B,EACAs6B,EAAA,GAAA9D,EAAA,GAAAx2B,EACAs6B,GAEA,CACA9D,EAAA,GAAAx2B,EACAw2B,EAAA,GAAAx2B,EACAw2B,EAAA,GAAAx2B,EACAw2B,EAAA,GAAAx2B,GAaO,SAASu6B,GAAK/D,EAAA8D,GACrB,OAAAA,GACAA,EAAA,GAAA9D,EAAA,GACA8D,EAAA,GAAA9D,EAAA,GACA8D,EAAA,GAAA9D,EAAA,GACA8D,EAAA,GAAA9D,EAAA,GACA8D,GAEA9D,EAAArxB,QAWO,SAAAq1B,GAAAhE,EAAA3T,EAAAE,GACP,IAAAE,EAAAE,EAeA,OAbAF,EADAJ,EAAA2T,EAAA,GACAA,EAAA,GAAA3T,EACG2T,EAAA,GAAA3T,EACHA,EAAA2T,EAAA,GAEA,EAGArT,EADAJ,EAAAyT,EAAA,GACAA,EAAA,GAAAzT,EACGyT,EAAA,GAAAzT,EACHA,EAAAyT,EAAA,GAEA,EAEAvT,IAAAE,IAYO,SAAAsX,GAAAjE,EAAA9X,GACP,OAASgc,GAAUlE,EAAA9X,EAAA,GAAAA,EAAA,IAgBZ,SAAAic,GAAAC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,GAaO,SAASF,GAAUlE,EAAA3T,EAAAE,GAC1B,OAAAyT,EAAA,IAAA3T,MAAA2T,EAAA,IAAAA,EAAA,IAAAzT,MAAAyT,EAAA,GAWO,SAAAsE,GAAAtE,EAAA9X,GACP,IAAAjc,EAAA+zB,EAAA,GACA7zB,EAAA6zB,EAAA,GACA5zB,EAAA4zB,EAAA,GACA3zB,EAAA2zB,EAAA,GACA3T,EAAAnE,EAAA,GACAqE,EAAArE,EAAA,GACAqc,EAAqBrB,GAAYC,QAcjC,OAbA9W,EAAApgB,EACAs4B,GAAkCrB,GAAYM,KAC3CnX,EAAAjgB,IACHm4B,GAAkCrB,GAAYI,OAE9C/W,EAAApgB,EACAo4B,GAAkCrB,GAAYK,MAC3ChX,EAAAlgB,IACHk4B,GAAkCrB,GAAYG,OAE9CkB,IAAuBrB,GAAYC,UACnCoB,EAAmBrB,GAAYE,cAE/BmB,EASO,SAAAZ,KACP,OAAAz3B,mBAaO,SAAAs4B,GAAAv4B,EAAAE,EAAAC,EAAAC,EAAAy3B,GACP,OAAAA,GACAA,EAAA,GAAA73B,EACA63B,EAAA,GAAA33B,EACA23B,EAAA,GAAA13B,EACA03B,EAAA,GAAAz3B,EACAy3B,GAEA,CAAA73B,EAAAE,EAAAC,EAAAC,GAUO,SAAAo4B,GAAAX,GACP,OAAAU,GACAt4B,kBAAA43B,GASO,SAAAY,GAAAxc,EAAA4b,GACP,IAAAzX,EAAAnE,EAAA,GACAqE,EAAArE,EAAA,GACA,OAAAsc,GAAAnY,EAAAE,EAAAF,EAAAE,EAAAuX,GASO,SAAAa,GAAAjB,EAAAI,GACP,IAAA9D,EAAAyE,GAAAX,GACA,OAAAc,GAAA5E,EAAA0D,GAYO,SAAAmB,GAAAC,EAAAnE,EAAArO,EAAAyS,EAAAjB,GACP,IAAA9D,EAAAyE,GAAAX,GACA,OAAAkB,GAAAhF,EAAA8E,EAAAnE,EAAArO,EAAAyS,GAqBO,SAASE,GAAMb,EAAAC,GACtB,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAWO,SAASa,GAAMd,EAAAC,GAatB,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,EAQO,SAAAR,GAAA5D,EAAA9X,GACPA,EAAA,GAAA8X,EAAA,KACAA,EAAA,GAAA9X,EAAA,IAEAA,EAAA,GAAA8X,EAAA,KACAA,EAAA,GAAA9X,EAAA,IAEAA,EAAA,GAAA8X,EAAA,KACAA,EAAA,GAAA9X,EAAA,IAEAA,EAAA,GAAA8X,EAAA,KACAA,EAAA,GAAA9X,EAAA,IAUO,SAAA0c,GAAA5E,EAAA0D,GACP,QAAAn7B,EAAA,EAAAgX,EAAAmkB,EAAAl4B,OAA0CjD,EAAAgX,IAAQhX,EAClDq7B,GAAA5D,EAAA0D,EAAAn7B,IAEA,OAAAy3B,EAYO,SAAAgF,GAAAhF,EAAA8E,EAAAnE,EAAArO,EAAAyS,GACP,KAAQpE,EAAArO,EAAcqO,GAAAoE,EACtBI,GAAAnF,EAAA8E,EAAAnE,GAAAmE,EAAAnE,EAAA,IAEA,OAAAX,EAsBO,SAAAmF,GAAAnF,EAAA3T,EAAAE,GACPyT,EAAA,GAAAn1B,KAAA8B,IAAAqzB,EAAA,GAAA3T,GACA2T,EAAA,GAAAn1B,KAAA8B,IAAAqzB,EAAA,GAAAzT,GACAyT,EAAA,GAAAn1B,KAAAC,IAAAk1B,EAAA,GAAA3T,GACA2T,EAAA,GAAAn1B,KAAAC,IAAAk1B,EAAA,GAAAzT,GAcO,SAAA6Y,GAAApF,EAAAllB,EAAAwF,GACP,IAAA+kB,EAEA,OADAA,EAAAvqB,EAAApS,KAAA4X,EAAAglB,GAAAtF,IACAqF,IAGAA,EAAAvqB,EAAApS,KAAA4X,EAAAilB,GAAAvF,IACAqF,IAGAA,EAAAvqB,EAAApS,KAAA4X,EAAAklB,GAAAxF,IACAqF,IAGAA,EAAAvqB,EAAApS,KAAA4X,EAAAmlB,GAAAzF,IACAqF,IAGA,KAUO,SAASK,GAAO1F,GACvB,IAAAvvB,EAAA,EAIA,OAHOk1B,GAAO3F,KACdvvB,EAAAm1B,GAAA5F,GAAA6F,GAAA7F,IAEAvvB,EAUO,SAAA60B,GAAAtF,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAuF,GAAAvF,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAS8F,GAAS9F,GACzB,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAUO,SAAA+F,GAAA/F,EAAAgG,GACP,IAAA9d,EAYA,OAXA8d,IAAiBnD,GAAMC,YACvB5a,EAAAod,GAAAtF,GACGgG,IAAqBnD,GAAME,aAC9B7a,EAAAqd,GAAAvF,GACGgG,IAAqBnD,GAAMG,SAC9B9a,EAAAud,GAAAzF,GACGgG,IAAqBnD,GAAMI,UAC9B/a,EAAAsd,GAAAxF,GAEI7E,IAAM,MAEVjT,EA0BO,SAAA+d,GAAAhG,EAAAI,EAAAU,EAAAmF,EAAApC,GACP,IAAArX,EAAA4T,EAAA6F,EAAA,KACAvZ,EAAA0T,EAAA6F,EAAA,KACAC,EAAAt7B,KAAAu3B,IAAArB,GACAqF,EAAAv7B,KAAAy3B,IAAAvB,GACAsF,EAAA5Z,EAAA0Z,EACAG,EAAA7Z,EAAA2Z,EACAG,EAAA5Z,EAAAwZ,EACAK,EAAA7Z,EAAAyZ,EACA/Z,EAAA4T,EAAA,GACA1T,EAAA0T,EAAA,GACAwG,EAAApa,EAAAga,EAAAG,EACAzH,EAAA1S,EAAAga,EAAAG,EACAvH,EAAA5S,EAAAga,EAAAG,EACAE,EAAAra,EAAAga,EAAAG,EACAG,EAAApa,EAAA+Z,EAAAC,EACAvH,EAAAzS,EAAA+Z,EAAAC,EACArH,EAAA3S,EAAA+Z,EAAAC,EACAK,EAAAra,EAAA+Z,EAAAC,EACA,OAAA/B,GACA35B,KAAA8B,IAAA85B,EAAA1H,EAAAE,EAAAyH,GAAA77B,KAAA8B,IAAAg6B,EAAA3H,EAAAE,EAAA0H,GACA/7B,KAAAC,IAAA27B,EAAA1H,EAAAE,EAAAyH,GAAA77B,KAAAC,IAAA67B,EAAA3H,EAAAE,EAAA0H,GACA9C,GAUO,SAAA+B,GAAA7F,GACP,OAAAA,EAAA,GAAAA,EAAA,GAuBO,SAAA6G,GAAAzC,EAAAC,EAAAP,GACP,IAAAgD,EAAAhD,GAAAH,KAyBA,OAxBMoD,GAAU3C,EAAAC,IAChBD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,IAGAI,GAAAqC,GAEAA,EA8BO,SAAArB,GAAAzF,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAwF,GAAAxF,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAA4F,GAAA5F,GACP,OAAAA,EAAA,GAAAA,EAAA,GAWO,SAAS+G,GAAU3C,EAAAC,GAC1B,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GAUO,SAASsB,GAAO3F,GACvB,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GASO,SAAAgH,GAAAhH,EAAA8D,GACP,OAAAA,GACAA,EAAA,GAAA9D,EAAA,GACA8D,EAAA,GAAA9D,EAAA,GACA8D,EAAA,GAAA9D,EAAA,GACA8D,EAAA,GAAA9D,EAAA,GACA8D,GAEA9D,EASO,SAAAiH,GAAAjH,EAAAx2B,GACP,IAAA09B,GAAAlH,EAAA,GAAAA,EAAA,OAAAx2B,EAAA,GACA29B,GAAAnH,EAAA,GAAAA,EAAA,OAAAx2B,EAAA,GACAw2B,EAAA,IAAAkH,EACAlH,EAAA,IAAAkH,EACAlH,EAAA,IAAAmH,EACAnH,EAAA,IAAAmH,EAYO,SAAAC,GAAApH,EAAAqH,EAAA/U,GACP,IAAAnlB,GAAA,EACAm6B,EAAAhD,GAAAtE,EAAAqH,GACAE,EAAAjD,GAAAtE,EAAA1N,GACA,GAAAgV,IAAmBpE,GAAYE,cAC/BmE,IAAiBrE,GAAYE,aAC7Bj2B,GAAA,MACG,CACH,IASAkf,EAAAE,EATAtgB,EAAA+zB,EAAA,GACA7zB,EAAA6zB,EAAA,GACA5zB,EAAA4zB,EAAA,GACA3zB,EAAA2zB,EAAA,GACAwH,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAApV,EAAA,GACAqV,EAAArV,EAAA,GACAsV,GAAAD,EAAAF,IAAAC,EAAAF,GAEAD,EAAoBrE,GAAYG,SAChCiE,EAAqBpE,GAAYG,SAEjChX,EAAAqb,GAAAC,EAAAt7B,GAAAu7B,EACAz6B,EAAAkf,GAAApgB,GAAAogB,GAAAjgB,GAEAe,KAAAo6B,EAAmCrE,GAAYI,QAC/CgE,EAAqBpE,GAAYI,QAEjC/W,EAAAob,GAAAD,EAAAt7B,GAAAw7B,EACAz6B,EAAAof,GAAApgB,GAAAogB,GAAAlgB,GAEAc,KAAAo6B,EAAmCrE,GAAYK,QAC/C+D,EAAqBpE,GAAYK,QAEjClX,EAAAqb,GAAAC,EAAAx7B,GAAAy7B,EACAz6B,EAAAkf,GAAApgB,GAAAogB,GAAAjgB,GAEAe,KAAAo6B,EAAmCrE,GAAYM,OAC/C8D,EAAqBpE,GAAYM,OAEjCjX,EAAAob,GAAAD,EAAAz7B,GAAA27B,EACAz6B,EAAAof,GAAApgB,GAAAogB,GAAAlgB,GAIA,OAAAc,ECzvBe,IAAA06B,GAAA,CACfC,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,UCTeC,GAAA,CACfC,GAAA,KACAC,IAAA,MACAC,IAAA,MACAC,KAAA,QCAO,SAAAC,GAAA9D,EAAAnE,EAAArO,EAAAyS,EAAA8D,EAAAC,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACAvgC,EAAA,EACAyH,EAAA2wB,EAAsB3wB,EAAAsiB,EAAStiB,GAAA+0B,EAAA,CAC/B,IAAA1Y,EAAAyY,EAAA90B,GACAuc,EAAAuY,EAAA90B,EAAA,GACA+4B,EAAAxgC,KAAAsgC,EAAA,GAAAxc,EAAAwc,EAAA,GAAAtc,EAAAsc,EAAA,GACAE,EAAAxgC,KAAAsgC,EAAA,GAAAxc,EAAAwc,EAAA,GAAAtc,EAAAsc,EAAA,GAKA,OAHAC,GAAAC,EAAAv9B,QAAAjD,IACAwgC,EAAAv9B,OAAAjD,GAEAwgC,EAcO,SAASC,GAAMlE,EAAAnE,EAAArO,EAAAyS,EAAA7C,EAAA+G,EAAAH,GAOtB,IANA,IAAAC,EAAAD,GAAA,GACA1G,EAAAv3B,KAAAu3B,IAAAF,GACAI,EAAAz3B,KAAAy3B,IAAAJ,GACAgH,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACA1gC,EAAA,EACAyH,EAAA2wB,EAAsB3wB,EAAAsiB,EAAStiB,GAAA+0B,EAAA,CAC/B,IAAAmC,EAAApC,EAAA90B,GAAAk5B,EACA/B,EAAArC,EAAA90B,EAAA,GAAAm5B,EACAJ,EAAAxgC,KAAA2gC,EAAAhC,EAAA9E,EAAA+E,EAAA7E,EACAyG,EAAAxgC,KAAA4gC,EAAAjC,EAAA5E,EAAA6E,EAAA/E,EACA,QAAAt2B,EAAAkE,EAAA,EAAuBlE,EAAAkE,EAAA+0B,IAAgBj5B,EACvCi9B,EAAAxgC,KAAAu8B,EAAAh5B,GAMA,OAHAg9B,GAAAC,EAAAv9B,QAAAjD,IACAwgC,EAAAv9B,OAAAjD,GAEAwgC,EAgBO,SAASK,GAAKtE,EAAAnE,EAAArO,EAAAyS,EAAAsE,EAAAC,EAAAL,EAAAH,GAKrB,IAJA,IAAAC,EAAAD,GAAA,GACAI,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACA1gC,EAAA,EACAyH,EAAA2wB,EAAsB3wB,EAAAsiB,EAAStiB,GAAA+0B,EAAA,CAC/B,IAAAmC,EAAApC,EAAA90B,GAAAk5B,EACA/B,EAAArC,EAAA90B,EAAA,GAAAm5B,EACAJ,EAAAxgC,KAAA2gC,EAAAG,EAAAnC,EACA6B,EAAAxgC,KAAA4gC,EAAAG,EAAAnC,EACA,QAAAr7B,EAAAkE,EAAA,EAAuBlE,EAAAkE,EAAA+0B,IAAgBj5B,EACvCi9B,EAAAxgC,KAAAu8B,EAAAh5B,GAMA,OAHAg9B,GAAAC,EAAAv9B,QAAAjD,IACAwgC,EAAAv9B,OAAAjD,GAEAwgC,EAcO,SAASQ,GAASzE,EAAAnE,EAAArO,EAAAyS,EAAAmC,EAAAC,EAAA2B,GAGzB,IAFA,IAAAC,EAAAD,GAAA,GACAvgC,EAAA,EACAyH,EAAA2wB,EAAsB3wB,EAAAsiB,EAAStiB,GAAA+0B,EAAA,CAC/BgE,EAAAxgC,KAAAu8B,EAAA90B,GAAAk3B,EACA6B,EAAAxgC,KAAAu8B,EAAA90B,EAAA,GAAAm3B,EACA,QAAAr7B,EAAAkE,EAAA,EAAuBlE,EAAAkE,EAAA+0B,IAAgBj5B,EACvCi9B,EAAAxgC,KAAAu8B,EAAAh5B,GAMA,OAHAg9B,GAAAC,EAAAv9B,QAAAjD,IACAwgC,EAAAv9B,OAAAjD,GAEAwgC;;;;;;GCxFO,IAAAS,GAAA,UAYA,SAAAC,GAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAD,GAAAJ,GACAM,EAAapK,GAASgK,EAAA,IACtBK,EAAarK,GAASiK,EAAA,IACtBK,GAAAD,EAAAD,GAAA,EACAG,EAAoBvK,GAASiK,EAAA,GAAAD,EAAA,MAC7Bj9B,EAAA5B,KAAAy3B,IAAA0H,GAAAn/B,KAAAy3B,IAAA0H,GACAn/B,KAAAy3B,IAAA2H,GAAAp/B,KAAAy3B,IAAA2H,GACAp/B,KAAAu3B,IAAA0H,GAAAj/B,KAAAu3B,IAAA2H,GACA,SAAAF,EAAAh/B,KAAAq/B,MAAAr/B,KAAAwF,KAAA5D,GAAA5B,KAAAwF,KAAA,EAAA5D,IC3CA,IAAA09B,GAAA,CACAC,QAAA,UACAC,KAAA,KACAC,OAAA,IACAC,OAAA,SACAC,YAAA,cACAC,OAAA,SAUOC,GAAA,GAEPA,GAAAP,GAAAC,SAAA,EAAAv/B,KAAA+0B,GAAA,YACA8K,GAAAP,GAAAE,MAAA,MACAK,GAAAP,GAAAG,QAAA,EACAI,GAAAP,GAAAM,QAAA,UAEe,IAAAE,GAAA,GCqBXC,GAAU,SAAA31B,GAKd9M,KAAA0iC,MAAA51B,EAAAwJ,KASAtW,KAAA2iC,OAAwD71B,EAAA,MASxD9M,KAAA4iC,aAAAx1B,IAAAN,EAAA+qB,OAAA/qB,EAAA+qB,OAAA,KASA73B,KAAA6iC,kBAAAz1B,IAAAN,EAAAg2B,YACAh2B,EAAAg2B,YAAA,KAMA9iC,KAAA+iC,sBAAA31B,IAAAN,EAAAk2B,gBACAl2B,EAAAk2B,gBAAA,MAMAhjC,KAAAijC,aAAA71B,IAAAN,EAAA7C,QAAA6C,EAAA7C,OAMAjK,KAAAkjC,aAAAljC,KAAAijC,UAAAjjC,KAAA4iC,SAMA5iC,KAAAmjC,wBAAAr2B,EAAAs2B,mBAMApjC,KAAAqjC,iBAAA,KAMArjC,KAAAsjC,eAAAx2B,EAAAy2B,eAMAd,GAAUzgC,UAAAwhC,SAAA,WACV,OAAAxjC,KAAAkjC,WAQAT,GAAUzgC,UAAAyhC,QAAA,WACV,OAAAzjC,KAAA0iC,OAQAD,GAAUzgC,UAAA0hC,UAAA,WACV,OAAA1jC,KAAA4iC,SAQAH,GAAUzgC,UAAA2hC,SAAA,WACV,OAAA3jC,KAAA2iC,QAUAF,GAAUzgC,UAAA4hC,iBAAA,WACV,OAAA5jC,KAAAsjC,gBAAgCf,GAAeviC,KAAA2iC,SAQ/CF,GAAUzgC,UAAA6hC,eAAA,WACV,OAAA7jC,KAAA6iC,cAcAJ,GAAUzgC,UAAA8hC,mBAAA,WACV,OAAA9jC,KAAA+iC,kBAQAN,GAAUzgC,UAAA+hC,SAAA,WACV,OAAA/jC,KAAAijC,SAQAR,GAAUzgC,UAAAgiC,UAAA,SAAA/5B,GACVjK,KAAAijC,QAAAh5B,EACAjK,KAAAkjC,aAAAj5B,IAAAjK,KAAA4iC,UAMAH,GAAUzgC,UAAAiiC,mBAAA,WACV,OAAAjkC,KAAAqjC,kBAMAZ,GAAUzgC,UAAAkiC,mBAAA,SAAAC,GACVnkC,KAAAqjC,iBAAAc,GAQA1B,GAAUzgC,UAAAoiC,UAAA,SAAAvM,GACV73B,KAAA4iC,QAAA/K,EACA73B,KAAAkjC,aAAAljC,KAAAijC,UAAApL,IASA4K,GAAUzgC,UAAAqiC,eAAA,SAAAvB,GACV9iC,KAAA6iC,aAAAC,GASAL,GAAUzgC,UAAAsiC,sBAAA,SAAAC,GACVvkC,KAAAmjC,wBAAAoB,GAQA9B,GAAUzgC,UAAAwiC,uBAAA,WACV,OAAAxkC,KAAAmjC,yBAGe,IAAAsB,GAAA,GC7PRC,GAAA,QAOAC,GAAAjiC,KAAA+0B,GAAAiN,GAOAE,GAAA,EACPD,OACAA,OAQOE,GAAA,kBAOHC,GAAkB,SAAAC,GACtB,SAAAC,EAAA1uB,GACAyuB,EAAAxkC,KAAAP,KAAA,CACAsW,OACA2uB,MAAazC,GAAKL,OAClBtK,OAAA+M,GACA36B,QAAA,EACA64B,YAAA+B,GACAzB,mBAAA,SAAAlL,EAAAgN,GACA,OAAAhN,EAA4BxB,GAAIwO,EAAA,GAAAR,OAUhC,OAJAK,IAAAC,EAAAt4B,UAAAq4B,GACAC,EAAAhjC,UAAAlB,OAAAY,OAAAqjC,KAAA/iC,WACAgjC,EAAAhjC,UAAA+I,YAAAi6B,EAEAA,EAnBsB,CAoBpBP,IASKU,GAAA,CACP,IAAML,GAAkB,aACxB,IAAMA,GAAkB,eACxB,IAAMA,GAAkB,eACxB,IAAMA,GAAkB,eACxB,IAAMA,GAAkB,oCACxB,IAAMA,GAAkB,8BACxB,IAAMA,GAAkB,iDAYjB,SAAAM,GAAAC,EAAAC,EAAAC,GACP,IAAAliC,EAAAgiC,EAAAhiC,OACAmiC,EAAAD,EAAA,EAAAA,EAAA,EACApuB,EAAAmuB,OACAl4B,IAAA+J,IAGAA,EAFAquB,EAAA,EAEAH,EAAA7+B,QAEA,IAAAqN,MAAAxQ,IAIA,IADA,IAAAoiC,EAAAd,GACAvkC,EAAA,EAAiBA,EAAAiD,EAAYjD,GAAAolC,EAAA,CAC7BruB,EAAA/W,GAAAqlC,EAAAJ,EAAAjlC,GAAA,IACA,IAAAgkB,EAAAsgB,GACAhiC,KAAAiF,IAAAjF,KAAAgjC,IAAAhjC,KAAA+0B,IAAA4N,EAAAjlC,EAAA,aACAgkB,EAAAqhB,EACArhB,EAAAqhB,EACKrhB,GAAAqhB,IACLrhB,GAAAqhB,GAEAtuB,EAAA/W,EAAA,GAAAgkB,EAEA,OAAAjN,EAYO,SAASwuB,GAAUN,EAAAC,EAAAC,GAC1B,IAAAliC,EAAAgiC,EAAAhiC,OACAmiC,EAAAD,EAAA,EAAAA,EAAA,EACApuB,EAAAmuB,OACAl4B,IAAA+J,IAGAA,EAFAquB,EAAA,EAEAH,EAAA7+B,QAEA,IAAAqN,MAAAxQ,IAGA,QAAAjD,EAAA,EAAiBA,EAAAiD,EAAYjD,GAAAolC,EAC7BruB,EAAA/W,GAAA,IAAAilC,EAAAjlC,GAAAukC,GACAxtB,EAAA/W,EAAA,OAAAsC,KAAAkjC,KACAljC,KAAA2H,IAAAg7B,EAAAjlC,EAAA,GAAAskC,KAAAhiC,KAAA+0B,GAAA,GAEA,OAAAtgB,ECrIO,IAAI0uB,GAAM,QASNC,GAAM,kBAONC,GAAerjC,KAAA+0B,GAAaoO,GAAM,IAWzCG,GAAkB,SAAAjB,GACtB,SAAAkB,EAAA3vB,EAAA4vB,GACAnB,EAAAxkC,KAAAP,KAAA,CACAsW,OACA2uB,MAAazC,GAAKP,QAClBpK,OAAciO,GACd9C,gBAAAkD,EACAj8B,QAAA,EACAs5B,cAAqBwC,GACrBjD,YAAmBgD,KASnB,OAJAf,IAAAkB,EAAAv5B,UAAAq4B,GACAkB,EAAAjkC,UAAAlB,OAAAY,OAAAqjC,KAAA/iC,WACAikC,EAAAjkC,UAAA+I,YAAAk7B,EAEAA,EAlBsB,CAmBpBxB,IASS0B,GAAW,CACtB,IAAMH,GAAkB,UACxB,IAAMA,GAAkB,mBACxB,IAAMA,GAAkB,oCACxB,IAAMA,GAAkB,uCACxB,IAAMA,GAAkB,iCACxB,IAAMA,GAAkB,4BACxB,IAAMA,GAAkB,sDACxB,IAAMA,GAAkB,sCCpEpBI,GAAK,GAgBF,SAASC,GAAG/vB,GACnB,OAAS8vB,GAAK9vB,IAAA,KASP,SAASgwB,GAAGhwB,EAAAiwB,GACjBH,GAAK9vB,GAAAiwB,ECzBP,IAAAC,GAAA,GAmBO,SAASC,GAAGpvB,EAAAqvB,EAAAC,GACnB,IAAAC,EAAAvvB,EAAAosB,UACAoD,EAAAH,EAAAjD,UACAmD,KAAAJ,KACAA,GAAAI,GAAA,IAEAJ,GAAAI,GAAAC,GAAAF,EA+BO,SAASG,GAAGF,EAAAC,GACnB,IAAAnG,EAIA,OAHAkG,KAAAJ,IAAAK,KAAAL,GAAAI,KACAlG,EAAA8F,GAAAI,GAAAC,IAEAnG,ECyBO,SAAAqG,GAAA1B,EAAAC,EAAAC,GACP,IAAApuB,EACA,QAAA/J,IAAAk4B,EAAA,CACA,QAAAllC,EAAA,EAAAgX,EAAAiuB,EAAAhiC,OAAsCjD,EAAAgX,IAAQhX,EAC9CklC,EAAAllC,GAAAilC,EAAAjlC,GAEA+W,EAAAmuB,OAEAnuB,EAAAkuB,EAAA7+B,QAEA,OAAA2Q,EAUO,SAAA6vB,GAAA3B,EAAAC,EAAAC,GACP,QAAAn4B,IAAAk4B,GAAAD,IAAAC,EAAA,CACA,QAAAllC,EAAA,EAAAgX,EAAAiuB,EAAAhiC,OAAsCjD,EAAAgX,IAAQhX,EAC9CklC,EAAAllC,GAAAilC,EAAAjlC,GAEAilC,EAAAC,EAEA,OAAAD,EAWO,SAAA4B,GAAAV,GACLD,GAAeC,EAAA9C,UAAA8C,GACfE,GAAgBF,IAAAQ,IAOX,SAAAG,GAAAC,GACPA,EAAAv4B,QAAAq4B,IAaO,SAASG,GAAGC,GACnB,wBAAAA,EACIhB,GAAkC,GACX,QAwBpB,SAAAjD,GAAAmD,EAAArO,EAAAgN,EAAAoC,GAEP,IAAAC,EADAhB,EAAea,GAAGb,GAElB,IAAA3lC,EAAA2lC,EAAA/B,yBACA,GAAA5jC,EACA2mC,EAAA3mC,EAAAs3B,EAAAgN,OACG,CACH,IAAAD,EAAAsB,EAAA5C,WACA,GAAAsB,GAAiBzC,GAAKP,UAAAqF,MAAuC9E,GAAKP,QAClEsF,EAAArP,MACK,CAIL,IAAAsP,EAAAC,GAAAlB,EAA+Da,GAAG,cAClEM,EAAA,CACAxC,EAAA,GAAAhN,EAAA,EAAAgN,EAAA,GACAA,EAAA,GAAAhN,EAAA,EAAAgN,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAhN,EAAA,EACAgN,EAAA,GAAAA,EAAA,GAAAhN,EAAA,GAEAwP,EAAAF,EAAAE,IAAA,GACA,IAAA9e,EAAkB0Y,GAAWoG,EAAAlhC,MAAA,KAAAkhC,EAAAlhC,MAAA,MAC7BvB,EAAmBq8B,GAAWoG,EAAAlhC,MAAA,KAAAkhC,EAAAlhC,MAAA,MAC9B+gC,GAAA3e,EAAA3jB,GAAA,EACA,IAAAs+B,EAAA+D,EACQ/E,GAAe+E,GACvBf,EAAA3C,wBACAx2B,IAAAm2B,IACAgE,GAAAhE,IAIA,OAAAgE,EAWO,SAAAI,GAAAR,GACPD,GAAAC,GACAA,EAAAv4B,QAAA,SAAAyI,GACA8vB,EAAAv4B,QAAA,SAAA83B,GACArvB,IAAAqvB,GACQD,GAAgBpvB,EAAAqvB,EAAAK,QAoBjB,SAAAa,GAAAC,EAAAC,EAAAC,EAAAC,GACPH,EAAAj5B,QAAA,SAAAq5B,GACAH,EAAAl5B,QAAA,SAAAs5B,GACMzB,GAAgBwB,EAAAC,EAAAH,GAChBtB,GAAgByB,EAAAD,EAAAD,OAoBf,SAAAG,GAAA5B,EAAA6B,GACP,OAAA7B,EAEG,kBAAAA,EACQa,GAAGb,GAEd,EAJWa,GAAGgB,GAmHP,SAAAC,GAAAJ,EAAAC,GACP,GAAAD,IAAAC,EACA,SAEA,IAAAI,EAAAL,EAAAtE,aAAAuE,EAAAvE,WACA,GAAAsE,EAAAxE,YAAAyE,EAAAzE,UACA,OAAA6E,EAEA,IAAAC,EAAAd,GAAAQ,EAAAC,GACA,OAAAK,IAAAxB,IAAAuB,EAcO,SAAAb,GAAAe,EAAAC,GACP,IAAA7B,EAAA4B,EAAA/E,UACAoD,EAAA4B,EAAAhF,UACA8E,EAAsBzB,GAAgBF,EAAAC,GAItC,OAHA0B,IACAA,EAAAvB,IAEAuB,EAcO,SAASG,GAAYrxB,EAAAqvB,GAC5B,IAAA8B,EAAyBpB,GAAG/vB,GAC5BoxB,EAA8BrB,GAAGV,GACjC,OAAAe,GAAAe,EAAAC,GAkBO,SAASE,GAAS5oB,EAAA1I,EAAAqvB,GACzB,IAAA6B,EAAsBG,GAAYrxB,EAAAqvB,GAClC,OAAA6B,EAAAxoB,OAAA3S,EAAA2S,EAAA1c,QAsCO,SAAAulC,KAGPjB,GAA2BxC,IAC3BwC,GAA2BxB,IAG3ByB,GAA0BzB,GAAsBhB,GAAsBC,GAAcO,IAGpFiD,KC/dA,IAAAC,GAAA,IAAAh1B,MAAA,GAOO,SAAAnS,KACP,oBASO,SAASonC,GAAKpI,GACrB,OAASqI,GAAGrI,EAAA,aAWL,SAAAsI,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA1H,EAAA0H,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACA1H,EAAA0H,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,EAAAV,EAAA,GASA,OAPAD,EAAA,GAAAE,EAAAK,EAAAjI,EAAAkI,EACAR,EAAA,GAAAG,EAAAI,EAAAH,EAAAI,EACAR,EAAA,GAAAE,EAAA3H,EAAAD,EAAAmI,EACAT,EAAA,GAAAG,EAAA5H,EAAA6H,EAAAK,EACAT,EAAA,GAAAE,EAAAQ,EAAApI,EAAAqI,EAAAN,EACAL,EAAA,GAAAG,EAAAO,EAAAN,EAAAO,EAAAL,EAEAN,EAcO,SAASF,GAAGrI,EAAAp8B,EAAAC,EAAA9D,EAAAC,EAAAqN,EAAA4Q,GAOnB,OANA+hB,EAAA,GAAAp8B,EACAo8B,EAAA,GAAAn8B,EACAm8B,EAAA,GAAAjgC,EACAigC,EAAA,GAAAhgC,EACAggC,EAAA,GAAA3yB,EACA2yB,EAAA,GAAA/hB,EACA+hB,EAUO,SAAAmJ,GAAAZ,EAAAC,GAOP,OANAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAaO,SAAAzhC,GAAAk5B,EAAA3gB,GACP,IAAAmE,EAAAnE,EAAA,GACAqE,EAAArE,EAAA,GAGA,OAFAA,EAAA,GAAA2gB,EAAA,GAAAxc,EAAAwc,EAAA,GAAAtc,EAAAsc,EAAA,GACA3gB,EAAA,GAAA2gB,EAAA,GAAAxc,EAAAwc,EAAA,GAAAtc,EAAAsc,EAAA,GACA3gB,EAwBO,SAAS+pB,GAAKpJ,EAAAxc,EAAAE,GACrB,OAAA4kB,GAAAtI,EAA6BqI,GAAGF,GAAA3kB,EAAA,IAAAE,EAAA,MAWzB,SAAS2lB,GAASrJ,EAAApc,EAAAE,GACzB,OAAAwkB,GAAAtI,EAA6BqI,GAAGF,GAAA,QAAAvkB,EAAAE,IAiBzB,SAASwlB,GAAOtJ,EAAAuJ,EAAAC,EAAAhJ,EAAAC,EAAApH,EAAAoQ,EAAAC,GACvB,IAAAjQ,EAAAz3B,KAAAy3B,IAAAJ,GACAE,EAAAv3B,KAAAu3B,IAAAF,GAOA,OANA2G,EAAA,GAAAQ,EAAAjH,EACAyG,EAAA,GAAAS,EAAAhH,EACAuG,EAAA,IAAAQ,EAAA/G,EACAuG,EAAA,GAAAS,EAAAlH,EACAyG,EAAA,GAAAyJ,EAAAjJ,EAAAjH,EAAAmQ,EAAAlJ,EAAA/G,EAAA8P,EACAvJ,EAAA,GAAAyJ,EAAAhJ,EAAAhH,EAAAiQ,EAAAjJ,EAAAlH,EAAAiQ,EACAxJ,EASO,SAAA2J,GAAA3J,GACP,IAAA4J,EAAAC,GAAA7J,GACE1N,GAAM,IAAAsX,EAAA,IAER,IAAAhmC,EAAAo8B,EAAA,GACAn8B,EAAAm8B,EAAA,GACAjgC,EAAAigC,EAAA,GACAhgC,EAAAggC,EAAA,GACA3yB,EAAA2yB,EAAA,GACA/hB,EAAA+hB,EAAA,GASA,OAPAA,EAAA,GAAAhgC,EAAA4pC,EACA5J,EAAA,IAAAn8B,EAAA+lC,EACA5J,EAAA,IAAAjgC,EAAA6pC,EACA5J,EAAA,GAAAp8B,EAAAgmC,EACA5J,EAAA,IAAAjgC,EAAAke,EAAAje,EAAAqN,GAAAu8B,EACA5J,EAAA,KAAAp8B,EAAAqa,EAAApa,EAAAwJ,GAAAu8B,EAEA5J,EASO,SAAA6J,GAAArT,GACP,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GC7NA,IAAAsT,GAAmB9oC,KAef+oC,GAAQ,SAAAztB,GACZ,SAAA0tB,IAEA1tB,EAAAzc,KAAAP,MAMAA,KAAA4iC,QAAmBpH,KAMnBx7B,KAAA2qC,iBAAA,EAMA3qC,KAAA4qC,wBAAA,GAMA5qC,KAAA6qC,yCAAA,EAMA7qC,KAAA8qC,2BAAA,EA2NA,OAvNA9tB,IAAA0tB,EAAAh+B,UAAAsQ,GACA0tB,EAAA1oC,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACA0oC,EAAA1oC,UAAA+I,YAAA2/B,EAOAA,EAAA1oC,UAAA+oC,MAAA,WACA,OAAWh1B,KAWX20B,EAAA1oC,UAAAgpC,eAAA,SAAA9mB,EAAAE,EAAA6mB,EAAAC,GACA,OAAWn1B,KAQX20B,EAAA1oC,UAAAmpC,WAAA,SAAAjnB,EAAAE,GACA,UAWAsmB,EAAA1oC,UAAAopC,gBAAA,SAAAlG,EAAAmG,GACA,IAAAJ,EAAAI,GAAA,CAAAC,SAEA,OADAtrC,KAAAgrC,eAAA9F,EAAA,GAAAA,EAAA,GAAA+F,EAAAlnC,KACAknC,GAUAP,EAAA1oC,UAAAupC,qBAAA,SAAAxrB,GACA,OAAA/f,KAAAmrC,WAAAprB,EAAA,GAAAA,EAAA,KASA2qB,EAAA1oC,UAAAwpC,cAAA,SAAA3T,GACA,OAAW9hB,KASX20B,EAAA1oC,UAAA0hC,UAAA,SAAA/H,GAKA,OAJA37B,KAAA2qC,iBAAA3qC,KAAAyc,gBACAzc,KAAA4iC,QAAA5iC,KAAAwrC,cAAAxrC,KAAA4iC,SACA5iC,KAAA2qC,gBAAA3qC,KAAAyc,eAEWoiB,GAAc7+B,KAAA4iC,QAAAjH,IAWzB+O,EAAA1oC,UAAAypC,OAAA,SAAA1R,EAAA+G,GACI/qB,KAcJ20B,EAAA1oC,UAAAq4B,MAAA,SAAA6G,EAAAwK,EAAAC,GACI51B,KAaJ20B,EAAA1oC,UAAA4pC,SAAA,SAAA1S,GACA,OAAAl5B,KAAA6rC,sBAAA3S,MAWAwR,EAAA1oC,UAAA6pC,sBAAA,SAAAC,GACA,OAAW/1B,KAQX20B,EAAA1oC,UAAA+pC,QAAA,WACA,OAAWh2B,KAWX20B,EAAA1oC,UAAAgqC,eAAA,SAAArF,GACI5wB,KASJ20B,EAAA1oC,UAAAiqC,iBAAA,SAAApU,GACA,OAAW9hB,KAWX20B,EAAA1oC,UAAAkqC,UAAA,SAAAnN,EAAAC,GACIjpB,KAkBJ20B,EAAA1oC,UAAA0+B,UAAA,SAAArpB,EAAAqvB,GAEA,IAAAyF,EAAqB/E,GAAa/vB,GAClCsvB,EAAAwF,EAAAxI,YAA+CnB,GAAKH,YACpD,SAAA+J,EAAAC,EAAAzP,GACA,IAAA0P,EAAAH,EAAAzI,YACA6I,EAAAJ,EAAAtI,iBACAxJ,EAAoBqD,GAAS6O,GAAoB7O,GAAS4O,GAO1D,OANQtC,GAAgBQ,GACxB+B,EAAA,GAAAA,EAAA,GACAlS,KAAA,EACA,KACQoG,GAAW2L,EAAA,EAAAA,EAAA/oC,OAAAu5B,EACnB4N,GAAA6B,GACe3D,GAAYyD,EAAAzF,EAAZgC,CAAY0D,EAAAC,EAAAzP,IAErB8L,GAAYyD,EAAAzF,GAElB,OADA1mC,KAAAgsC,eAAArF,GACA3mC,MAGA0qC,EA5PY,CA6PV9sB,GAGa4uB,GAAA,GC5QXC,GAAc,SAAA/B,GAClB,SAAAgC,IAEAhC,EAAAnqC,KAAAP,MAMAA,KAAA2sC,OAAkBvM,GAAcC,GAMhCrgC,KAAA48B,OAAA,EAMA58B,KAAA28B,gBAAA,KAgOA,OA5NA+N,IAAAgC,EAAAhgC,UAAAg+B,GACAgC,EAAA1qC,UAAAlB,OAAAY,OAAAgpC,KAAA1oC,WACA0qC,EAAA1qC,UAAA+I,YAAA2hC,EAKAA,EAAA1qC,UAAAwpC,cAAA,SAAA3T,GACA,OAAW6E,GAAiC18B,KAAA28B,gBAC5C,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OAAA/E,IAOA6U,EAAA1qC,UAAA4qC,eAAA,WACA,OAAW72B,KAQX22B,EAAA1qC,UAAA6qC,mBAAA,WACA,OAAA7sC,KAAA28B,gBAAAn2B,MAAA,EAAAxG,KAAA48B,SAMA8P,EAAA1qC,UAAA8qC,mBAAA,WACA,OAAA9sC,KAAA28B,iBAQA+P,EAAA1qC,UAAA+qC,kBAAA,WACA,OAAA/sC,KAAA28B,gBAAAn2B,MAAAxG,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,SAQA8P,EAAA1qC,UAAAgrC,UAAA,WACA,OAAAhtC,KAAA2sC,QAMAD,EAAA1qC,UAAA6pC,sBAAA,SAAAC,GAQA,GAPA9rC,KAAA8qC,4BAAA9qC,KAAAyc,gBACMnF,EAAKtX,KAAA4qC,yBACX5qC,KAAA6qC,yCAAA,EACA7qC,KAAA8qC,2BAAA9qC,KAAAyc,eAIAqvB,EAAA,GACA,IAAA9rC,KAAA6qC,0CACAiB,GAAA9rC,KAAA6qC,yCACA,OAAA7qC,KAEA,IAAA2B,EAAAmqC,EAAAt5B,WACA,GAAAxS,KAAA4qC,wBAAA3oC,eAAAN,GACA,OAAA3B,KAAA4qC,wBAAAjpC,GAEA,IAAAsrC,EACAjtC,KAAAktC,8BAAApB,GACAqB,EAAAF,EAAAH,qBACA,OAAAK,EAAA9pC,OAAArD,KAAA28B,gBAAAt5B,QACArD,KAAA4qC,wBAAAjpC,GAAAsrC,EACAA,IAQAjtC,KAAA6qC,yCAAAiB,EACA9rC,OAUA0sC,EAAA1qC,UAAAkrC,8BAAA,SAAApB,GACA,OAAA9rC,MAMA0sC,EAAA1qC,UAAAorC,UAAA,WACA,OAAAptC,KAAA48B,QAOA8P,EAAA1qC,UAAAqrC,mBAAA,SAAAV,EAAAhQ,GACA38B,KAAA48B,OAAA0Q,GAAAX,GACA3sC,KAAA2sC,SACA3sC,KAAA28B,mBAQA+P,EAAA1qC,UAAAurC,eAAA,SAAAhS,EAAAiS,GACIz3B,KASJ22B,EAAA1qC,UAAAyrC,UAAA,SAAAd,EAAApR,EAAAmS,GAEA,IAAA9Q,EACA,GAAA+P,EACA/P,EAAA0Q,GAAAX,OACK,CACL,QAAAvsC,EAAA,EAAqBA,EAAAstC,IAAattC,EAAA,CAClC,OAAAm7B,EAAAl4B,OAGA,OAFArD,KAAA2sC,OAAwBvM,GAAcC,QACtCrgC,KAAA48B,OAAA,GAGArB,EAAyCA,EAAA,GAGzCqB,EAAArB,EAAAl4B,OACAspC,EAAAgB,GAAA/Q,GAEA58B,KAAA2sC,SACA3sC,KAAA48B,UAOA8P,EAAA1qC,UAAAgqC,eAAA,SAAArF,GACA3mC,KAAA28B,kBACAgK,EAAA3mC,KAAA28B,gBAAA38B,KAAA28B,gBAAA38B,KAAA48B,QACA58B,KAAAwc,YAQAkwB,EAAA1qC,UAAAypC,OAAA,SAAA1R,EAAA+G,GACA,IAAAnE,EAAA38B,KAAA8sC,qBACA,GAAAnQ,EAAA,CACA,IAAAC,EAAA58B,KAAAotC,YACMvM,GACNlE,EAAA,EAAAA,EAAAt5B,OACAu5B,EAAA7C,EAAA+G,EAAAnE,GACA38B,KAAAwc,YAQAkwB,EAAA1qC,UAAAq4B,MAAA,SAAA6G,EAAAwK,EAAAC,GACA,IAAAxK,EAAAuK,OACAt+B,IAAA+zB,IACAA,EAAAD,GAEA,IAAAJ,EAAA6K,EACA7K,IACAA,EAAenD,GAAS39B,KAAA0jC,cAExB,IAAA/G,EAAA38B,KAAA8sC,qBACA,GAAAnQ,EAAA,CACA,IAAAC,EAAA58B,KAAAotC,YACMnM,GACNtE,EAAA,EAAAA,EAAAt5B,OACAu5B,EAAAsE,EAAAC,EAAAL,EAAAnE,GACA38B,KAAAwc,YAQAkwB,EAAA1qC,UAAAkqC,UAAA,SAAAnN,EAAAC,GACA,IAAArC,EAAA38B,KAAA8sC,qBACA,GAAAnQ,EAAA,CACA,IAAAC,EAAA58B,KAAAotC,YACMhM,GACNzE,EAAA,EAAAA,EAAAt5B,OAAAu5B,EACAmC,EAAAC,EAAArC,GACA38B,KAAAwc,YAIAkwB,EArPkB,CAsPhBF,IAOF,SAAAmB,GAAA/Q,GACA,IAAA+P,EAQA,OAPA,GAAA/P,EACA+P,EAAavM,GAAcC,GACxB,GAAAzD,EACH+P,EAAavM,GAAcE,IACxB,GAAA1D,IACH+P,EAAavM,GAAcI,MAE3B,EAUO,SAAA8M,GAAAX,GACP,IAAA/P,EAQA,OAPA+P,GAAgBvM,GAAcC,GAC9BzD,EAAA,EACG+P,GAAoBvM,GAAcE,KAAAqM,GAAkBvM,GAAcG,IACrE3D,EAAA,EACG+P,GAAoBvM,GAAcI,OACrC5D,EAAA,GAE2B,EAUpB,SAAAgR,GAAAC,EAAAnN,EAAAC,GACP,IAAAhE,EAAAkR,EAAAf,qBACA,GAAAnQ,EAEG,CACH,IAAAC,EAAAiR,EAAAT,YACA,OAAW3M,GACX9D,EAAA,EAAAA,EAAAt5B,OAAAu5B,EACA8D,EAAAC,GALA,YASe,IAAAmN,GAAA,GCrTR,SAASC,GAAUpR,EAAAnE,EAAArO,EAAAyS,GAI1B,IAHA,IAAAoR,EAAA,EACApX,EAAA+F,EAAAxS,EAAAyS,GACA/F,EAAA8F,EAAAxS,EAAAyS,EAAA,GACQpE,EAAArO,EAAcqO,GAAAoE,EAAA,CACtB,IAAA9F,EAAA6F,EAAAnE,GACAzB,EAAA4F,EAAAnE,EAAA,GACAwV,GAAAnX,EAAAC,EAAAF,EAAAG,EACAH,EAAAE,EACAD,EAAAE,EAEA,OAAAiX,EAAA,EAWO,SAASC,GAAWtR,EAAAnE,EAAA0V,EAAAtR,GAE3B,IADA,IAAAt0B,EAAA,EACAlI,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAAA,CAC3C,IAAA+pB,EAAA+jB,EAAA9tC,GACAkI,GAAYylC,GAAUpR,EAAAnE,EAAArO,EAAAyS,GACtBpE,EAAArO,EAEA,OAAA7hB,ECvBA,SAAA6lC,GAAAxR,EAAAyR,EAAAC,EAAAzR,EAAA1Y,EAAAE,EAAA6mB,GACA,IAIAzS,EAJA5B,EAAA+F,EAAAyR,GACAvX,EAAA8F,EAAAyR,EAAA,GACA9pB,EAAAqY,EAAA0R,GAAAzX,EACApS,EAAAmY,EAAA0R,EAAA,GAAAxX,EAEA,OAAAvS,GAAA,IAAAE,EACAgU,EAAA4V,MACG,CACH,IAAA9sC,IAAA4iB,EAAA0S,GAAAtS,GAAAF,EAAAyS,GAAArS,IAAAF,IAAAE,KACA,GAAAljB,EAAA,EACAk3B,EAAA6V,MACK,IAAA/sC,EAAA,GACL,QAAAlB,EAAA,EAAqBA,EAAAw8B,IAAYx8B,EACjC6qC,EAAA7qC,GAA0Bu3B,GAAIgF,EAAAyR,EAAAhuC,GAC9Bu8B,EAAA0R,EAAAjuC,GAAAkB,GAGA,YADA2pC,EAAA5nC,OAAAu5B,GAGApE,EAAA4V,GAGA,QAAApgB,EAAA,EAAmBA,EAAA4O,IAAc5O,EACjCid,EAAAjd,GAAA2O,EAAAnE,EAAAxK,GAEAid,EAAA5nC,OAAAu5B,EAcO,SAAA0R,GAAA3R,EAAAnE,EAAArO,EAAAyS,EAAAj6B,GACP,IAAAi0B,EAAA+F,EAAAnE,GACA3B,EAAA8F,EAAAnE,EAAA,GACA,IAAAA,GAAAoE,EAAwBpE,EAAArO,EAAcqO,GAAAoE,EAAA,CACtC,IAAA9F,EAAA6F,EAAAnE,GACAzB,EAAA4F,EAAAnE,EAAA,GACA+V,EAAuBvX,GAASJ,EAAAC,EAAAC,EAAAC,GAChCwX,EAAA5rC,IACAA,EAAA4rC,GAEA3X,EAAAE,EACAD,EAAAE,EAEA,OAAAp0B,EAYO,SAAA6rC,GAAA7R,EAAAnE,EAAA0V,EAAAtR,EAAAj6B,GACP,QAAAvC,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAAA,CAC3C,IAAA+pB,EAAA+jB,EAAA9tC,GACAuC,EAAA2rC,GACA3R,EAAAnE,EAAArO,EAAAyS,EAAAj6B,GACA61B,EAAArO,EAEA,OAAAxnB,EAqCO,SAAA8rC,GAAA9R,EAAAnE,EAAArO,EACPyS,EAAA8R,EAAAC,EAAAzqB,EAAAE,EAAA6mB,EAAAC,EACA0D,GACA,GAAApW,GAAArO,EACA,OAAA+gB,EAEA,IAAA9qC,EAAAyuC,EACA,OAAAH,EAAA,CAIA,GAFAG,EAAsB7X,GACtB9S,EAAAE,EAAAuY,EAAAnE,GAAAmE,EAAAnE,EAAA,IACAqW,EAAA3D,EAAA,CACA,IAAA9qC,EAAA,EAAiBA,EAAAw8B,IAAYx8B,EAC7B6qC,EAAA7qC,GAAAu8B,EAAAnE,EAAAp4B,GAGA,OADA6qC,EAAA5nC,OAAAu5B,EACAiS,EAEA,OAAA3D,EAGA,IAAA4D,EAAAF,GAAA,CAAAtD,SACAxkC,EAAA0xB,EAAAoE,EACA,MAAA91B,EAAAqjB,EAIA,GAHAgkB,GACAxR,EAAA71B,EAAA81B,EAAA91B,EAAA81B,EAAA1Y,EAAAE,EAAA0qB,GACAD,EAAsB7X,GAAS9S,EAAAE,EAAA0qB,EAAA,GAAAA,EAAA,IAC/BD,EAAA3D,EAAA,CAEA,IADAA,EAAA2D,EACAzuC,EAAA,EAAiBA,EAAAw8B,IAAYx8B,EAC7B6qC,EAAA7qC,GAAA0uC,EAAA1uC,GAEA6qC,EAAA5nC,OAAAu5B,EACA91B,GAAA81B,OAYA91B,GAAA81B,EAAAl6B,KAAAC,KACAD,KAAAwF,KAAA2mC,GACAnsC,KAAAwF,KAAAgjC,IAAAwD,EAAA,KAGA,GAAAC,IAEAR,GACAxR,EAAAxS,EAAAyS,EAAApE,EAAAoE,EAAA1Y,EAAAE,EAAA0qB,GACAD,EAAsB7X,GAAS9S,EAAAE,EAAA0qB,EAAA,GAAAA,EAAA,IAC/BD,EAAA3D,GAAA,CAEA,IADAA,EAAA2D,EACAzuC,EAAA,EAAiBA,EAAAw8B,IAAYx8B,EAC7B6qC,EAAA7qC,GAAA0uC,EAAA1uC,GAEA6qC,EAAA5nC,OAAAu5B,EAGA,OAAAsO,EAkBO,SAAA6D,GAAApS,EAAAnE,EAAA0V,EACPtR,EAAA8R,EAAAC,EAAAzqB,EAAAE,EAAA6mB,EAAAC,EACA0D,GAEA,IADA,IAAAE,EAAAF,GAAA,CAAAtD,SACAlrC,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAAA,CAC3C,IAAA+pB,EAAA+jB,EAAA9tC,GACA8qC,EAAAuD,GACA9R,EAAAnE,EAAArO,EAAAyS,EACA8R,EAAAC,EAAAzqB,EAAAE,EAAA6mB,EAAAC,EAAA4D,GACAtW,EAAArO,EAEA,OAAA+gB,EC/MO,SAAA8D,GAAArS,EAAAnE,EAAAzY,EAAA6c,GACP,QAAAx8B,EAAA,EAAAgX,EAAA2I,EAAA1c,OAAyCjD,EAAAgX,IAAQhX,EACjDu8B,EAAAnE,KAAAzY,EAAA3f,GAEA,OAAAo4B,EAWO,SAAAyW,GAAAtS,EAAAnE,EAAA+C,EAAAqB,GACP,QAAAx8B,EAAA,EAAAgX,EAAAmkB,EAAAl4B,OAA0CjD,EAAAgX,IAAQhX,EAElD,IADA,IAAA2f,EAAAwb,EAAAn7B,GACAyH,EAAA,EAAmBA,EAAA+0B,IAAY/0B,EAC/B80B,EAAAnE,KAAAzY,EAAAlY,GAGA,OAAA2wB,EAYO,SAAA0W,GAAAvS,EAAAnE,EAAA2W,EAAAvS,EAAAwS,GAGP,IAFA,IAAAlB,EAAAkB,GAAA,GACAhvC,EAAA,EACAyH,EAAA,EAAAwnC,EAAAF,EAAA9rC,OAA2CwE,EAAAwnC,IAAQxnC,EAAA,CACnD,IAAAsiB,EAAA8kB,GACAtS,EAAAnE,EAAA2W,EAAAtnC,GAAA+0B,GACAsR,EAAA9tC,KAAA+pB,EACAqO,EAAArO,EAGA,OADA+jB,EAAA7qC,OAAAjD,EACA8tC,EC3CO,SAAAoB,GAAA3S,EAAAnE,EAAArO,EAAAyS,EAAA2S,GAGP,IAFA,IAAAhU,OAAAnuB,IAAAmiC,IAAA,GACAnvC,EAAA,EACAyH,EAAA2wB,EAAsB3wB,EAAAsiB,EAAStiB,GAAA+0B,EAC/BrB,EAAAn7B,KAAAu8B,EAAAn2B,MAAAqB,IAAA+0B,GAGA,OADArB,EAAAl4B,OAAAjD,EACAm7B,EAYO,SAAAiU,GAAA7S,EAAAnE,EAAA0V,EAAAtR,EAAA6S,GAGP,IAFA,IAAAN,OAAA/hC,IAAAqiC,IAAA,GACArvC,EAAA,EACAyH,EAAA,EAAAwnC,EAAAnB,EAAA7qC,OAAmCwE,EAAAwnC,IAAQxnC,EAAA,CAC3C,IAAAsiB,EAAA+jB,EAAArmC,GACAsnC,EAAA/uC,KAAAkvC,GACA3S,EAAAnE,EAAArO,EAAAyS,EAAAuS,EAAA/uC,IACAo4B,EAAArO,EAGA,OADAglB,EAAA9rC,OAAAjD,EACA+uC,EAaO,SAAAO,GAAA/S,EAAAnE,EAAAmX,EAAA/S,EAAAgT,GAGP,IAFA,IAAAC,OAAAziC,IAAAwiC,IAAA,GACAxvC,EAAA,EACAyH,EAAA,EAAAwnC,EAAAM,EAAAtsC,OAAoCwE,EAAAwnC,IAAQxnC,EAAA,CAC5C,IAAAqmC,EAAAyB,EAAA9nC,GACAgoC,EAAAzvC,KAAAovC,GACA7S,EAAAnE,EAAA0V,EAAAtR,EAAAiT,EAAAzvC,IACAo4B,EAAA0V,IAAA7qC,OAAA,GAGA,OADAwsC,EAAAxsC,OAAAjD,EACAyvC,ECQO,SAAAC,GAAAnT,EAAAnE,EAAArO,EACPyS,EAAAkP,EAAAqB,EAAA4C,GACA,IAAAluC,GAAAsoB,EAAAqO,GAAAoE,EACA,GAAA/6B,EAAA,GACA,KAAU22B,EAAArO,EAAcqO,GAAAoE,EACxBuQ,EAAA4C,KACApT,EAAAnE,GACA2U,EAAA4C,KACApT,EAAAnE,EAAA,GAEA,OAAAuX,EAGA,IAAAC,EAAA,IAAAn8B,MAAAhS,GACAmuC,EAAA,KACAA,EAAAnuC,EAAA,KAEA,IAAA2D,EAAA,CAAAgzB,EAAArO,EAAAyS,GACA91B,EAAA,EACA,MAAAtB,EAAAnC,OAAA,GAQA,IAPA,IAAA4sC,EAAAzqC,EAAAC,MACAyqC,EAAA1qC,EAAAC,MACA0qC,EAAA,EACAvZ,EAAA+F,EAAAuT,GACArZ,EAAA8F,EAAAuT,EAAA,GACApZ,EAAA6F,EAAAsT,GACAlZ,EAAA4F,EAAAsT,EAAA,GACA7vC,EAAA8vC,EAAAtT,EAAgCx8B,EAAA6vC,EAAU7vC,GAAAw8B,EAAA,CAC1C,IAAA1Y,EAAAyY,EAAAv8B,GACAgkB,EAAAuY,EAAAv8B,EAAA,GACAyuC,EAA4BlY,GAC5BzS,EAAAE,EAAAwS,EAAAC,EAAAC,EAAAC,GACA8X,EAAAsB,IACArpC,EAAA1G,EACA+vC,EAAAtB,GAGAsB,EAAArE,IACAkE,GAAAlpC,EAAA0xB,GAAAoE,GAAA,EACAsT,EAAAtT,EAAA91B,GACAtB,EAAAE,KAAAwqC,EAAAppC,GAEAA,EAAA81B,EAAAqT,GACAzqC,EAAAE,KAAAoB,EAAAmpC,IAIA,QAAAjiB,EAAA,EAAmBA,EAAAnsB,IAASmsB,EAC5BgiB,EAAAhiB,KACAmf,EAAA4C,KACApT,EAAAnE,EAAAxK,EAAA4O,GACAuQ,EAAA4C,KACApT,EAAAnE,EAAAxK,EAAA4O,EAAA,IAGA,OAAAmT,EAiHO,SAAAK,GAAA/uC,EAAA63B,GACP,OAAAA,EAAAx2B,KAAA2tC,MAAAhvC,EAAA63B,GAuBO,SAAAoX,GAAA3T,EAAAnE,EAAArO,EAAAyS,EACP1D,EAAAiU,EAAA4C,GAEA,GAAAvX,GAAArO,EACA,OAAA4lB,EAGA,IAQAjZ,EAAAC,EARAH,EAAAwZ,GAAAzT,EAAAnE,GAAAU,GACArC,EAAAuZ,GAAAzT,EAAAnE,EAAA,GAAAU,GACAV,GAAAoE,EAEAuQ,EAAA4C,KAAAnZ,EACAuW,EAAA4C,KAAAlZ,EAIA,GAIA,GAHAC,EAAAsZ,GAAAzT,EAAAnE,GAAAU,GACAnC,EAAAqZ,GAAAzT,EAAAnE,EAAA,GAAAU,GACAV,GAAAoE,EACApE,GAAArO,EAOA,OAFAgjB,EAAA4C,KAAAjZ,EACAqW,EAAA4C,KAAAhZ,EACAgZ,QAEGjZ,GAAAF,GAAAG,GAAAF,GACH,MAAA2B,EAAArO,EAAA,CAEA,IAAAoU,EAAA6R,GAAAzT,EAAAnE,GAAAU,GACAuF,EAAA2R,GAAAzT,EAAAnE,EAAA,GAAAU,GAGA,GAFAV,GAAAoE,EAEA2B,GAAAzH,GAAA2H,GAAA1H,EAAA,CAIA,IAAAkT,EAAAnT,EAAAF,EACAsT,EAAAnT,EAAAF,EAEAsT,EAAA5L,EAAA3H,EACAwT,EAAA3L,EAAA5H,EAIAoT,EAAAG,GAAAF,EAAAC,IACAF,EAAA,GAAAE,EAAAF,MAAAE,GAAAF,EAAA,GAAAE,EAAAF,KACAC,EAAA,GAAAE,EAAAF,MAAAE,GAAAF,EAAA,GAAAE,EAAAF,IAEApT,EAAAyH,EACAxH,EAAA0H,IAMA0O,EAAA4C,KAAAjZ,EACAqW,EAAA4C,KAAAhZ,EACAH,EAAAE,EACAD,EAAAE,EACAD,EAAAyH,EACAxH,EAAA0H,IAKA,OAFA0O,EAAA4C,KAAAjZ,EACAqW,EAAA4C,KAAAhZ,EACAgZ,EAgBO,SAAAQ,GACP5T,EAAAnE,EAAA0V,EAAAtR,EACA1D,EACAiU,EAAA4C,EAAAS,GACA,QAAApwC,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAAA,CAC3C,IAAA+pB,EAAA+jB,EAAA9tC,GACA2vC,EAAAO,GACA3T,EAAAnE,EAAArO,EAAAyS,EACA1D,EACAiU,EAAA4C,GACAS,EAAA9qC,KAAAqqC,GACAvX,EAAArO,EAEA,OAAA4lB,ECvVA,IAAIU,GAAU,SAAA/D,GACd,SAAAgE,EAAAnV,EAAAiS,GAEAd,EAAAnsC,KAAAP,MAMAA,KAAA2wC,WAAA,EAMA3wC,KAAA4wC,mBAAA,OAEAxjC,IAAAogC,GAAA35B,MAAA6I,QAAA6e,EAAA,IAGAv7B,KAAAutC,eAAkF,EAAAC,GAFlFxtC,KAAAqtC,mBAAAG,EAAmE,GAqGnE,OA9FAd,IAAAgE,EAAAhkC,UAAAggC,GACAgE,EAAA1uC,UAAAlB,OAAAY,OAAAgrC,KAAA1qC,WACA0uC,EAAA1uC,UAAA+I,YAAA2lC,EAQAA,EAAA1uC,UAAA+oC,MAAA,WACA,WAAA2F,EAAA1wC,KAAA28B,gBAAAn2B,QAAAxG,KAAA2sC,SAMA+D,EAAA1uC,UAAAgpC,eAAA,SAAA9mB,EAAAE,EAAA6mB,EAAAC,GACA,OAAAA,EAA6BrP,GAAwB77B,KAAA0jC,YAAAxf,EAAAE,GACrD8mB,GAEAlrC,KAAA4wC,mBAAA5wC,KAAAyc,gBACAzc,KAAA2wC,UAAAjuC,KAAAwF,KAAiComC,GACjCtuC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OAAA,IACA58B,KAAA4wC,kBAAA5wC,KAAAyc,eAEWgyB,GACXzuC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OACA58B,KAAA2wC,WAAA,EAAAzsB,EAAAE,EAAA6mB,EAAAC,KAQAwF,EAAA1uC,UAAA6uC,QAAA,WACA,OAAW9C,GAAc/tC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,SASzB8T,EAAA1uC,UAAA4qC,eAAA,WACA,OAAW0C,GACXtvC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,SAMA8T,EAAA1uC,UAAAkrC,8BAAA,SAAApB,GACA,IAAAqB,EAAA,GAIA,OAHAA,EAAA9pC,OAAuCysC,GACvC9vC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OACAkP,EAAAqB,EAAA,GACA,IAAAuD,EAAAvD,EAAqD/M,GAAcC,KAOnEqQ,EAAA1uC,UAAA+pC,QAAA,WACA,OAAWrM,GAAYG,aAMvB6Q,EAAA1uC,UAAAiqC,iBAAA,SAAApU,GACA,UAUA6Y,EAAA1uC,UAAAurC,eAAA,SAAAhS,EAAAiS,GACAxtC,KAAAytC,UAAAD,EAAAjS,EAAA,GACAv7B,KAAA28B,kBACA38B,KAAA28B,gBAAA,IAEA38B,KAAA28B,gBAAAt5B,OAAkC4rC,GAClCjvC,KAAA28B,gBAAA,EAAApB,EAAAv7B,KAAA48B,QACA58B,KAAAwc,WAGAk0B,EAvHc,CAwHZ5C,IAGagD,GAAA,GChIXC,GAAK,SAAArE,GACT,SAAAsE,EAAAzV,EAAAiS,GACAd,EAAAnsC,KAAAP,MACAA,KAAAutC,eAAAhS,EAAAiS,GAmFA,OAhFAd,IAAAsE,EAAAtkC,UAAAggC,GACAsE,EAAAhvC,UAAAlB,OAAAY,OAAAgrC,KAAA1qC,WACAgvC,EAAAhvC,UAAA+I,YAAAimC,EAQAA,EAAAhvC,UAAA+oC,MAAA,WACA,IAAA7F,EAAA,IAAA8L,EAAAhxC,KAAA28B,gBAAAn2B,QAAAxG,KAAA2sC,QACA,OAAAzH,GAMA8L,EAAAhvC,UAAAgpC,eAAA,SAAA9mB,EAAAE,EAAA6mB,EAAAC,GACA,IAAAvO,EAAA38B,KAAA28B,gBACAkS,EAA0B7X,GAAS9S,EAAAE,EAAAuY,EAAA,GAAAA,EAAA,IACnC,GAAAkS,EAAA3D,EAAA,CAEA,IADA,IAAAtO,EAAA58B,KAAA48B,OACAx8B,EAAA,EAAqBA,EAAAw8B,IAAYx8B,EACjC6qC,EAAA7qC,GAAAu8B,EAAAv8B,GAGA,OADA6qC,EAAA5nC,OAAAu5B,EACAiS,EAEA,OAAA3D,GAUA8F,EAAAhvC,UAAA4qC,eAAA,WACA,OAAA5sC,KAAA28B,gBAAA38B,KAAA28B,gBAAAn2B,QAAA,IAMAwqC,EAAAhvC,UAAAwpC,cAAA,SAAA3T,GACA,OAAW0E,GAA4Bv8B,KAAA28B,gBAAA9E,IAOvCmZ,EAAAhvC,UAAA+pC,QAAA,WACA,OAAWrM,GAAYC,OAOvBqR,EAAAhvC,UAAAiqC,iBAAA,SAAApU,GACA,OAAWkE,GAAUlE,EAAA73B,KAAA28B,gBAAA,GAAA38B,KAAA28B,gBAAA,KAOrBqU,EAAAhvC,UAAAurC,eAAA,SAAAhS,EAAAiS,GACAxtC,KAAAytC,UAAAD,EAAAjS,EAAA,GACAv7B,KAAA28B,kBACA38B,KAAA28B,gBAAA,IAEA38B,KAAA28B,gBAAAt5B,OAAkC2rC,GAClChvC,KAAA28B,gBAAA,EAAApB,EAAAv7B,KAAA48B,QACA58B,KAAAwc,WAGAw0B,EAtFS,CAuFPlD,IAGamD,GAAA,GC3FR,SAAAC,GAAAvU,EAAAnE,EAAArO,EAAAyS,EAAA/E,GACP,IAAAsZ,EAAgBlU,GAAapF,EAK7B,SAAA9X,GACA,OAAAqxB,GAAAzU,EAAAnE,EAAArO,EAAAyS,EAAA7c,EAAA,GAAAA,EAAA,MAEA,OAAAoxB,EAaO,SAAAC,GAAAzU,EAAAnE,EAAArO,EAAAyS,EAAA1Y,EAAAE,GAWP,IAHA,IAAAitB,EAAA,EACAza,EAAA+F,EAAAxS,EAAAyS,GACA/F,EAAA8F,EAAAxS,EAAAyS,EAAA,GACQpE,EAAArO,EAAcqO,GAAAoE,EAAA,CACtB,IAAA9F,EAAA6F,EAAAnE,GACAzB,EAAA4F,EAAAnE,EAAA,GACA3B,GAAAzS,EACA2S,EAAA3S,IAAA0S,EAAAF,IAAAxS,EAAAyS,IAAA3S,EAAA0S,IAAAG,EAAAF,GAAA,GACAwa,IAEKta,GAAA3S,IAAA0S,EAAAF,IAAAxS,EAAAyS,IAAA3S,EAAA0S,IAAAG,EAAAF,GAAA,GACLwa,IAEAza,EAAAE,EACAD,EAAAE,EAEA,WAAAsa,EAaO,SAAAC,GAAA3U,EAAAnE,EAAA0V,EAAAtR,EAAA1Y,EAAAE,GACP,OAAA8pB,EAAA7qC,OACA,SAEA,IAAA+tC,GAAAzU,EAAAnE,EAAA0V,EAAA,GAAAtR,EAAA1Y,EAAAE,GACA,SAEA,QAAAhkB,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAC3C,GAAAgxC,GAAAzU,EAAAuR,EAAA9tC,EAAA,GAAA8tC,EAAA9tC,GAAAw8B,EAAA1Y,EAAAE,GACA,SAGA,SCjEO,SAAAmtB,GAAA5U,EAAAnE,EACP0V,EAAAtR,EAAA4U,EAAAC,EAAA9Q,GAMA,IALA,IAAAvgC,EAAAgX,EAAA8M,EAAA0S,EAAAE,EAAAD,EAAAE,EACA3S,EAAAotB,EAAAC,EAAA,GAEAC,EAAA,GAEAxwC,EAAA,EAAAywC,EAAAzD,EAAA7qC,OAAmCnC,EAAAywC,IAAQzwC,EAAA,CAC3C,IAAAipB,EAAA+jB,EAAAhtC,GAGA,IAFA01B,EAAA+F,EAAAxS,EAAAyS,GACA/F,EAAA8F,EAAAxS,EAAAyS,EAAA,GACAx8B,EAAAo4B,EAAoBp4B,EAAA+pB,EAAS/pB,GAAAw8B,EAC7B9F,EAAA6F,EAAAv8B,GACA22B,EAAA4F,EAAAv8B,EAAA,IACAgkB,GAAAyS,GAAAE,GAAA3S,GAAAyS,GAAAzS,MAAA2S,KACA7S,GAAAE,EAAAyS,IAAAE,EAAAF,IAAAC,EAAAF,KACA8a,EAAAhsC,KAAAwe,IAEA0S,EAAAE,EACAD,EAAAE,EAKA,IAAA6a,EAAAtG,IACAuG,GAAA9tC,IAGA,IAFA2tC,EAAAjoC,KAAqBigB,IACrBkN,EAAA8a,EAAA,GACAtxC,EAAA,EAAAgX,EAAAs6B,EAAAruC,OAAwCjD,EAAAgX,IAAQhX,EAAA,CAChD02B,EAAA4a,EAAAtxC,GACA,IAAA0xC,EAAApvC,KAAA6hB,IAAAuS,EAAAF,GACAkb,EAAAD,IACA3tB,GAAA0S,EAAAE,GAAA,EACUwa,GAAqB3U,EAAAnE,EAAA0V,EAAAtR,EAAA1Y,EAAAE,KAC/BwtB,EAAA1tB,EACA2tB,EAAAC,IAGAlb,EAAAE,EAOA,OALAib,MAAAH,KAGAA,EAAAJ,EAAAC,IAEA9Q,GACAA,EAAAj7B,KAAAksC,EAAAxtB,EAAAytB,GACAlR,GAEA,CAAAiR,EAAAxtB,EAAAytB,GCjDO,SAAAjjC,GAAA+tB,EAAAnE,EAAArO,EAAAyS,EAAAjqB,EAAAwF,GAIP,IAHA,IAEA65B,EAFAC,EAAA,CAAAtV,EAAAnE,GAAAmE,EAAAnE,EAAA,IACA0Z,EAAA,GAEQ1Z,EAAAoE,EAAAzS,EAAyBqO,GAAAoE,EAAA,CAIjC,GAHAsV,EAAA,GAAAvV,EAAAnE,EAAAoE,GACAsV,EAAA,GAAAvV,EAAAnE,EAAAoE,EAAA,GACAoV,EAAAr/B,EAAApS,KAAA4X,EAAA85B,EAAAC,GACAF,EACA,OAAAA,EAEAC,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,SClBO,SAAAC,GAAAxV,EAAAnE,EAAArO,EAAAyS,EAAA/E,GACP,IAAAua,EAA0BvV,GACtBrB,KAAWmB,EAAAnE,EAAArO,EAAAyS,GACf,QAAOgC,GAAU/G,EAAAua,OAGXpW,GAAcnE,EAAAua,KAGpBA,EAAA,IAAAva,EAAA,IACAua,EAAA,IAAAva,EAAA,KAGAua,EAAA,IAAAva,EAAA,IACAua,EAAA,IAAAva,EAAA,IAGSjpB,GAAc+tB,EAAAnE,EAAArO,EAAAyS,EAOvB,SAAAqV,EAAAC,GACA,OAAajT,GAAiBpH,EAAAoa,EAAAC,QAiCvB,SAAAG,GAAA1V,EAAAnE,EAAArO,EAAAyS,EAAA/E,GACP,QAAAsa,GACAxV,EAAAnE,EAAArO,EAAAyS,EAAA/E,OAGMuZ,GAAoBzU,EAAAnE,EAAArO,EAAAyS,EAAA/E,EAAA,GAAAA,EAAA,QAGpBuZ,GAAoBzU,EAAAnE,EAAArO,EAAAyS,EAAA/E,EAAA,GAAAA,EAAA,QAGpBuZ,GAAoBzU,EAAAnE,EAAArO,EAAAyS,EAAA/E,EAAA,GAAAA,EAAA,OAGpBuZ,GAAoBzU,EAAAnE,EAAArO,EAAAyS,EAAA/E,EAAA,GAAAA,EAAA,OAenB,SAAAya,GAAA3V,EAAAnE,EAAA0V,EAAAtR,EAAA/E,GACP,IAAAwa,GACA1V,EAAAnE,EAAA0V,EAAA,GAAAtR,EAAA/E,GACA,SAEA,OAAAqW,EAAA7qC,OACA,SAEA,QAAAjD,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAC3C,GAAQ8wC,GAAwBvU,EAAAuR,EAAA9tC,EAAA,GAAA8tC,EAAA9tC,GAAAw8B,EAAA/E,KAChCsa,GAAAxV,EAAAuR,EAAA9tC,EAAA,GAAA8tC,EAAA9tC,GAAAw8B,EAAA/E,GACA,SAIA,SC3GO,SAAS0a,GAAW5V,EAAAnE,EAAArO,EAAAyS,GAC3B,MAAApE,EAAArO,EAAAyS,EAAA,CACA,QAAAx8B,EAAA,EAAmBA,EAAAw8B,IAAYx8B,EAAA,CAC/B,IAAAuK,EAAAgyB,EAAAnE,EAAAp4B,GACAu8B,EAAAnE,EAAAp4B,GAAAu8B,EAAAxS,EAAAyS,EAAAx8B,GACAu8B,EAAAxS,EAAAyS,EAAAx8B,GAAAuK,EAEA6tB,GAAAoE,EACAzS,GAAAyS,GCNO,SAAA4V,GAAA7V,EAAAnE,EAAArO,EAAAyS,GAMP,IAHA,IAAA6V,EAAA,EACA7b,EAAA+F,EAAAxS,EAAAyS,GACA/F,EAAA8F,EAAAxS,EAAAyS,EAAA,GACQpE,EAAArO,EAAcqO,GAAAoE,EAAA,CACtB,IAAA9F,EAAA6F,EAAAnE,GACAzB,EAAA4F,EAAAnE,EAAA,GACAia,IAAA3b,EAAAF,IAAAG,EAAAF,GACAD,EAAAE,EACAD,EAAAE,EAEA,OAAA0b,EAAA,EAiBO,SAAAC,GAAA/V,EAAAnE,EAAA0V,EAAAtR,EAAA+V,GAEP,IADA,IAAAttC,OAAA+H,IAAAulC,KACAvyC,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAAA,CAC3C,IAAA+pB,EAAA+jB,EAAA9tC,GACAwyC,EAAAJ,GACA7V,EAAAnE,EAAArO,EAAAyS,GACA,OAAAx8B,GACA,GAAAiF,GAAAutC,IAAAvtC,IAAAutC,EACA,cAGA,GAAAvtC,IAAAutC,IAAAvtC,GAAAutC,EACA,SAGApa,EAAArO,EAEA,SAyCO,SAAA0oB,GAAAlW,EAAAnE,EAAA0V,EAAAtR,EAAA+V,GAEP,IADA,IAAAttC,OAAA+H,IAAAulC,KACAvyC,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAmCjD,EAAAgX,IAAQhX,EAAA,CAC3C,IAAA+pB,EAAA+jB,EAAA9tC,GACAwyC,EAAAJ,GACA7V,EAAAnE,EAAArO,EAAAyS,GACAkW,EAAA,IAAA1yC,EACAiF,GAAAutC,IAAAvtC,IAAAutC,EACAvtC,IAAAutC,IAAAvtC,GAAAutC,EACAE,GACMP,GAAkB5V,EAAAnE,EAAArO,EAAAyS,GAExBpE,EAAArO,EAEA,OAAAqO,ECvFA,IAAIua,GAAO,SAAArG,GACX,SAAAsG,EAAAzX,EAAAiS,EAAA4B,GAEA1C,EAAAnsC,KAAAP,MAMAA,KAAAizC,MAAA,GAMAjzC,KAAAkzC,4BAAA,EAMAlzC,KAAAmzC,mBAAA,KAMAnzC,KAAA2wC,WAAA,EAMA3wC,KAAA4wC,mBAAA,EAMA5wC,KAAAozC,mBAAA,EAMApzC,KAAAqzC,yBAAA,UAEAjmC,IAAAogC,GAAA4B,GACApvC,KAAAqtC,mBAAAG,EAAmE,GACnExtC,KAAAizC,MAAA7D,GAEApvC,KAAAutC,eAAyF,EAAAC,GAmPzF,OA9OAd,IAAAsG,EAAAtmC,UAAAggC,GACAsG,EAAAhxC,UAAAlB,OAAAY,OAAAgrC,KAAA1qC,WACAgxC,EAAAhxC,UAAA+I,YAAAioC,EAOAA,EAAAhxC,UAAAsxC,iBAAA,SAAAC,GACAvzC,KAAA28B,gBAGMv4B,GAAMpE,KAAA28B,gBAAA4W,EAAAzG,sBAFZ9sC,KAAA28B,gBAAA4W,EAAAzG,qBAAAtmC,QAIAxG,KAAAizC,MAAAvtC,KAAA1F,KAAA28B,gBAAAt5B,QACArD,KAAAwc,WASAw2B,EAAAhxC,UAAA+oC,MAAA,WACA,WAAAiI,EAAAhzC,KAAA28B,gBAAAn2B,QAAAxG,KAAA2sC,OAAA3sC,KAAAizC,MAAAzsC,UAMAwsC,EAAAhxC,UAAAgpC,eAAA,SAAA9mB,EAAAE,EAAA6mB,EAAAC,GACA,OAAAA,EAA6BrP,GAAwB77B,KAAA0jC,YAAAxf,EAAAE,GACrD8mB,GAEAlrC,KAAA4wC,mBAAA5wC,KAAAyc,gBACAzc,KAAA2wC,UAAAjuC,KAAAwF,KAAiCsmC,GACjCxuC,KAAA28B,gBAAA,EAAA38B,KAAAizC,MAAAjzC,KAAA48B,OAAA,IACA58B,KAAA4wC,kBAAA5wC,KAAAyc,eAEWsyB,GACX/uC,KAAA28B,gBAAA,EAAA38B,KAAAizC,MAAAjzC,KAAA48B,OACA58B,KAAA2wC,WAAA,EAAAzsB,EAAAE,EAAA6mB,EAAAC,KAMA8H,EAAAhxC,UAAAmpC,WAAA,SAAAjnB,EAAAE,GACA,OAAWktB,GAAqBtxC,KAAAwzC,6BAAA,EAAAxzC,KAAAizC,MAAAjzC,KAAA48B,OAAA1Y,EAAAE,IAQhC4uB,EAAAhxC,UAAA6uC,QAAA,WACA,OAAW5C,GAAejuC,KAAAwzC,6BAAA,EAAAxzC,KAAAizC,MAAAjzC,KAAA48B,SAiB1BoW,EAAAhxC,UAAA4qC,eAAA,SAAA+F,GACA,IAAAhW,EASA,YARAvvB,IAAAulC,GACAhW,EAAA38B,KAAAwzC,6BAAAhtC,QACMqsC,GACNlW,EAAA,EAAA38B,KAAAizC,MAAAjzC,KAAA48B,OAAA+V,IAEAhW,EAAA38B,KAAA28B,gBAGW6S,GACX7S,EAAA,EAAA38B,KAAAizC,MAAAjzC,KAAA48B,SAMAoW,EAAAhxC,UAAAyxC,QAAA,WACA,OAAAzzC,KAAAizC,OAMAD,EAAAhxC,UAAA0xC,qBAAA,WACA,GAAA1zC,KAAAkzC,4BAAAlzC,KAAAyc,cAAA,CACA,IAAAk3B,EAAuBhW,GAAS39B,KAAA0jC,aAChC1jC,KAAAmzC,mBAAgC5B,GAChCvxC,KAAAwzC,6BAAA,EAAAxzC,KAAAizC,MAAAjzC,KAAA48B,OACA+W,EAAA,GACA3zC,KAAAkzC,2BAAAlzC,KAAAyc,cAEA,OAAAzc,KAAAmzC,oBASAH,EAAAhxC,UAAA4xC,iBAAA,WACA,WAAe3C,GAAKjxC,KAAA0zC,uBAA8BtT,GAAcG,MAUhEyS,EAAAhxC,UAAA6xC,mBAAA,WACA,OAAA7zC,KAAAizC,MAAA5vC,QAaA2vC,EAAAhxC,UAAA8xC,cAAA,SAAAhtC,GACA,OAAAA,EAAA,GAAA9G,KAAAizC,MAAA5vC,QAAAyD,EACA,KAEA,IAAegqC,GAAU9wC,KAAA28B,gBAAAn2B,MACzB,IAAAM,EAAA,EAAA9G,KAAAizC,MAAAnsC,EAAA,GAAA9G,KAAAizC,MAAAnsC,IAAA9G,KAAA2sC,SAQAqG,EAAAhxC,UAAA+xC,eAAA,WAMA,IALA,IAAApH,EAAA3sC,KAAA2sC,OACAhQ,EAAA38B,KAAA28B,gBACAuR,EAAAluC,KAAAizC,MACAe,EAAA,GACAxb,EAAA,EACAp4B,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAqCjD,EAAAgX,IAAQhX,EAAA,CAC7C,IAAA+pB,EAAA+jB,EAAA9tC,GACAmzC,EAAA,IAA2BzC,GAAUnU,EAAAn2B,MAAAgyB,EAAArO,GAAAwiB,GACrCqH,EAAAtuC,KAAA6tC,GACA/a,EAAArO,EAEA,OAAA6pB,GAMAhB,EAAAhxC,UAAAwxC,2BAAA,WACA,GAAAxzC,KAAAozC,mBAAApzC,KAAAyc,cAAA,CACA,IAAAkgB,EAAA38B,KAAA28B,gBACU+V,GACV/V,EAAA,EAAA38B,KAAAizC,MAAAjzC,KAAA48B,QACA58B,KAAAqzC,yBAAA1W,GAEA38B,KAAAqzC,yBAAA1W,EAAAn2B,QACAxG,KAAAqzC,yBAAAhwC,OACYwvC,GACZ7yC,KAAAqzC,yBAAA,EAAArzC,KAAAizC,MAAAjzC,KAAA48B,SAEA58B,KAAAozC,kBAAApzC,KAAAyc,cAEA,OAAAzc,KAAAqzC,0BAMAL,EAAAhxC,UAAAkrC,8BAAA,SAAApB,GACA,IAAAqB,EAAA,GACAqD,EAAA,GAKA,OAJArD,EAAA9pC,OAAuCktC,GACvCvwC,KAAA28B,gBAAA,EAAA38B,KAAAizC,MAAAjzC,KAAA48B,OACAl6B,KAAAwF,KAAA4jC,GACAqB,EAAA,EAAAqD,GACA,IAAAwC,EAAA7F,EAAkD/M,GAAcC,GAAAmQ,IAOhEwC,EAAAhxC,UAAA+pC,QAAA,WACA,OAAWrM,GAAYI,SAOvBkT,EAAAhxC,UAAAiqC,iBAAA,SAAApU,GACA,OAAWya,GACXtyC,KAAAwzC,6BAAA,EAAAxzC,KAAAizC,MAAAjzC,KAAA48B,OAAA/E,IAUAmb,EAAAhxC,UAAAurC,eAAA,SAAAhS,EAAAiS,GACAxtC,KAAAytC,UAAAD,EAAAjS,EAAA,GACAv7B,KAAA28B,kBACA38B,KAAA28B,gBAAA,IAEA,IAAAuR,EAAegB,GACflvC,KAAA28B,gBAAA,EAAApB,EAAAv7B,KAAA48B,OAAA58B,KAAAizC,OACAjzC,KAAA28B,gBAAAt5B,OAAA,IAAA6qC,EAAA7qC,OAAA,EAAA6qC,IAAA7qC,OAAA,GACArD,KAAAwc,WAGAw2B,EAtSW,CAuSTlF,IAGamG,GAAA,GAiCR,SAAAC,GAAArc,GACP,IAAA/zB,EAAA+zB,EAAA,GACA7zB,EAAA6zB,EAAA,GACA5zB,EAAA4zB,EAAA,GACA3zB,EAAA2zB,EAAA,GACA8E,EACA,CAAA74B,EAAAE,EAAAF,EAAAI,EAAAD,EAAAC,EAAAD,EAAAD,EAAAF,EAAAE,GACA,WAAa+uC,GAAOpW,EAAkByD,GAAcC,GAAA,CAAA1D,EAAAt5B,SCpMpD,IAAA8wC,GAAA,EAyDIC,GAAI,SAAAp3B,GACR,SAAAq3B,EAAAj2B,GACApB,EAAAzc,KAAAP,MAEA,IAAA8M,EAAkBiK,EAAM,GAAGqH,GAM3Bpe,KAAAs0C,OAAA,MAMAt0C,KAAAu0C,YAAA,GAMAv0C,KAAAw0C,oBAEAx0C,KAAAy0C,kBAAAz0C,KAAAy0C,kBAAA7yC,KAAA5B,MAOAA,KAAA00C,YAAuBvM,GAAgBr7B,EAAAy5B,WAAA,aAEvCvmC,KAAA20C,cAAA7nC,GA25BA,OAx5BAkQ,IAAAq3B,EAAA3nC,UAAAsQ,GACAq3B,EAAAryC,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACAqyC,EAAAryC,UAAA+I,YAAAspC,EAMAA,EAAAryC,UAAA2yC,cAAA,SAAA7nC,GAKA,IAAA8nC,EAAA,GACAA,EAAetb,GAAYC,aAAAnsB,IAAAN,EAAAgrB,OAC3BhrB,EAAAgrB,OAAA,KAEA,IAAA+c,EAAAC,GAAAhoC,GAMA9M,KAAA+0C,eAAAF,EAAAvc,cAMAt4B,KAAAg1C,eAAAH,EAAAI,cAMAj1C,KAAAk1C,YAAAL,EAAAM,WAMAn1C,KAAAo1C,aAAAtoC,EAAAmrB,YAMAj4B,KAAAq1C,SAAAR,EAAAS,QAEA,IAAAC,EAAAC,GAAA1oC,GACA2oC,EAAAZ,EAAAa,WACAC,EAAAC,GAAA9oC,GAMA9M,KAAA61C,aAAA,CACA/d,OAAAyd,EACArd,WAAAud,EACA7c,SAAA+c,QAGAvoC,IAAAN,EAAAorB,WACA0c,EAAiBtb,GAAYE,YAAA1sB,EAAAorB,gBACxB9qB,IAAAN,EAAAgpC,OACLlB,EAAiBtb,GAAYE,YAAAx5B,KAAA+1C,oBAC7B/1C,KAAA+0C,eAAAjoC,EAAAgpC,KAAA91C,KAAAq1C,UAEAr1C,KAAAo1C,eACAR,EAAmBtb,GAAYE,YAAe/C,GAC9C3I,OAAA9tB,KAAAg2C,iBAAApB,EAAoDtb,GAAYE,aAChEx5B,KAAAg1C,eAAAh1C,KAAA+0C,kBAGAH,EAAetb,GAAYG,eAAArsB,IAAAN,EAAA8rB,SAAA9rB,EAAA8rB,SAAA,EAC3B54B,KAAAmd,cAAAy3B,GAMA50C,KAAAi2C,SAAAnpC,GAYAunC,EAAAryC,UAAAk0C,mBAAA,SAAAC,GACA,IAAArpC,EAAkBiK,EAAM,GAAG/W,KAAAi2C,UAe3B,YAZA7oC,IAAAN,EAAAorB,WACAprB,EAAAorB,WAAAl4B,KAAAg2C,gBAEAlpC,EAAAgpC,KAAA91C,KAAAo2C,UAIAtpC,EAAAgrB,OAAA93B,KAAAq2C,YAGAvpC,EAAA8rB,SAAA54B,KAAAs2C,cAEWv/B,EAAM,GAAGjK,EAAAqpC,IAoCpB9B,EAAAryC,UAAAu0C,QAAA,SAAAC,GACA,IAGA7jC,EAHAuE,EAAA/J,UAEAspC,EAAAtpC,UAAA9J,OAMA,GAJAozC,EAAA,uBAAAtpC,UAAAspC,EAAA,KACA9jC,EAAAxF,UAAAspC,EAAA,KACAA,IAEAz2C,KAAA02C,QAAA,CAEA,IAAA5gB,EAAA3oB,UAAAspC,EAAA,GAaA,OAZA3gB,EAAAgC,QACA93B,KAAA22C,UAAA7gB,EAAAgC,aAEA1qB,IAAA0oB,EAAAggB,MACA91C,KAAA42C,QAAA9gB,EAAAggB,WAEA1oC,IAAA0oB,EAAA8C,UACA54B,KAAA62C,YAAA/gB,EAAA8C,eAEAjmB,GACAmkC,GAAAnkC,GAAA,IASA,IALA,IAAAusB,EAAA6X,KAAAC,MACAlf,EAAA93B,KAAAq2C,YAAA7vC,QACA0xB,EAAAl4B,KAAAg2C,gBACApd,EAAA54B,KAAAs2C,cACAW,EAAA,GACA72C,EAAA,EAAmBA,EAAAq2C,IAAoBr2C,EAAA,CACvC,IAAA0M,EAAgDoK,EAAA9W,GAEhD82C,EAA2C,CAC3ChY,QACAiY,UAAA,EACArW,OAAAh0B,EAAAg0B,OACAsW,cAAAhqC,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IACAC,OAAAvqC,EAAAuqC,QAAkC7c,IAoBlC,GAjBA1tB,EAAAgrB,SACAof,EAAAI,aAAAxf,EACAof,EAAAK,aAAAzqC,EAAAgrB,OACAA,EAAAof,EAAAK,mBAGAnqC,IAAAN,EAAAgpC,MACAoB,EAAAM,iBAAAtf,EACAgf,EAAAO,iBAAAz3C,KAAA+1C,oBACA/1C,KAAA+0C,eAAAjoC,EAAAgpC,KAAA91C,KAAAq1C,SAAA,GACAnd,EAAAgf,EAAAO,kBACO3qC,EAAAorB,aACPgf,EAAAM,iBAAAtf,EACAgf,EAAAO,iBAAA3qC,EAAAorB,WACAA,EAAAgf,EAAAO,uBAGArqC,IAAAN,EAAA8rB,SAAA,CACAse,EAAAQ,eAAA9e,EACA,IAAAT,EAAoBT,GAAM5qB,EAAA8rB,WAAAl2B,KAAA+0B,GAAA,EAAA/0B,KAAA+0B,IAAA/0B,KAAA+0B,GAC1Byf,EAAAS,eAAA/e,EAAAT,EACAS,EAAAse,EAAAS,eAGAT,EAAAvkC,WAGAilC,GAAAV,GACAA,EAAAC,UAAA,EAGAjY,GAAAgY,EAAAE,SAEAH,EAAAvxC,KAAAwxC,GAEAl3C,KAAAu0C,YAAA7uC,KAAAuxC,GACAj3C,KAAA63C,QAAiB1e,GAAQC,UAAA,GACzBp5B,KAAAy0C,qBAQAJ,EAAAryC,UAAA81C,aAAA,WACA,OAAA93C,KAAAs0C,OAAuBnb,GAAQC,WAAA,GAQ/Bib,EAAAryC,UAAA+1C,eAAA,WACA,OAAA/3C,KAAAs0C,OAAuBnb,GAAQE,aAAA,GAO/Bgb,EAAAryC,UAAAg2C,iBAAA,WACAh4C,KAAA63C,QAAiB1e,GAAQC,WAAAp5B,KAAAs0C,OAAyBnb,GAAQC,YAC1D,QAAAh5B,EAAA,EAAAgX,EAAApX,KAAAu0C,YAAAlxC,OAAiDjD,EAAAgX,IAAQhX,EAAA,CACzD,IAAA62C,EAAAj3C,KAAAu0C,YAAAn0C,GACA62C,EAAA,GAAAtkC,UACAmkC,GAAAG,EAAA,GAAAtkC,UAAA,GAGA3S,KAAAu0C,YAAAlxC,OAAA,GAMAgxC,EAAAryC,UAAAyyC,kBAAA,WAKA,QAJArnC,IAAApN,KAAAw0C,sBACAyD,qBAAAj4C,KAAAw0C,qBACAx0C,KAAAw0C,yBAAApnC,GAEApN,KAAA83C,eAAA,CAKA,IAFA,IAAAd,EAAAD,KAAAC,MACAkB,GAAA,EACA93C,EAAAJ,KAAAu0C,YAAAlxC,OAAA,EAA6CjD,GAAA,IAAQA,EAAA,CAGrD,IAFA,IAAA62C,EAAAj3C,KAAAu0C,YAAAn0C,GACA+3C,GAAA,EACAtwC,EAAA,EAAAwnC,EAAA4H,EAAA5zC,OAAyCwE,EAAAwnC,IAAQxnC,EAAA,CACjD,IAAAqvC,EAAAD,EAAApvC,GACA,IAAAqvC,EAAAC,SAAA,CAGA,IAAAiB,EAAApB,EAAAE,EAAAhY,MACAmZ,EAAAnB,EAAAE,SAAA,EAAAgB,EAAAlB,EAAAE,SAAA,EACAiB,GAAA,GACAnB,EAAAC,UAAA,EACAkB,EAAA,GAEAF,GAAA,EAEA,IAAAG,EAAApB,EAAAG,OAAAgB,GACA,GAAAnB,EAAAI,aAAA,CACA,IAAAhZ,EAAA4Y,EAAAI,aAAA,GACA9Y,EAAA0Y,EAAAI,aAAA,GACA1gB,EAAAsgB,EAAAK,aAAA,GACA1gB,EAAAqgB,EAAAK,aAAA,GACArzB,EAAAoa,EAAAga,GAAA1hB,EAAA0H,GACAla,EAAAoa,EAAA8Z,GAAAzhB,EAAA2H,GACAx+B,KAAAyR,IAAmB6nB,GAAYC,OAAA,CAAArV,EAAAE,IAE/B,GAAA8yB,EAAAM,kBAAAN,EAAAO,iBAAA,CACA,IAAAvf,EAAA,IAAAogB,EACApB,EAAAO,iBACAP,EAAAM,iBAAAc,GAAApB,EAAAO,iBAAAP,EAAAM,kBACAN,EAAApW,QACA9gC,KAAAyR,IAAqB6nB,GAAYC,OACjCv5B,KAAAu4C,oBAAArgB,EAAAgf,EAAApW,SAEA9gC,KAAAyR,IAAmB6nB,GAAYE,WAAAtB,GAE/B,QAAA9qB,IAAA8pC,EAAAQ,qBAAAtqC,IAAA8pC,EAAAS,eAAA,CACA,IAAA/e,EAAA,IAAA0f,EACY5gB,GAAMwf,EAAAS,eAAAj1C,KAAA+0B,GAAA,EAAA/0B,KAAA+0B,IAAA/0B,KAAA+0B,GAClByf,EAAAQ,eAAAY,GAAApB,EAAAS,eAAAT,EAAAQ,gBACAR,EAAApW,QACA9gC,KAAAyR,IAAqB6nB,GAAYC,OACjCv5B,KAAAw4C,sBAAA5f,EAAAse,EAAApW,SAEA9gC,KAAAyR,IAAmB6nB,GAAYG,SAAAb,GAG/B,GADAsf,GAAA,GACAhB,EAAAC,SACA,OAGA,GAAAgB,EAAA,CACAn4C,KAAAu0C,YAAAn0C,GAAA,KACAJ,KAAA63C,QAAqB1e,GAAQC,WAAA,GAC7B,IAAAzmB,EAAAskC,EAAA,GAAAtkC,SACAA,GACAmkC,GAAAnkC,GAAA,IAKA3S,KAAAu0C,YAAAv0C,KAAAu0C,YAAAkE,OAAAC,SACAR,QAAA9qC,IAAApN,KAAAw0C,sBACAx0C,KAAAw0C,oBAAAmE,sBAAA34C,KAAAy0C,sBASAJ,EAAAryC,UAAAw2C,sBAAA,SAAA5f,EAAAkI,GACA,IAAAhJ,EACA8gB,EAAA54C,KAAAq2C,YAMA,YALAjpC,IAAAwrC,IACA9gB,EAAA,CAAA8gB,EAAA,GAAA9X,EAAA,GAAA8X,EAAA,GAAA9X,EAAA,IACMhH,GAAgBhC,EAAAc,EAAA54B,KAAAs2C,eAChB5c,GAAa5B,EAAAgJ,IAEnBhJ,GAQAuc,EAAAryC,UAAAu2C,oBAAA,SAAArgB,EAAA4I,GACA,IAAAhJ,EACA8gB,EAAA54C,KAAAq2C,YACAwC,EAAA74C,KAAAg2C,gBACA,QAAA5oC,IAAAwrC,QAAAxrC,IAAAyrC,EAAA,CACA,IAAA30B,EAAA4c,EAAA,GAAA5I,GAAA4I,EAAA,GAAA8X,EAAA,IAAAC,EACAz0B,EAAA0c,EAAA,GAAA5I,GAAA4I,EAAA,GAAA8X,EAAA,IAAAC,EACA/gB,EAAA,CAAA5T,EAAAE,GAEA,OAAA0T,GAOAuc,EAAAryC,UAAA82C,qBAAA,WACA,IAAA/a,EAAA,UACAzvB,EAAA,2BAAgD2H,EAAMjW,MAAA,KACtD8O,EAAAnB,SAAAY,cAAAD,GACA,GAAAQ,EAAA,CACA,IAAAiqC,EAAAC,iBAAAlqC,GACAivB,EAAA,GAAAkb,SAAAF,EAAAnwB,MAAA,IACAmV,EAAA,GAAAkb,SAAAF,EAAA9zC,OAAA,IAEA,OAAA84B,GASAsW,EAAAryC,UAAAk3C,gBAAA,SAAAphB,GACA,OAAA93B,KAAA61C,aAAA/d,WAWAuc,EAAAryC,UAAA+zC,oBAAA,SAAA7d,EAAAihB,EAAAC,GACA,IAAAjhB,EAAAghB,GAAA,EACAnvB,EAAAovB,GAAA,EACA,OAAAp5C,KAAA61C,aAAA3d,aAAAC,EAAAnO,IAUAqqB,EAAAryC,UAAAq3C,kBAAA,SAAAzgB,EAAAugB,GACA,IAAAhhB,EAAAghB,GAAA,EACA,OAAAn5C,KAAA61C,aAAAjd,WAAAT,IASAkc,EAAAryC,UAAAq0C,UAAA,WACA,OACgEr2C,KAAAiB,IAAcq4B,GAAYC,SAO1F8a,EAAAryC,UAAAs3C,eAAA,WACA,OAAAt5C,KAAA61C,cAOAxB,EAAAryC,UAAAu3C,SAAA,SAAAC,GACA,YAAApsC,IAAAosC,GACAA,EAAA,GAAAx5C,KAAAs0C,OAAA,GACAkF,EAAA,GAAAx5C,KAAAs0C,OAAA,GACAkF,GAEAx5C,KAAAs0C,OAAA9tC,SAcA6tC,EAAAryC,UAAAy3C,gBAAA,SAAAC,GACA,IAAA3b,EAAA2b,GAAA15C,KAAA84C,uBACAhhB,EAAkE93B,KAAAq2C,YAC9DrjB,GAAM8E,EAAA,GACV,IAAAI,EAAwCl4B,KAAAg2C,gBACpChjB,QAAM5lB,IAAA8qB,EAAA,GACV,IAAAU,EAAsC54B,KAAAs2C,cAGtC,OAFItjB,QAAM5lB,IAAAwrB,EAAA,GAECkF,GAAiBhG,EAAAI,EAAAU,EAAAmF,IAQ5BsW,EAAAryC,UAAA23C,iBAAA,WACA,OAAA35C,KAAA+0C,gBAQAV,EAAAryC,UAAA43C,iBAAA,WACA,OAAA55C,KAAAg1C,gBAQAX,EAAAryC,UAAA63C,WAAA,WACA,OAA6B75C,KAAA85C,qBAAA95C,KAAAg1C,iBAQ7BX,EAAAryC,UAAA+3C,WAAA,SAAAjE,GACA91C,KAAA20C,cAAA30C,KAAAk2C,mBAAA,CAAgD8D,QAAAlE,MAQhDzB,EAAAryC,UAAAi4C,WAAA,WACA,OAA6Bj6C,KAAA85C,qBAAA95C,KAAA+0C,iBAQ7BV,EAAAryC,UAAAk4C,WAAA,SAAApE,GACA91C,KAAA20C,cAAA30C,KAAAk2C,mBAAA,CAAgDZ,QAAAQ,MAQhDzB,EAAAryC,UAAAm4C,cAAA,WACA,OAAAn6C,KAAA00C,aASAL,EAAAryC,UAAAg0C,cAAA,WACA,OAAuCh2C,KAAAiB,IAAcq4B,GAAYE,aASjE6a,EAAAryC,UAAAo4C,eAAA,WACA,OAAAp6C,KAAAo1C,cAWAf,EAAAryC,UAAAq4C,uBAAA,SAAAxiB,EAAA6hB,GACA,IAAA3b,EAAA2b,GAAA15C,KAAA84C,uBACAwB,EAAsB7c,GAAQ5F,GAAAkG,EAAA,GAC9Bwc,EAAsB7c,GAAS7F,GAAAkG,EAAA,GAC/B,OAAAr7B,KAAAC,IAAA23C,EAAAC,IASAlG,EAAAryC,UAAAw4C,8BAAA,SAAAC,GACA,IAAAriB,EAAAqiB,GAAA,EACAniB,EAAAt4B,KAAA+0C,eACAE,EAAAj1C,KAAAg1C,eACAryC,EAAAD,KAAAiF,IAAA2wB,EAAA2c,GAAAvyC,KAAAiF,IAAAywB,GACA,gBAKA/2B,GACA,IAAA62B,EAAAI,EAAA51B,KAAAkF,IAAAwwB,EAAA/2B,EAAAsB,GACA,OAAAu1B,IAUAmc,EAAAryC,UAAAs0C,YAAA,WACA,OAA6Bt2C,KAAAiB,IAAcq4B,GAAYG,WASvD4a,EAAAryC,UAAA04C,8BAAA,SAAAD,GACA,IAAAriB,EAAAqiB,GAAA,EACAniB,EAAAt4B,KAAA+0C,eACAE,EAAAj1C,KAAAg1C,eACAryC,EAAAD,KAAAiF,IAAA2wB,EAAA2c,GAAAvyC,KAAAiF,IAAAywB,GACA,gBAKAF,GACA,IAAA72B,EAAAqB,KAAAiF,IAAA2wB,EAAAJ,GAAAx1B,KAAAiF,IAAAywB,GAAAz1B,EACA,OAAAtB,IAQAgzC,EAAAryC,UAAA+zB,SAAA,SAAA4kB,GACA,IAAA7iB,EAAiE93B,KAAAq2C,YACjE9P,EAAAvmC,KAAAm6C,gBACAjiB,EAAuCl4B,KAAAg2C,gBACvC4E,EAAA1iB,EAAAyiB,EACA/hB,EAAA54B,KAAAs2C,cACA,OAEAxe,OAAA,CACAp1B,KAAA2tC,MAAAvY,EAAA,GAAA8iB,KACAl4C,KAAA2tC,MAAAvY,EAAA,GAAA8iB,MAEArU,gBAAAn5B,IAAAm5B,IAAA,KACArO,aACAU,WACAkd,KAAA91C,KAAAo2C,YAYA/B,EAAAryC,UAAAo0C,QAAA,WACA,IAAAN,EACA5d,EAAAl4B,KAAAg2C,gBAIA,YAHA5oC,IAAA8qB,IACA4d,EAAA91C,KAAA85C,qBAAA5hB,IAEA4d,GASAzB,EAAAryC,UAAA83C,qBAAA,SAAA5hB,GACA,IACAv1B,EAAAwyC,EADA3c,EAAAx4B,KAAAq1C,UAAA,EAEA,GAAAr1C,KAAAo1C,aAAA,CACA,IAAAyF,EAAoB9wB,GAAiB/pB,KAAAo1C,aAAAld,EAAA,GACrCM,EAAAqiB,EACAl4C,EAAA3C,KAAAo1C,aAAAyF,GAEA1F,EADA0F,GAAA76C,KAAAo1C,aAAA/xC,OAAA,EACA,EAEAV,EAAA3C,KAAAo1C,aAAAyF,EAAA,QAGAl4C,EAAA3C,KAAA+0C,eACAI,EAAAn1C,KAAAk1C,YAEA,OAAA1c,EAAA91B,KAAAiF,IAAAhF,EAAAu1B,GAAAx1B,KAAAiF,IAAAwtC,IASAd,EAAAryC,UAAA84C,qBAAA,SAAAhF,GACA,OAA6B91C,KAAA+1C,oBAC7B/1C,KAAA+0C,eAAAe,EAAA91C,KAAAq1C,SAAA,IAaAhB,EAAAryC,UAAA+4C,IAAA,SAAAC,EAAA58B,GACA,IAMA68B,EANAnuC,EAAAsR,GAAA,GACA2f,EAAAjxB,EAAAixB,KACAA,IACAA,EAAA/9B,KAAA84C,wBAII9lB,GAAMnf,MAAA6I,QAAAs+B,IAAwD,sBAAAnP,sBAClE,IACAh4B,MAAA6I,QAAAs+B,IACMhoB,IAAQwK,GAAOwd,GACrB,IACAC,EAAiB/G,GAAiB8G,IAC7BA,EAAAjP,YAAyCrM,GAAYS,QAC1D6a,IAAAtX,YACAuX,EAAiB/G,GAAiB8G,GAClCC,EAAAxP,OAAAzrC,KAAAs2C,cAA0C3Y,GAASqd,KAEnDC,EAAAD,EAGA,IAIA/F,EAJA7kC,OAAAhD,IAAAN,EAAAsD,QAAAtD,EAAAsD,QAAA,UACA2lC,OAAA3oC,IAAAN,EAAAipC,qBACAjpC,EAAAipC,oBACA8E,OAAAztC,IAAAN,EAAA+tC,SAAA/tC,EAAA+tC,QAGA5F,OADA7nC,IAAAN,EAAAmoC,cACAnoC,EAAAmoC,mBACK7nC,IAAAN,EAAAktC,QACLh6C,KAAA+1C,oBACA/1C,KAAA+0C,eAAAjoC,EAAAktC,QAAAh6C,KAAAq1C,SAAA,GAEA,EAaA,IAXA,IAAA6F,EAAAD,EAAAnO,qBAGAlU,EAAA54B,KAAAs2C,cACAtc,EAAAt3B,KAAAu3B,KAAArB,GACAsB,EAAAx3B,KAAAy3B,KAAAvB,GACAuiB,EAAAp3C,IACAq3C,EAAAr3C,IACAs3C,GAAAt3C,IACAu3C,GAAAv3C,IACA64B,EAAAqe,EAAA7N,YACAhtC,EAAA,EAAAgX,EAAA8jC,EAAA73C,OAAuCjD,EAAAgX,EAAQhX,GAAAw8B,EAAA,CAC/C,IAAA2e,EAAAL,EAAA96C,GAAA45B,EAAAkhB,EAAA96C,EAAA,GAAA85B,EACAshB,EAAAN,EAAA96C,GAAA85B,EAAAghB,EAAA96C,EAAA,GAAA45B,EACAmhB,EAAAz4C,KAAA8B,IAAA22C,EAAAI,GACAH,EAAA14C,KAAA8B,IAAA42C,EAAAI,GACAH,EAAA34C,KAAAC,IAAA04C,EAAAE,GACAD,EAAA54C,KAAAC,IAAA24C,EAAAE,GAIA,IAAAtjB,EAAAl4B,KAAAq6C,uBACA,CAAAc,EAAAC,EAAAC,EAAAC,GACA,CAAAvd,EAAA,GAAA3tB,EAAA,GAAAA,EAAA,GAAA2tB,EAAA,GAAA3tB,EAAA,GAAAA,EAAA,KAGA,GAFA8nB,EAAA6Z,MAAA7Z,GAAA+c,EACAvyC,KAAAC,IAAAu1B,EAAA+c,GACAc,EAAA,CACA,IAAA0F,EAAAz7C,KAAA+1C,oBAAA7d,EAAA,MACA2iB,GAAAY,EAAAvjB,IACAujB,EAAAz7C,KAAA+1C,oBACA0F,GAAA,MAEAvjB,EAAAujB,EAIAvhB,KACA,IAAAwhB,GAAAP,EAAAE,GAAA,EACAM,GAAAP,EAAAE,GAAA,EACAI,IAAAtrC,EAAA,GAAAA,EAAA,MAAA8nB,EACAyjB,IAAAvrC,EAAA,GAAAA,EAAA,MAAA8nB,EACA,IAAA0jB,EAAAF,EAAA1hB,EAAA2hB,EAAAzhB,EACA2hB,EAAAF,EAAA3hB,EAAA0hB,EAAAxhB,EACApC,EAAA,CAAA8jB,EAAAC,GACAlpC,EAAA7F,EAAA6F,SAAA7F,EAAA6F,SAAyD8G,OAEzDrM,IAAAN,EAAAsqC,SACAp3C,KAAAu2C,QAAA,CACAre,aACAJ,SACAsf,SAAAtqC,EAAAsqC,SACAC,OAAAvqC,EAAAuqC,QACO1kC,IAEP3S,KAAA87C,cAAA5jB,GACAl4B,KAAA22C,UAAA7e,GACAgf,GAAAnkC,GAAA,KAWA0hC,EAAAryC,UAAA+5C,SAAA,SAAAh8B,EAAAge,EAAA1tB,GAEA,IAAAuoB,EAAA54B,KAAAs2C,cACAtc,EAAAt3B,KAAAu3B,KAAArB,GACAsB,EAAAx3B,KAAAy3B,KAAAvB,GACA2iB,EAAAx7B,EAAA,GAAAia,EAAAja,EAAA,GAAAma,EACAshB,EAAAz7B,EAAA,GAAAia,EAAAja,EAAA,GAAAma,EACAhC,EAAAl4B,KAAAg2C,gBACAuF,IAAAxd,EAAA,KAAA1tB,EAAA,IAAA6nB,EACAsjB,IAAAnrC,EAAA,GAAA0tB,EAAA,MAAA7F,EAGAgC,KACA,IAAA0hB,EAAAL,EAAAvhB,EAAAwhB,EAAAthB,EACA2hB,EAAAL,EAAAxhB,EAAAuhB,EAAArhB,EAEAl6B,KAAA22C,UAAA,CAAAiF,EAAAC,KAMAxH,EAAAryC,UAAA00C,MAAA,WACA,QAAA12C,KAAAq2C,kBAAAjpC,IAAApN,KAAAg2C,iBASA3B,EAAAryC,UAAAypC,OAAA,SAAA7S,EAAA+S,GACA,QAAAv+B,IAAAu+B,EAAA,CACA,IAAA7T,EAAA93B,KAAAw4C,sBAAA5f,EAAA+S,GACA3rC,KAAA22C,UAAA7e,GAEA93B,KAAA62C,YAAAje,IASAyb,EAAAryC,UAAA20C,UAAA,SAAA7e,GACA93B,KAAAyR,IAAa6nB,GAAYC,OAAAzB,GACzB93B,KAAA83C,gBACA93C,KAAAg4C,oBASA3D,EAAAryC,UAAA61C,QAAA,SAAAmE,EAAA7jB,GAGA,OAFAn4B,KAAAs0C,OAAA0H,IAAA7jB,EACAn4B,KAAAwc,UACAxc,KAAAs0C,OAAA0H,IASA3H,EAAAryC,UAAA85C,cAAA,SAAA5jB,GACAl4B,KAAAyR,IAAa6nB,GAAYE,WAAAtB,GACzBl4B,KAAA83C,gBACA93C,KAAAg4C,oBAUA3D,EAAAryC,UAAA60C,YAAA,SAAAje,GACA54B,KAAAyR,IAAa6nB,GAAYG,SAAAb,GACzB54B,KAAA83C,gBACA93C,KAAAg4C,oBASA3D,EAAAryC,UAAA40C,QAAA,SAAAd,GACA91C,KAAA87C,cAAA97C,KAAA86C,qBAAAhF,KAGAzB,EA57BQ,CA67BNz2B,GAOF,SAAAk5B,GAAAnkC,EAAAspC,GACAjvB,WAAA,WACAra,EAAAspC,IACG,GAQI,SAAAzG,GAAA1oC,GACP,YAAAM,IAAAN,EAAA+qB,OACWD,GAAY9qB,EAAA+qB,QAEZE,GAUJ,SAAA+c,GAAAhoC,GACP,IAAA2oC,EACAnd,EACA2c,EAIAiH,EAAA,GACAC,EAAA,EAEA7G,OAAAloC,IAAAN,EAAAwoC,QACAxoC,EAAAwoC,QAAAnB,GAEA6F,OAAA5sC,IAAAN,EAAAktC,QACAltC,EAAAktC,QAAAkC,EAEA/G,OAAA/nC,IAAAN,EAAAqoC,WACAroC,EAAAqoC,WAAAgH,EAEA,QAAA/uC,IAAAN,EAAAmrB,YAAA,CACA,IAAAA,EAAAnrB,EAAAmrB,YACAK,EAAAL,EAAAqd,GACAL,OAAA7nC,IAAA6qB,EAAA+hB,GACA/hB,EAAA+hB,GAAA/hB,IAAA50B,OAAA,GACAoyC,EAA2Bzd,GAC3BC,OACG,CAEH,IAAAsO,EAAqB4B,GAAgBr7B,EAAAy5B,WAAA,aACrC1O,EAAA0O,EAAA7C,YACA3F,EAAAlG,EAIAn1B,KAAAC,IAAe86B,GAAQ5F,GAAU6F,GAAS7F,IAF1C,IAAY0K,GAAgBC,GAAKP,SACjCsE,EAAA3C,mBAGAwY,EAAAre,EAAsCvH,GAAiB9zB,KAAAkF,IACvDu0C,EAAAhI,IAEAkI,EAAAD,EAAA15C,KAAAkF,IACAu0C,EAAAD,EAAA/H,IAGA7b,EAAAxrB,EAAAwrB,mBACAlrB,IAAAkrB,EACAgd,EAAA,EAEAhd,EAAA8jB,EAAA15C,KAAAkF,IAAAutC,EAAAG,GAIAL,EAAAnoC,EAAAmoC,mBACA7nC,IAAA6nC,IAGAA,OAFA7nC,IAAAN,EAAAktC,aACA5sC,IAAAN,EAAAwrB,cACAA,EAAA51B,KAAAkF,IAAAutC,EAAA6E,GAEAoC,EAAA15C,KAAAkF,IAAAutC,EAAA6E,GAGAqC,GAKArC,EAAA1E,EAAA5yC,KAAA8H,MACA9H,KAAAiF,IAAA2wB,EAAA2c,GAAAvyC,KAAAiF,IAAAwtC,IACAF,EAAA3c,EAAA51B,KAAAkF,IAAAutC,EAAA6E,EAAA1E,GAEAG,EAA2Bpd,GAC3B8c,EAAA7c,EAAA0hB,EAAA1E,GAEA,OAAUI,WAAAD,EAAAnd,gBACV2c,gBAAAK,UAAAH,cAQO,SAAAS,GAAA9oC,GACP,IAAAwvC,OAAAlvC,IAAAN,EAAAwvC,gBACAxvC,EAAAwvC,eACA,GAAAA,EAAA,CACA,IAAAjD,EAAAvsC,EAAAusC,kBACA,YAAAjsC,IAAAisC,IAAA,IAAAA,EACargB,MACR,IAAAqgB,EACQxgB,GACR,kBAAAwgB,EACQvgB,GAAaugB,GAEbxgB,GAGb,OAAWF,GAUJ,SAAAif,GAAAV,GACP,QAAAA,EAAAI,cAAAJ,EAAAK,eACS5d,GAAgBud,EAAAI,aAAAJ,EAAAK,iBAIzBL,EAAAM,mBAAAN,EAAAO,kBAGAP,EAAAQ,iBAAAR,EAAAS,gBAMe,IAAA4E,GAAA,GC9yCR,SAAAC,GAAAC,EAAAC,GACP,IAAAC,EAA4ChvC,SAAAqC,cAAA,UAO5C,OANAysC,IACAE,EAAA/zB,MAAA6zB,GAEAC,IACAC,EAAA13C,OAAAy3C,GAE6CC,EAAA57B,WAAA,MAuCtC,SAAA67B,GAAA3zC,EAAA4zC,GACP,IAAAh2C,EAAAg2C,EAAA7nC,WACAnO,GACAA,EAAAi2C,aAAA7zC,EAAA4zC,GAQO,SAAAE,GAAAx5C,GACP,OAAAA,KAAAyR,WAAAzR,EAAAyR,WAAAjE,YAAAxN,GAAA,KAMO,SAAAy5C,GAAAz5C,GACP,MAAAA,EAAA05C,UACA15C,EAAAwN,YAAAxN,EAAA05C,WCvEe,IAAAC,GAAA,CACfC,QAAA,UACAC,QAAA,UACAxY,OAAA,SACAyY,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAC,OAAA,UCuBIC,GAAS,SAAAzgC,GACb,SAAA0gC,EAAA5wC,GAEAkQ,EAAAzc,KAAAP,MAKA,IAAA40C,EAAqB79B,EAAM,GAAGjK,GAC9B8nC,EAAesI,GAAaC,cAC5B/vC,IAAAN,EAAA6wC,QAAA7wC,EAAA6wC,QAAA,EACA/I,EAAesI,GAAaE,cAC5BhwC,IAAAN,EAAA8wC,SAAA9wC,EAAA8wC,QACAhJ,EAAesI,GAAaG,SAAAvwC,EAAA+wC,OAC5BjJ,EAAesI,GAAaI,qBAC5BlwC,IAAAN,EAAAwrB,cAAAxrB,EAAAwrB,cAAAv0B,IACA6wC,EAAesI,GAAaK,qBAC5BnwC,IAAAN,EAAAmoC,cAAAnoC,EAAAmoC,cAAA,EAEAj1C,KAAAmd,cAAAy3B,GAMA50C,KAAA89C,OAAA,KAOA99C,KAAAuT,KA+LA,OA3LAyJ,IAAA0gC,EAAAhxC,UAAAsQ,GACA0gC,EAAA17C,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACA07C,EAAA17C,UAAA+I,YAAA2yC,EAMAA,EAAA17C,UAAA+pC,QAAA,WACA,OAAA/rC,KAAAuT,MAMAmqC,EAAA17C,UAAA+7C,cAAA,WAEA,IAAAjoB,EAAA91B,KAAA89C,QAA4C,CAC5CE,MAAAh+C,KACAi+C,SAAA,GAWA,OATAnoB,EAAA6nB,QAAoBlnB,GAAKz2B,KAAAk+C,aAAA,KACzBpoB,EAAAqoB,YAAAn+C,KAAAo+C,iBACAtoB,EAAA8nB,QAAA59C,KAAAq+C,aACAvoB,EAAA+B,OAAA73B,KAAA0jC,YACA5N,EAAA+nB,OAAA79C,KAAAs+C,aAAA,EACAxoB,EAAAwC,cAAAt4B,KAAA25C,mBACA7jB,EAAAmf,cAAAvyC,KAAAC,IAAA3C,KAAA45C,mBAAA,GACA55C,KAAA89C,OAAAhoB,EAEAA,GASA4nB,EAAA17C,UAAAu8C,eAAA,SAAApgC,GACA,OAAWpI,KASX2nC,EAAA17C,UAAAw8C,oBAAA,SAAAC,GACA,OAAW1oC,KAUX2nC,EAAA17C,UAAA0hC,UAAA,WACA,OACyD1jC,KAAAiB,IAAci8C,GAAatY,SAUpF8Y,EAAA17C,UAAA23C,iBAAA,WACA,OAA6B35C,KAAAiB,IAAci8C,GAAaI,iBASxDI,EAAA17C,UAAA43C,iBAAA,WACA,OAA6B55C,KAAAiB,IAAci8C,GAAaK,iBASxDG,EAAA17C,UAAAk8C,WAAA,WACA,OAA6Bl+C,KAAAiB,IAAci8C,GAAaC,UAOxDO,EAAA17C,UAAAo8C,eAAA,WACA,OAAWroC,KASX2nC,EAAA17C,UAAAq8C,WAAA,WACA,OAA8Br+C,KAAAiB,IAAci8C,GAAaE,UAUzDM,EAAA17C,UAAAs8C,UAAA,WACA,OAA6Bt+C,KAAAiB,IAAci8C,GAAaG,UAUxDK,EAAA17C,UAAAoiC,UAAA,SAAAvM,GACA73B,KAAAyR,IAAayrC,GAAatY,OAAA/M,IAS1B6lB,EAAA17C,UAAA08C,iBAAA,SAAApmB,GACAt4B,KAAAyR,IAAayrC,GAAaI,eAAAhlB,IAS1BolB,EAAA17C,UAAA28C,iBAAA,SAAA1J,GACAj1C,KAAAyR,IAAayrC,GAAaK,eAAAtI,IAS1ByI,EAAA17C,UAAA48C,WAAA,SAAAjB,GACA39C,KAAAyR,IAAayrC,GAAaC,QAAAQ,IAS1BD,EAAA17C,UAAA68C,WAAA,SAAAjB,GACA59C,KAAAyR,IAAayrC,GAAaE,QAAAQ,IAU1BF,EAAA17C,UAAA88C,UAAA,SAAAC,GACA/+C,KAAAyR,IAAayrC,GAAaG,QAAA0B,IAG1BrB,EA/Na,CAgOX9/B,GAGaohC,GAAA,GChQAC,GAAA,CACfC,UAAA,YACAtsB,QAAA,UACAusB,MAAA,QACA9jC,MAAA,SC2BI+jC,GAAQ,CACZC,OAAA,UAYIC,GAAU,SAAA5B,GACd,SAAA6B,EAAAnhC,GAEA,IAAAtR,EAAAsR,GAAA,GACAohC,EAA8CzoC,EAAM,GAAGjK,UACvD0yC,EAAAC,OAEA,IAAAA,EAAA3yC,EAAA2yC,OAEA/B,EAAAn9C,KAAAP,KAAAw/C,GAMAx/C,KAAA0/C,oBAAA,GAMA1/C,KAAA2/C,cAAA,GAEIrsC,EAAMtT,KACJwd,EAAmB4hC,GAAQC,QACjCr/C,KAAA4/C,qBAAA5/C,MAEAy/C,EACA5rC,MAAA6I,QAAA+iC,GACAA,EAAA,IAAqBrgC,EAAUqgC,EAAAj5C,QAAA,CAAkB8X,QAAA,IAEzC0U,GAA2B,sBAAAnU,SACnC,IAGA4gC,EAAA,IAAmBrgC,OAAUhS,EAAA,CAAakR,QAAA,IAG1Cte,KAAA6/C,UAAAJ,GAmJA,OA/IA/B,IAAA6B,EAAA7yC,UAAAgxC,GACA6B,EAAAv9C,UAAAlB,OAAAY,OAAAg8C,KAAA17C,WACAu9C,EAAAv9C,UAAA+I,YAAAw0C,EAKAA,EAAAv9C,UAAA89C,mBAAA,WACA9/C,KAAAwc,WAMA+iC,EAAAv9C,UAAA49C,qBAAA,WACA5/C,KAAA0/C,oBAAA9wC,QAAqCoJ,GACrChY,KAAA0/C,oBAAAr8C,OAAA,EAEA,IAAAo8C,EAAAz/C,KAAA+/C,YAMA,QAAAC,KALAhgD,KAAA0/C,oBAAAh6C,KACM4N,EAAMmsC,EAAS/oC,EAAmBC,IAAA3W,KAAAigD,iBAAAjgD,MAClCsT,EAAMmsC,EAAS/oC,EAAmBE,OAAA5W,KAAAkgD,oBAAAlgD,OAGxCA,KAAA2/C,cACA3/C,KAAA2/C,cAAAK,GAAApxC,QAAqCoJ,GAEjCV,EAAKtX,KAAA2/C,eAGT,IADA,IAAAQ,EAAAV,EAAA5gC,WACAze,EAAA,EAAAgX,EAAA+oC,EAAA98C,OAA4CjD,EAAAgX,EAAQhX,IAAA,CACpD,IAAA49C,EAAAmC,EAAA//C,GACAJ,KAAA2/C,cAAyB1pC,EAAM+nC,IAAA,CACvB1qC,EAAM0qC,EAAQnnC,EAAeC,eAAA9W,KAAA8/C,mBAAA9/C,MAC7BsT,EAAM0qC,EAAQpjC,EAASC,OAAA7a,KAAA8/C,mBAAA9/C,OAI/BA,KAAAwc,WAOA+iC,EAAAv9C,UAAAi+C,iBAAA,SAAAG,GACA,IAAApC,EAAuDoC,EAAA,QACvDpgD,KAAA2/C,cAAuB1pC,EAAM+nC,IAAA,CACvB1qC,EAAM0qC,EAAQnnC,EAAeC,eAAA9W,KAAA8/C,mBAAA9/C,MAC7BsT,EAAM0qC,EAAQpjC,EAASC,OAAA7a,KAAA8/C,mBAAA9/C,OAE7BA,KAAAwc,WAOA+iC,EAAAv9C,UAAAk+C,oBAAA,SAAAE,GACA,IAAApC,EAAuDoC,EAAA,QACvDz+C,EAAcsU,EAAM+nC,GACpBh+C,KAAA2/C,cAAAh+C,GAAAiN,QAAoCoJ,UACpChY,KAAA2/C,cAAAh+C,GACA3B,KAAAwc,WAWA+iC,EAAAv9C,UAAA+9C,UAAA,WACA,OACkF//C,KAAAiB,IAAcm+C,GAAQC,SAYxGE,EAAAv9C,UAAA69C,UAAA,SAAAJ,GACAz/C,KAAAyR,IAAa2tC,GAAQC,OAAAI,IAMrBF,EAAAv9C,UAAAu8C,eAAA,SAAApgC,GACA,IAAAS,OAAAxR,IAAA+Q,IAAA,GAIA,OAHAne,KAAA+/C,YAAAnxC,QAAA,SAAAovC,GACAA,EAAAO,eAAA3/B,KAEAA,GAMA2gC,EAAAv9C,UAAAw8C,oBAAA,SAAAC,GACA,IAAA4B,OAAAjzC,IAAAqxC,IAAA,GAEA6B,EAAAD,EAAAh9C,OAEArD,KAAA+/C,YAAAnxC,QAAA,SAAAovC,GACAA,EAAAQ,oBAAA6B,KAIA,IADA,IAAAE,EAAAvgD,KAAA+9C,gBACA39C,EAAAkgD,EAAAlpC,EAAAipC,EAAAh9C,OAAyCjD,EAAAgX,EAAQhX,IAAA,CACjD,IAAAogD,EAAAH,EAAAjgD,GACAogD,EAAA7C,SAAA4C,EAAA5C,QACA6C,EAAA5C,QAAA4C,EAAA5C,SAAA2C,EAAA3C,QACA4C,EAAAloB,cAAA51B,KAAA8B,IACAg8C,EAAAloB,cAAAioB,EAAAjoB,eACAkoB,EAAAvL,cAAAvyC,KAAAC,IACA69C,EAAAvL,cAAAsL,EAAAtL,oBACA7nC,IAAAmzC,EAAA1oB,cACAzqB,IAAAozC,EAAA3oB,OACA2oB,EAAA3oB,OAA8B6G,GAAe8hB,EAAA3oB,OAAA0oB,EAAA1oB,QAE7C2oB,EAAA3oB,OAAA0oB,EAAA1oB,QAKA,OAAAwoB,GAMAd,EAAAv9C,UAAAo8C,eAAA,WACA,OAAWa,GAAWE,OAGtBI,EAzLc,CA0LZP,IAGayB,GAAA,GC/MR,SAAAC,GAAA3iB,GACP,OAAAA,EAAA,MAAAA,EAAA,KAWO,SAAS4iB,GAAK5iB,EAAA6iB,EAAAlH,GAMrB,YALAtsC,IAAAssC,IACAA,EAAA,OAEAA,EAAA,GAAA3b,EAAA,GAAA6iB,EAAA,KACAlH,EAAA,GAAA3b,EAAA,GAAA6iB,EAAA,KACAlH,EAaO,SAAAmH,GAAA9iB,EAAA2b,GACP,OAAA7lC,MAAA6I,QAAAqhB,GACAA,QAEA3wB,IAAAssC,EACAA,EAAA,CAAA3b,KAEA2b,EAAA,GAAAA,EAAA,GAAoD,EAEpDA,GCmEA,IAAIoH,GAAY,SAAA9jC,GAChB,SAAA+jC,EAAAj0C,GAEAkQ,EAAAzc,KAAAP,MAEA,IAAAghD,EAAAC,GAAAn0C,GAMA9M,KAAAkhD,sBAAA9zC,IAAAN,EAAAq0C,gBAAAr0C,EAAAq0C,gBAAA,GAMAnhD,KAAAohD,8BACAh0C,IAAAN,EAAAu0C,yBACAv0C,EAAAu0C,wBAMArhD,KAAAshD,gCACAl0C,IAAAN,EAAAy0C,2BACAz0C,EAAAy0C,0BAMAvhD,KAAAwhD,iBAAAp0C,IAAAN,EAAA6tC,WACA7tC,EAAA6tC,WAA2Bh6B,GAM3B3gB,KAAAyhD,mBAKAzhD,KAAA0hD,gBAAA,WACA1hD,KAAAyhD,wBAAAr0C,EACApN,KAAA2hD,aAAAphD,KAAAP,KAAA+2C,KAAAC,QACKp1C,KAAA5B,MAMLA,KAAA4hD,4BAAuClgD,KAMvC1B,KAAA6hD,4BAAuCngD,KAMvC1B,KAAA8hD,YAAA,EAMA9hD,KAAA+hD,YAAA,KAOA/hD,KAAAgiD,gBAAA,KAMAhiD,KAAAiiD,yBAAA,KAMAjiD,KAAAkiD,uBAAA,KAMAliD,KAAAmiD,gCAAA,KAMAniD,KAAAoiD,UAAAz0C,SAAAqC,cAAA,OACAhQ,KAAAoiD,UAAAC,UAAA,eAAgDphC,GAAK,gBACrDjhB,KAAAoiD,UAAAnyC,MAAAI,SAAA,WACArQ,KAAAoiD,UAAAnyC,MAAAqyC,SAAA,SACAtiD,KAAAoiD,UAAAnyC,MAAA2Y,MAAA,OACA5oB,KAAAoiD,UAAAnyC,MAAAhL,OAAA,OAEAjF,KAAAoiD,UAAAnyC,MAAAsyC,cAAA,OACAviD,KAAAoiD,UAAAnyC,MAAAuyC,YAAA,OAMAxiD,KAAAyiD,kBAAA90C,SAAAqC,cAAA,OACAhQ,KAAAyiD,kBAAAJ,UAAA,sBACAriD,KAAAoiD,UAAAxxC,YAAA5Q,KAAAyiD,mBAMAziD,KAAA0iD,2BAAA/0C,SAAAqC,cAAA,OACAhQ,KAAA0iD,2BAAAL,UAAA,gCAWA,IAVA,IAAAM,EAAA,CACM/nC,EAASI,MACTJ,EAASK,SACTL,EAASa,UACTb,EAASoB,WACTpB,EAASkB,cACTsF,GAAmBI,YACnB5G,EAASiB,WACTjB,EAASuB,OAEf/b,EAAA,EAAAgX,EAAAurC,EAAAt/C,OAA8CjD,EAAAgX,IAAQhX,EAChDkT,EAAMtT,KAAA0iD,2BAAAC,EAAAviD,GAAoDwZ,GAShE,QAAAjY,KAPA3B,KAAAoiD,UAAAxxC,YAAA5Q,KAAA0iD,4BAMA1iD,KAAA4iD,wBAAA,IAAuCjxB,GAAsB3xB,KAAA8M,EAAAsjB,eACzChP,GACd9N,EAAMtT,KAAA4iD,wBAA+BxhC,GAAmBzf,GAC9D3B,KAAA6iD,sBAAA7iD,MAOAA,KAAA8iD,qBAAA9B,EAAA+B,oBAMA/iD,KAAAgjD,gBAAA,KAEI1vC,EAAMtT,KAAAoiD,UAAiBxnC,EAASG,YAAA/a,KAAAijD,mBAAAjjD,MAChCsT,EAAMtT,KAAAoiD,UAAiBxnC,EAASuB,MAAAnc,KAAAijD,mBAAAjjD,MAChCsT,EAAMtT,KAAAoiD,UAAiBxnC,EAASiB,WAAA7b,KAAAijD,mBAAAjjD,MAMpCA,KAAAkjD,SAAAlC,EAAAkC,UAAA,IAAoD9jC,EAMpDpf,KAAAmjD,aAAAnC,EAAAmC,cAAA,IAA4D/jC,EAM5Dpf,KAAAojD,UAAApC,EAAAqC,SAOArjD,KAAAsjD,gBAAA,GAMAtjD,KAAAujD,UAAAvjD,KAAAwjD,iBAMAxjD,KAAAyjD,cAMAzjD,KAAA0jD,OAAA,KAMA1jD,KAAA2jD,qBAAA,GAMA3jD,KAAA4jD,WAAA,IAA0BttB,GAC1Bt2B,KAAA6jD,gBAAAjiD,KAAA5B,MACAA,KAAA8jD,kBAAAliD,KAAA5B,OAOAA,KAAA+jD,oBAAA,GAEIzwC,EACJtT,KAAYwd,EAAmBwU,GAAWC,YAC1CjyB,KAAAgkD,yBAAAhkD,MACIsT,EAAMtT,KAAOwd,EAAmBwU,GAAWI,MAC/CpyB,KAAAikD,mBAAAjkD,MACIsT,EAAMtT,KAAOwd,EAAmBwU,GAAWE,MAC/ClyB,KAAAkkD,mBAAAlkD,MACIsT,EAAMtT,KAAOwd,EAAmBwU,GAAWG,QAC/CnyB,KAAAmkD,qBAAAnkD,MAIAA,KAAAmd,cAAA6jC,EAAAxpC,QAEAxX,KAAAkjD,SAAAt0C,QAKA,SAAAw1C,GACAA,EAAAC,OAAArkD,OACO4B,KAAA5B,OAEHsT,EAAMtT,KAAAkjD,SAAgBxsC,EAAmBC,IAI7C,SAAA2D,GACAA,EAAAxL,QAAAu1C,OAAArkD,OACOA,MAEHsT,EAAMtT,KAAAkjD,SAAgBxsC,EAAmBE,OAI7C,SAAA0D,GACAA,EAAAxL,QAAAu1C,OAAA,OACOrkD,MAEPA,KAAAmjD,aAAAv0C,QAKA,SAAA01C,GACAA,EAAAD,OAAArkD,OACO4B,KAAA5B,OAEHsT,EAAMtT,KAAAmjD,aAAoBzsC,EAAmBC,IAIjD,SAAA2D,GACAA,EAAAxL,QAAAu1C,OAAArkD,OACOA,MAEHsT,EAAMtT,KAAAmjD,aAAoBzsC,EAAmBE,OAIjD,SAAA0D,GACAA,EAAAxL,QAAAu1C,OAAA,OACOrkD,MAEPA,KAAAojD,UAAAx0C,QAAA5O,KAAAukD,oBAAA3iD,KAAA5B,OAEIsT,EAAMtT,KAAAojD,UAAiB1sC,EAAmBC,IAI9C,SAAA2D,GACAta,KAAAukD,oBAA2EjqC,EAAA,UACpEta,MAEHsT,EAAMtT,KAAAojD,UAAiB1sC,EAAmBE,OAI9C,SAAA0D,GACA,IAAAkqC,EAAgElqC,EAAA,QAChE0lC,EAAAwE,EAAAC,aACAr3C,IAAA4yC,UACAhgD,KAAAsjD,gBAAAtD,EAAAxtC,YAEA8H,EAAAxL,QAAAu1C,OAAA,OACOrkD,MAu3BP,OAn3BAgd,IAAA+jC,EAAAr0C,UAAAsQ,GACA+jC,EAAA/+C,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACA++C,EAAA/+C,UAAA+I,YAAAg2C,EAMAA,EAAA/+C,UAAAwhD,eAAA,WACA,UAAA7xC,MAAA,oDAQAovC,EAAA/+C,UAAA0iD,WAAA,SAAAN,GACApkD,KAAA2kD,cAAAj/C,KAAA0+C,IAQArD,EAAA/+C,UAAA4iD,eAAA,SAAAN,GACAtkD,KAAA6kD,kBAAAn/C,KAAA4+C,IAUAvD,EAAA/+C,UAAA8iD,SAAA,SAAA9G,GACA,IAAAyB,EAAAz/C,KAAA+kD,gBAAAhF,YACAN,EAAA/5C,KAAAs4C,IAQA+C,EAAA/+C,UAAAgjD,WAAA,SAAAR,GACAxkD,KAAAilD,cAAAv/C,KAAA8+C,IAQAzD,EAAA/+C,UAAAuiD,oBAAA,SAAAC,GACA,IAAAxE,EAAAwE,EAAAC,aACAr3C,IAAA4yC,IACAhgD,KAAAsjD,gBAAAtD,EAAAxtC,YAAAgyC,GAEAA,EAAAH,OAAArkD,OAOA+gD,EAAA/+C,UAAAqX,gBAAA,WACArZ,KAAA4iD,wBAAAxpC,UACIJ,EAAQhZ,KAAAoiD,UAAiBxnC,EAASG,YAAA/a,KAAAijD,mBAAAjjD,MAClCgZ,EAAQhZ,KAAAoiD,UAAiBxnC,EAASuB,MAAAnc,KAAAijD,mBAAAjjD,MAClCgZ,EAAQhZ,KAAAoiD,UAAiBxnC,EAASiB,WAAA7b,KAAAijD,mBAAAjjD,WACtCoN,IAAApN,KAAAyjD,gBACA3yC,oBAA0B8J,EAASmB,OAAA/b,KAAAyjD,eAAA,GACnCzjD,KAAAyjD,mBAAAr2C,GAEApN,KAAAyhD,qBACAxJ,qBAAAj4C,KAAAyhD,oBACAzhD,KAAAyhD,wBAAAr0C,GAEApN,KAAAklD,UAAA,MACAloC,EAAAhb,UAAAqX,gBAAA9Y,KAAAP,OAsBA+gD,EAAA/+C,UAAAmjD,sBAAA,SAAAtlC,EAAAlN,EAAAyL,GACA,GAAApe,KAAA+hD,YAAA,CAGA,IAAAhiC,EAAA/f,KAAAggB,uBAAAH,GACAzB,OAAAhR,IAAAgR,IACgC,GAChC,IAAAgnC,OAAAh4C,IAAAgR,EAAAgnC,aACAhnC,EAAAgnC,aAAAplD,KAAA+hD,YAAApH,WAAA,EACA0K,OAAAj4C,IAAAgR,EAAAinC,YACAjnC,EAAAinC,YAAgC9rC,EAChC,OAAAvZ,KAAAujD,UAAA+B,2BACAvlC,EAAA/f,KAAA+hD,YAAAqD,EAAAzyC,EAAA,KACA0yC,EAAA,QAWAtE,EAAA/+C,UAAAujD,mBAAA,SAAA1lC,EAAAzB,GACA,IAAAonC,EAAA,KAOA,OANAxlD,KAAAmlD,sBAAAtlC,EAAA,SAAA4lC,GACAD,IACAA,EAAA,IAEAA,EAAA9/C,KAAA+/C,IACKrnC,GACLonC,GAoBAzE,EAAA/+C,UAAA0jD,oBAAA,SAAA7lC,EAAAlN,EAAAyL,GACA,GAAApe,KAAA+hD,YAAA,CAGA,IAAAj1C,EAAAsR,GAA2D,GAC3DgnC,OAAAh4C,IAAAN,EAAAs4C,aACAhnC,EAAAgnC,aAAAplD,KAAA+hD,YAAApH,WAAA,EACA0K,EAAAv4C,EAAAu4C,aAA6C9rC,EAC7C,OAAAvZ,KAAAujD,UAAAmC,oBACA7lC,EAAA7f,KAAA+hD,YAAAqD,EAAAzyC,EAAA,KAAA0yC,EAAA,QAYAtE,EAAA/+C,UAAA2jD,kBAAA,SAAA9lC,EAAAzB,GACA,IAAApe,KAAA+hD,YACA,SAEA,IAAAhiC,EAAA/f,KAAAggB,uBAAAH,GACAzB,OAAAhR,IAAAgR,IACgC,GAChC,IAAAinC,OAAAj4C,IAAAgR,EAAAinC,YAAAjnC,EAAAinC,YAAwF9rC,EACxF6rC,OAAAh4C,IAAAgR,EAAAgnC,aACAhnC,EAAAgnC,aAAAplD,KAAA+hD,YAAApH,WAAA,EACA,OAAA36C,KAAAujD,UAAAqC,uBACA7lC,EAAA/f,KAAA+hD,YAAAqD,EAAAC,EAAA,OASAtE,EAAA/+C,UAAA6jD,mBAAA,SAAAvrC,GACA,OAAAta,KAAAggB,uBAAAhgB,KAAA8f,cAAAxF,KASAymC,EAAA/+C,UAAA8d,cAAA,SAAAxF,GACA,IAAAwrC,EAAA9lD,KAAAoiD,UAAA2D,wBACAC,EAAA,mBAAA1rC,EAC4B,EAAAiR,eAAA,GACA,EAE5B,OACAy6B,EAAA7hC,QAAA2hC,EAAA1gD,KACA4gD,EAAA3hC,QAAAyhC,EAAAp1C,MAaAqwC,EAAA/+C,UAAAikD,UAAA,WACA,OAAmDjmD,KAAAiB,IAAc+wB,GAAWG,SAU5E4uB,EAAA/+C,UAAAkkD,iBAAA,WACA,IAAAh7C,EAAAlL,KAAAimD,YACA,YAAA74C,IAAAlC,EACA,kBAAAA,EAAAyC,SAAAw4C,eAAAj7C,KAEA,MAWA61C,EAAA/+C,UAAAge,uBAAA,SAAAH,GACA,IAAAN,EAAAvf,KAAA+hD,YACA,OAAAxiC,EAGa/X,GAAc+X,EAAA6mC,2BAAAvmC,EAAArZ,SAF3B,MAYAu6C,EAAA/+C,UAAA2iD,YAAA,WACA,OAAA3kD,KAAAkjD,UASAnC,EAAA/+C,UAAAijD,YAAA,WACA,OAAAjlD,KAAAojD,WAWArC,EAAA/+C,UAAAqkD,eAAA,SAAArG,GACA,IAAAwE,EAAAxkD,KAAAsjD,gBAAAtD,EAAAxtC,YACA,YAAApF,IAAAo3C,IAAA,MAWAzD,EAAA/+C,UAAA6iD,gBAAA,WACA,OAAA7kD,KAAAmjD,cASApC,EAAA/+C,UAAA+iD,cAAA,WACA,OAC4B/kD,KAAAiB,IAAc+wB,GAAWC,aASrD8uB,EAAA/+C,UAAA+9C,UAAA,WACA,IAAAN,EAAAz/C,KAAA+kD,gBAAAhF,YACA,OAAAN,GAUAsB,EAAA/+C,UAAAskD,uBAAA,SAAAvmC,GACA,IAAAR,EAAAvf,KAAA+hD,YACA,OAAAxiC,EAGa/X,GAAc+X,EAAAgnC,2BAAAxmC,EAAAvZ,MAAA,MAF3B,MAUAu6C,EAAA/+C,UAAAwkD,YAAA,WACA,OAAAxmD,KAAAujD,WASAxC,EAAA/+C,UAAAykD,QAAA,WACA,OACoDzmD,KAAAiB,IAAc+wB,GAAWE,OAW7E6uB,EAAA/+C,UAAA0kD,QAAA,WACA,OACsB1mD,KAAAiB,IAAc+wB,GAAWI,OAS/C2uB,EAAA/+C,UAAA2uB,YAAA,WACA,OAAA3wB,KAAAoiD,WAUArB,EAAA/+C,UAAA2kD,oBAAA,WACA,OAAA3mD,KAAAyiD,mBAUA1B,EAAA/+C,UAAA4kD,6BAAA,WACA,OAAA5mD,KAAA0iD,4BAUA3B,EAAA/+C,UAAA6hD,gBAAA,SAAAluB,EAAAkxB,EAAAC,EAAAC,GAGA,IAAAxnC,EAAAvf,KAAA+hD,YACA,IAAAxiC,KAAAsnC,KAAAtnC,EAAAynC,aACA,OAAa5rC,GAEb,IAAAmE,EAAAynC,YAAAH,GAAAlxB,EAAAL,UACA,OAAala,GAQb,IAAA2jB,EAAA+nB,EAAA,GAAAvnC,EAAAjO,MAAA,GACA0tB,EAAA8nB,EAAA,GAAAvnC,EAAAjO,MAAA,GACA,aAAA5O,KAAAiF,IAAAo/C,GACArkD,KAAAwF,KAAA62B,IAAAC,KAAA+nB,GAOAhG,EAAA/+C,UAAAihD,mBAAA,SAAAvjC,EAAAhF,GACA,IAAAnH,EAAAmH,GAAAgF,EAAAnM,KACA0zC,EAAA,IAA8B/mC,GAAe3M,EAAAvT,KAAA0f,GAC7C1f,KAAA6iD,sBAAAoE,IAMAlG,EAAA/+C,UAAA6gD,sBAAA,SAAAoE,GACA,GAAAjnD,KAAA+hD,YAAA,CAKA/hD,KAAA0jD,OAAAuD,EAAAlnC,WACAknC,EAAA1nC,WAAAvf,KAAA+hD,YACA,IAAAmF,EAAAlnD,KAAA6kD,kBAAAhmC,WACA,QAAA7e,KAAAqa,cAAA4sC,GACA,QAAA7mD,EAAA8mD,EAAA7jD,OAAA,EAAgDjD,GAAA,EAAQA,IAAA,CACxD,IAAAkkD,EAAA4C,EAAA9mD,GACA,GAAAkkD,EAAA6C,YAAA,CAGA,IAAAC,EAAA9C,EAAA+C,YAAAJ,GACA,IAAAG,EACA,UASArG,EAAA/+C,UAAAslD,iBAAA,WAEA,IAAA/nC,EAAAvf,KAAA+hD,YAWAwF,EAAAvnD,KAAA4jD,WACA,IAAA2D,EAAAhzB,UAAA,CACA,IAAA2B,EAAAl2B,KAAAkhD,iBACA/qB,EAAAD,EACA,GAAA3W,EAAA,CACA,IAAAioC,EAAAjoC,EAAAkoC,UACAD,EAAkBruB,GAAQC,aAC1BlD,EAAAl2B,KAAAohD,yBAAA,IACAjrB,EAAA,GAEAqxB,EAAkBruB,GAAQE,eAC1BnD,EAAAl2B,KAAAshD,2BAAA,IACAnrB,EAAA,GAGAoxB,EAAA1xB,kBAAAK,IACAqxB,EAAAxyB,eACAwyB,EAAAtxB,cAAAC,EAAAC,KAGA5W,IAAAvf,KAAAya,YAAuC4X,GAAeI,iBAAAlT,EAAAg3B,SACtDv2C,KAAA4jD,WAAA/tB,mBAAA6xB,GAAA1nD,KAAA+/C,YAAAlhC,aACA7e,KAAAujD,UAAAoE,oBAAyCt1B,GAAeI,eAAAlT,GAIxD,IADA,IAAAqoC,EAAA5nD,KAAA2jD,qBACAvjD,EAAA,EAAAgX,EAAAwwC,EAAAvkD,OAAoDjD,EAAAgX,IAAQhX,EAC5DwnD,EAAAxnD,GAAAJ,KAAAuf,GAEAqoC,EAAAvkD,OAAA,GAMA09C,EAAA/+C,UAAAkiD,mBAAA,WACAlkD,KAAA6nD,UAMA9G,EAAA/+C,UAAAmiD,qBAAA,WAMA,IAAA2D,EAKA,GAJA9nD,KAAAimD,cACA6B,EAAA9nD,KAAAkmD,oBAGAlmD,KAAAgjD,gBAAA,CACA,QAAA5iD,EAAA,EAAAgX,EAAApX,KAAAgjD,gBAAA3/C,OAAuDjD,EAAAgX,IAAQhX,EACvD4X,EAAahY,KAAAgjD,gBAAA5iD,IAErBJ,KAAAgjD,gBAAA,KAGA,GAAA8E,EAOK,CACLA,EAAAl3C,YAAA5Q,KAAAoiD,WAEA,IAAAW,EAAA/iD,KAAA8iD,qBACA9iD,KAAA8iD,qBAAAgF,EACA9nD,KAAAgjD,gBAAA,CACQ1vC,EAAMyvC,EAAsBnoC,EAASU,QAAAtb,KAAAijD,mBAAAjjD,MACrCsT,EAAMyvC,EAAsBnoC,EAASW,SAAAvb,KAAAijD,mBAAAjjD,OAG7CA,KAAAyjD,gBACAzjD,KAAAyjD,cAAAzjD,KAAA+nD,WAAAnmD,KAAA5B,MACA8P,iBAAyB8K,EAASmB,OAAA/b,KAAAyjD,eAAA,SAlBlCzjD,KAAAujD,UAAAyE,uBACMjL,GAAU/8C,KAAAoiD,gBAChBh1C,IAAApN,KAAAyjD,gBACA3yC,oBAA4B8J,EAASmB,OAAA/b,KAAAyjD,eAAA,GACrCzjD,KAAAyjD,mBAAAr2C,GAkBApN,KAAA+nD,cAQAhH,EAAA/+C,UAAA8hD,kBAAA,WACA9jD,KAAA6nD,UAMA9G,EAAA/+C,UAAAimD,2BAAA,WACAjoD,KAAA6nD,UAMA9G,EAAA/+C,UAAAiiD,mBAAA,WACAjkD,KAAAiiD,2BACMjqC,EAAahY,KAAAiiD,0BACnBjiD,KAAAiiD,yBAAA,MAEAjiD,KAAAkiD,yBACMlqC,EAAahY,KAAAkiD,wBACnBliD,KAAAkiD,uBAAA,MAEA,IAAA/5B,EAAAnoB,KAAA0mD,UACAv+B,IACAnoB,KAAAoiD,UAAAzxC,aAAA,YAA+CsF,EAAMkS,IACrDnoB,KAAAiiD,yBAAsC3uC,EACtC6U,EAActR,EAAeC,eAC7B9W,KAAAioD,2BAAAjoD,MACAA,KAAAkiD,uBAAoC5uC,EACpC6U,EAAcvN,EAASC,OACvB7a,KAAAioD,2BAAAjoD,OAEAA,KAAA6nD,UAMA9G,EAAA/+C,UAAAgiD,yBAAA,WACAhkD,KAAAmiD,kCACAniD,KAAAmiD,gCAAAvzC,QAAmDoJ,GACnDhY,KAAAmiD,gCAAA,MAEA,IAAA+F,EAAAloD,KAAA+kD,gBACAmD,IACAloD,KAAAmiD,gCAAA,CACQ7uC,EACR40C,EAAsBrxC,EAAeC,eACrC9W,KAAA6nD,OAAA7nD,MACQsT,EACR40C,EAAsBttC,EAASC,OAC/B7a,KAAA6nD,OAAA7nD,QAGAA,KAAA6nD,UAMA9G,EAAA/+C,UAAAmmD,WAAA,WACA,QAAAnoD,KAAA+hD,aAOAhB,EAAA/+C,UAAAomD,WAAA,WACApoD,KAAAyhD,oBACAxJ,qBAAAj4C,KAAAyhD,oBAEAzhD,KAAA0hD,mBAOAX,EAAA/+C,UAAA6lD,OAAA,gBACAz6C,IAAApN,KAAAyhD,qBACAzhD,KAAAyhD,mBAAA9I,sBAAA34C,KAAA0hD,mBAWAX,EAAA/+C,UAAAqmD,cAAA,SAAAjE,GACA,OAAApkD,KAAA2kD,cAAA/9C,OAAAw9C,IAUArD,EAAA/+C,UAAAsmD,kBAAA,SAAAhE,GACA,OAAAtkD,KAAA6kD,kBAAAj+C,OAAA09C,IAUAvD,EAAA/+C,UAAAumD,YAAA,SAAAvK,GACA,IAAAyB,EAAAz/C,KAAA+kD,gBAAAhF,YACA,OAAAN,EAAA74C,OAAAo3C,IAUA+C,EAAA/+C,UAAAwmD,cAAA,SAAAhE,GACA,OAAAxkD,KAAAilD,cAAAr+C,OAAA49C,IAOAzD,EAAA/+C,UAAA2/C,aAAA,SAAA8G,GACA,IAAAC,EAEA3qB,EAAA/9B,KAAAymD,UACAt+B,EAAAnoB,KAAA0mD,UACA7uB,EAAiB2D,KACjBmtB,EAAA3oD,KAAA+hD,YAEAxiC,EAAA,KACA,QAAAnS,IAAA2wB,GAA8B2iB,GAAO3iB,IAAA5V,KAAAuuB,QAAA,CAIrC,IAHA,IAAA+Q,EAAAt/B,EAAAoxB,SAAAv5C,KAAA+hD,YAAA/hD,KAAA+hD,YAAA0F,eAAAr6C,GACAw7C,EAAA5oD,KAAA+kD,gBAAAvG,sBACAqK,EAAA,GACAzoD,EAAA,EAAAgX,EAAAwxC,EAAAvlD,OAAmDjD,EAAAgX,IAAQhX,EAC3DyoD,EAAoB5yC,EAAM2yC,EAAAxoD,GAAA49C,QAAA4K,EAAAxoD,GAE1BsoD,EAAAvgC,EAAA4N,SAAA/1B,KAAAwhD,aACAjiC,EAAyC,CACzCg3B,SAAA,EACAgQ,2BAAAvmD,KAAA4hD,4BACA/pB,SACAvmB,MAAAtR,KAAA0jD,OAAA1jD,KAAA0jD,OAAAgF,EAAA5wB,OACAhxB,MAAA9G,KAAA8hD,cACA+G,cACAD,mBACAjO,WAAA36C,KAAAwhD,YACA4E,2BAAApmD,KAAA6hD,4BACA+F,oBAAA,GACA7pB,OACA+qB,mBAAA9oD,KAAA+jD,oBACAwD,UAAAvnD,KAAA4jD,WACA6E,OACAM,UAAA,GACAL,YACAjB,YACAT,YAAA,IAYA,GARAznC,IACAA,EAAAsY,OAA0BiG,GAAiB4qB,EAAA5wB,OAC3C4wB,EAAAxwB,WAAAwwB,EAAA9vB,SAAArZ,EAAAwe,KAAAlG,IAGA73B,KAAA+hD,YAAAxiC,EACAvf,KAAAujD,UAAAyF,YAAAzpC,GAEAA,EAAA,CAMA,GALAA,EAAAg3B,SACAv2C,KAAA6nD,SAEAh0C,MAAA7R,UAAA0D,KAAA8B,MAAAxH,KAAA2jD,qBAAApkC,EAAAqoC,qBAEAe,EAAA,CACA,IAAAM,GAAAjpD,KAAAgiD,kBACsBxkB,GAAOx9B,KAAAgiD,mBACRllB,GAAMvd,EAAAsY,OAAA73B,KAAAgiD,iBAC3BiH,IACAjpD,KAAAqa,cACA,IAAgBmF,EAASoS,GAAYE,UAAA9xB,KAAA2oD,IACrC3oD,KAAAgiD,gBAAiC1lB,GAAmBt8B,KAAAgiD,kBAIpD,IAAAkH,EAAAlpD,KAAAgiD,kBACAziC,EAAAkoC,UAAgCtuB,GAAQC,aACxC7Z,EAAAkoC,UAAgCtuB,GAAQE,eAC7ByD,GAAMvd,EAAAsY,OAAA73B,KAAAgiD,iBAEjBkH,IACAlpD,KAAAqa,cAAA,IAA+BmF,EAASoS,GAAYG,QAAA/xB,KAAAuf,IAC5Cqc,GAAKrc,EAAAsY,OAAA73B,KAAAgiD,kBAIbhiD,KAAAqa,cAAA,IAA2BmF,EAASoS,GAAYC,WAAA7xB,KAAAuf,IAEhDyN,WAAAhtB,KAAAsnD,iBAAA1lD,KAAA5B,MAAA,IAUA+gD,EAAA/+C,UAAAmnD,cAAA,SAAAjB,GACAloD,KAAAyR,IAAaugB,GAAWC,WAAAi2B,IASxBnH,EAAA/+C,UAAAonD,QAAA,SAAArrB,GACA/9B,KAAAyR,IAAaugB,GAAWE,KAAA6L,IAUxBgjB,EAAA/+C,UAAAkjD,UAAA,SAAAh6C,GACAlL,KAAAyR,IAAaugB,GAAWG,OAAAjnB,IASxB61C,EAAA/+C,UAAAqnD,QAAA,SAAAlhC,GACAnoB,KAAAyR,IAAaugB,GAAWI,KAAAjK,IAMxB44B,EAAA/+C,UAAAsnD,YAAA,SAAA7D,GACAzlD,KAAA+jD,oBAA6B9tC,EAAMwvC,KAAA,EACnCzlD,KAAA6nD,UAQA9G,EAAA/+C,UAAA+lD,WAAA,WACA,IAAAD,EAAA9nD,KAAAkmD,mBAEA,GAAA4B,EAEK,CACL,IAAAyB,EAAAvQ,iBAAA8O,GACA9nD,KAAAopD,QAAA,CACAtB,EAAA0B,YACAC,WAAAF,EAAA,oBACAE,WAAAF,EAAA,gBACAE,WAAAF,EAAA,iBACAE,WAAAF,EAAA,qBACAzB,EAAA4B,aACAD,WAAAF,EAAA,mBACAE,WAAAF,EAAA,eACAE,WAAAF,EAAA,kBACAE,WAAAF,EAAA,6BAbAvpD,KAAAopD,aAAAh8C,IAqBA2zC,EAAA/+C,UAAA2nD,cAAA,SAAAlE,UACAzlD,KAAA+jD,oBAAoC9tC,EAAMwvC,IAC1CzlD,KAAA6nD,UAGA9G,EAprCgB,CAqrCdnjC,GAOF,SAAAqjC,GAAAn0C,GAKA,IAAAi2C,EAAA,UACA31C,IAAAN,EAAAi2C,sBACAA,EAAA,kBAAAj2C,EAAAi2C,oBACAp1C,SAAAw4C,eAAAr5C,EAAAi2C,qBACAj2C,EAAAi2C,qBAMA,IAWAG,EAWAC,EAWAE,EAjCA7rC,EAAA,GAEA0wC,EAAAp7C,EAAA2yC,QAAyD,oBAAA3yC,EAAA,OAAAizC,UAC/BjzC,EAAA,WAA2B2zC,GAAU,CAAEhB,OAA8B3yC,EAAA,SA2C/F,OA1CA0K,EAASwa,GAAWC,YAAAi2B,EAEpB1wC,EAASwa,GAAWG,QAAArlB,EAAA5B,OAEpBsM,EAASwa,GAAWI,WAAAhlB,IAAAN,EAAAqb,KACpBrb,EAAAqb,KAAA,IAAuBo0B,QAGvBnvC,IAAAN,EAAAo2C,WACArvC,MAAA6I,QAAA5P,EAAAo2C,UACAA,EAAA,IAAqB9jC,EAAUtS,EAAAo2C,SAAA18C,UAEzBwsB,GAA2B,oBAAAlmB,EAAA,SAAA+R,SACjC,IACAqkC,EAAuCp2C,EAAA,gBAKvCM,IAAAN,EAAAq2C,eACAtvC,MAAA6I,QAAA5P,EAAAq2C,cACAA,EAAA,IAAyB/jC,EAAUtS,EAAAq2C,aAAA38C,UAE7BwsB,GAA2B,oBAAAlmB,EAAA,aAAA+R,SACjC,IACAskC,EAA2Cr2C,EAAA,oBAK3CM,IAAAN,EAAAu2C,SACAxvC,MAAA6I,QAAA5P,EAAAu2C,UACAA,EAAA,IAAqBjkC,EAAUtS,EAAAu2C,SAAA78C,UAEzBwsB,GAA2B,oBAAAlmB,EAAA,SAAA+R,SACjC,IACAwkC,EAAAv2C,EAAAu2C,UAGAA,EAAA,IAAmBjkC,EAGnB,CACA8jC,WACAC,eACAJ,sBACAM,WACA7rC,UAIe,IAAAoyC,GAAA,GAMf,SAAAlC,GAAAjI,GACA,QAAAr/C,EAAA,EAAAgX,EAAAqoC,EAAAp8C,OAAqCjD,EAAAgX,IAAQhX,EAAA,CAC7C,IAAA49C,EAAAyB,EAAAr/C,GACA,GAA4B,sBAAA2/C,UAC5B,OAAA2H,GAA8C,EAAA3H,YAAAlhC,YAE9C,IAAAxH,EAAiE,EACjEwyC,YACA,GAAAxyC,KAAAyyC,QACA,SAIA,SCn3CA,IAAIC,GAAO,SAAA/sC,GACX,SAAAgtC,EAAAl9C,GAEAkQ,EAAAzc,KAAAP,MAMAA,KAAA8O,QAAAhC,EAAAgC,QAAAhC,EAAAgC,QAAA,KAMA9O,KAAAiqD,QAAA,KAMAjqD,KAAAqwB,KAAA,KAMArwB,KAAAkqD,aAAA,GAKAlqD,KAAA6nD,OAAA/6C,EAAA+6C,OAAA/6C,EAAA+6C,OAAoDpuC,EAEpD3M,EAAA5B,QACAlL,KAAAklD,UAAAp4C,EAAA5B,QAqEA,OAhEA8R,IAAAgtC,EAAAt9C,UAAAsQ,GACAgtC,EAAAhoD,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACAgoD,EAAAhoD,UAAA+I,YAAAi/C,EAKAA,EAAAhoD,UAAAqX,gBAAA,WACI0jC,GAAU/8C,KAAA8O,SACdkO,EAAAhb,UAAAqX,gBAAA9Y,KAAAP,OAQAgqD,EAAAhoD,UAAAmoD,OAAA,WACA,OAAAnqD,KAAAqwB,MAUA25B,EAAAhoD,UAAAqiD,OAAA,SAAA/vC,GACAtU,KAAAqwB,MACM0sB,GAAU/8C,KAAA8O,SAEhB,QAAA1O,EAAA,EAAAgX,EAAApX,KAAAkqD,aAAA7mD,OAAkDjD,EAAAgX,IAAQhX,EACpD4X,EAAahY,KAAAkqD,aAAA9pD,IAInB,GAFAJ,KAAAkqD,aAAA7mD,OAAA,EACArD,KAAAqwB,KAAA/b,EACAtU,KAAAqwB,KAAA,CACA,IAAAnlB,EAAAlL,KAAAiqD,QACAjqD,KAAAiqD,QAAA31C,EAAAsyC,+BACA17C,EAAA0F,YAAA5Q,KAAA8O,SACA9O,KAAA6nD,SAA0BpuC,GAC1BzZ,KAAAkqD,aAAAxkD,KAA+B4N,EAAMgB,EAC3Bsd,GAAYC,WAAA7xB,KAAA6nD,OAAA7nD,OAEtBsU,EAAAuzC,WAaAmC,EAAAhoD,UAAAkjD,UAAA,SAAAh6C,GACAlL,KAAAiqD,QAAA,kBAAA/+C,EACAyC,SAAAw4C,eAAAj7C,GACAA,GAGA8+C,EAxGW,CAyGTpsC,GAGawsC,GAAA,GChJRC,GAAA,YAkBAC,GAAA,kBAkBAC,GAAA,aAUAC,GAAA,eASAC,GAAA,WACP,IAAAx6C,EACAy6C,EAAA,GACA,gBAAAC,GAIA,GAHA16C,IACAA,EAAAtC,SAAAqC,cAAA,OAAAC,SAEA06C,KAAAD,GAAA,CACAz6C,EAAA06C,OACA,IAAAC,EAAA36C,EAAA46C,WAEA,GADA56C,EAAA06C,KAAA,IACAC,EACA,YAEAF,EAAAC,GAAAC,EAAAr0C,MAAA,QAEA,OAAAm0C,EAAAC,IAhBO,GCDHG,GAAK,SAAApN,GACT,SAAAqN,EAAAj+C,GAEA,IAAA0yC,EAAsBzoC,EAAM,GAAGjK,UAC/B0yC,EAAAnoC,OAEAqmC,EAAAn9C,KAAAP,KAAAw/C,GAMAx/C,KAAAgrD,kBAAA,KAMAhrD,KAAAirD,cAAA,KAMAjrD,KAAAkrD,iBAAA,KAEAp+C,EAAAwH,KACAtU,KAAAqkD,OAAAv3C,EAAAwH,KAGIhB,EAAMtT,KACJwd,EAAmB0/B,GAAaM,QACtCx9C,KAAAmrD,4BAAAnrD,MAEA,IAAAqX,EAAAvK,EAAAuK,OAAAvK,EAAAuK,OAAA,KACArX,KAAAorD,UAAA/zC,GAuHA,OApHAqmC,IAAAqN,EAAAr+C,UAAAgxC,GACAqN,EAAA/oD,UAAAlB,OAAAY,OAAAg8C,KAAA17C,WACA+oD,EAAA/oD,UAAA+I,YAAAggD,EAKAA,EAAA/oD,UAAAu8C,eAAA,SAAApgC,GACA,IAAAS,EAAAT,GAAA,GAEA,OADAS,EAAAlZ,KAAA1F,MACA4e,GAMAmsC,EAAA/oD,UAAAw8C,oBAAA,SAAAC,GACA,IAAA4B,EAAA5B,GAAA,GAEA,OADA4B,EAAA36C,KAAA1F,KAAA+9C,iBACAsC,GASA0K,EAAA/oD,UAAA6nD,UAAA,WACA,IAAAxyC,EAAArX,KAAAiB,IAA0Bi8C,GAAaM,QACvC,OACuD,SAOvDuN,EAAA/oD,UAAAo8C,eAAA,WACA,IAAA/mC,EAAArX,KAAA6pD,YACA,OAAAxyC,EAAgCA,EAAA0e,WAAXkpB,GAAWC,WAMhC6L,EAAA/oD,UAAAqpD,oBAAA,WACArrD,KAAAwc,WAMAuuC,EAAA/oD,UAAAmpD,4BAAA,WACAnrD,KAAAkrD,mBACMlzC,EAAahY,KAAAkrD,kBACnBlrD,KAAAkrD,iBAAA,MAEA,IAAA7zC,EAAArX,KAAA6pD,YACAxyC,IACArX,KAAAkrD,iBAA8B53C,EAAM+D,EAC5BuD,EAASC,OAAA7a,KAAAqrD,oBAAArrD,OAEjBA,KAAAwc,WAeAuuC,EAAA/oD,UAAAqiD,OAAA,SAAA/vC,GACAtU,KAAAgrD,oBACMhzC,EAAahY,KAAAgrD,mBACnBhrD,KAAAgrD,kBAAA,MAEA12C,GACAtU,KAAAwc,UAEAxc,KAAAirD,gBACMjzC,EAAahY,KAAAirD,eACnBjrD,KAAAirD,cAAA,MAEA32C,IACAtU,KAAAgrD,kBAA+B13C,EAAMgB,EAAM+d,GAAeE,WAAA,SAAA1a,GAC1D,IAAAyzC,EAA0E,EAC1E9K,EAAAxgD,KAAA+9C,gBACAyC,EAAAvC,SAAA,OACA7wC,IAAApN,KAAAs+C,cACAkC,EAAA3C,OAAA95C,KAEAunD,EAAA/rC,WAAAqpC,iBAAAljD,KAAA86C,GACA8K,EAAA/rC,WAAAspC,YAA2C5yC,EAAMjW,OAAAwgD,GAC1CxgD,MACPA,KAAAirD,cAA2B33C,EAAMtT,KAAO4a,EAASC,OAAAvG,EAAAuzC,OAAAvzC,GACjDtU,KAAAwc,YAUAuuC,EAAA/oD,UAAAopD,UAAA,SAAA/zC,GACArX,KAAAyR,IAAayrC,GAAaM,OAAAnmC,IAG1B0zC,EA1JS,CA2JP/L,IAWK,SAAAuM,GAAA/K,EAAAtoB,GACP,OAAAsoB,EAAA5C,SAAA1lB,GAAAsoB,EAAAvL,eACA/c,EAAAsoB,EAAAloB,cAIe,IAAAkzB,GAAA,GChMXC,GAAW,SAAAzB,GACf,SAAA0B,EAAAttC,GAEA,IAAAtR,EAAAsR,GAAA,GAEA4rC,EAAAzpD,KAAAP,KAAA,CACA8O,QAAAnB,SAAAqC,cAAA,OACA63C,OAAA/6C,EAAA+6C,QAAgC8D,GAChCzgD,OAAA4B,EAAA5B,SAOAlL,KAAA4rD,WAAAj+C,SAAAqC,cAAA,MAMAhQ,KAAA6rD,gBAAAz+C,IAAAN,EAAAg/C,WAAAh/C,EAAAg/C,UAMA9rD,KAAA+rD,0BAAA3+C,IAAAN,EAAAk/C,YAMAhsD,KAAAisD,kBAAA7+C,IAAAN,EAAAk/C,aACAl/C,EAAAk/C,YAEAhsD,KAAAisD,eACAjsD,KAAA6rD,YAAA,GAGA,IAAAxJ,OAAAj1C,IAAAN,EAAAu1C,UAAAv1C,EAAAu1C,UAAA,iBAEA6J,OAAA9+C,IAAAN,EAAAo/C,SAAAp/C,EAAAo/C,SAAA,eAEAC,OAAA/+C,IAAAN,EAAAq/C,cAAAr/C,EAAAq/C,cAAA,IAEA,kBAAAA,GAKAnsD,KAAAosD,eAAAz+C,SAAAqC,cAAA,QACAhQ,KAAAosD,eAAAC,YAAAF,GAEAnsD,KAAAosD,eAAAD,EAGA,IAAAG,OAAAl/C,IAAAN,EAAAw/C,MAAAx/C,EAAAw/C,MAAA,IAEA,kBAAAA,GAKAtsD,KAAAusD,OAAA5+C,SAAAqC,cAAA,QACAhQ,KAAAusD,OAAAF,YAAAC,GAEAtsD,KAAAusD,OAAAD,EAIA,IAAAE,EAAAxsD,KAAAisD,eAAAjsD,KAAA6rD,WACA7rD,KAAAosD,eAAApsD,KAAAusD,OACAhpC,EAAA5V,SAAAqC,cAAA,UACAuT,EAAA5S,aAAA,iBACA4S,EAAAkpC,MAAAP,EACA3oC,EAAA3S,YAAA47C,GAEIl5C,EAAMiQ,EAAS3I,EAASI,MAAAhb,KAAA0sD,aAAA1sD,MAE5B,IAAA2sD,EAAAtK,EAAA,IAAuCiI,GAAkB,IAASC,IAClEvqD,KAAA6rD,YAAA7rD,KAAAisD,aAAA,IAAsDzB,GAAe,KACrExqD,KAAAisD,aAAA,wBACAn9C,EAAA9O,KAAA8O,QACAA,EAAAuzC,UAAAsK,EACA79C,EAAA8B,YAAA5Q,KAAA4rD,YACA98C,EAAA8B,YAAA2S,GAOAvjB,KAAA4sD,sBAAA,GAMA5sD,KAAA6sD,kBAAA,EAmLA,OA/KA7C,IAAA0B,EAAAh/C,UAAAs9C,GACA0B,EAAA1pD,UAAAlB,OAAAY,OAAAsoD,KAAAhoD,WACA0pD,EAAA1pD,UAAA+I,YAAA2gD,EAQAA,EAAA1pD,UAAA8qD,2BAAA,SAAAvtC,GAeA,IAVA,IAAAwtC,EAAA,GAMAC,EAAA,GAEApE,EAAArpC,EAAAqpC,iBACA1wB,EAAA3Y,EAAAmpC,UAAAxwB,WACA93B,EAAA,EAAAgX,EAAAwxC,EAAAvlD,OAAiDjD,EAAAgX,IAAQhX,EAAA,CACzD,IAAAogD,EAAAoI,EAAAxoD,GACA,GAAWmrD,GAAmB/K,EAAAtoB,GAA9B,CAIA,IAAA7gB,EAAkEmpC,EAAA,MAAAqJ,YAClE,GAAAxyC,EAAA,CAIA,IAAA41C,EAAA51C,EAAA61C,kBACA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAA1tC,GACA,GAAA4tC,EAQA,GAJAntD,KAAA+rD,uBAAA,IAAA10C,EAAA+1C,8BACAptD,KAAAqtD,gBAAA,GAGAx5C,MAAA6I,QAAAywC,GACA,QAAAtlD,EAAA,EAAAwnC,EAAA8d,EAAA9pD,OAAiDwE,EAAAwnC,IAAQxnC,EACzDslD,EAAAtlD,KAAAklD,IACAC,EAAAtnD,KAAAynD,EAAAtlD,IACAklD,EAAAI,EAAAtlD,KAAA,QAIAslD,KAAAJ,IACAC,EAAAtnD,KAAAynD,GACAJ,EAAAI,IAAA,MAIA,OAAAH,GAOAtB,EAAA1pD,UAAAsrD,eAAA,SAAA/tC,GACA,GAAAA,EAAA,CAQA,IAAA4tC,EAAAntD,KAAA8sD,2BAAAvtC,GAEAq+B,EAAAuP,EAAA9pD,OAAA,EAMA,GALArD,KAAA6sD,kBAAAjP,IACA59C,KAAA8O,QAAAmB,MAAAs9C,QAAA3P,EAAA,UACA59C,KAAA6sD,iBAAAjP,IAGQtzB,GAAM6iC,EAAAntD,KAAA4sD,uBAAd,CAII5P,GAAch9C,KAAA4rD,YAGlB,QAAAxrD,EAAA,EAAAgX,EAAA+1C,EAAA9pD,OAA6CjD,EAAAgX,IAAQhX,EAAA,CACrD,IAAA0O,EAAAnB,SAAAqC,cAAA,MACAlB,EAAA0+C,UAAAL,EAAA/sD,GACAJ,KAAA4rD,WAAAh7C,YAAA9B,GAGA9O,KAAA4sD,sBAAAO,QA5BAntD,KAAA6sD,mBACA7sD,KAAA8O,QAAAmB,MAAAs9C,QAAA,OACAvtD,KAAA6sD,kBAAA,IAiCAnB,EAAA1pD,UAAA0qD,aAAA,SAAApyC,GACAA,EAAAT,iBACA7Z,KAAAytD,iBAMA/B,EAAA1pD,UAAAyrD,cAAA,WACAztD,KAAA8O,QAAA4+C,UAAAC,OAAkCnD,IAClCxqD,KAAA6rD,WACMjP,GAAW58C,KAAAosD,eAAApsD,KAAAusD,QAEX3P,GAAW58C,KAAAusD,OAAAvsD,KAAAosD,gBAEjBpsD,KAAA6rD,YAAA7rD,KAAA6rD,YAQAH,EAAA1pD,UAAA4rD,eAAA,WACA,OAAA5tD,KAAAisD,cAQAP,EAAA1pD,UAAAqrD,eAAA,SAAArB,GACAhsD,KAAAisD,eAAAD,IAGAhsD,KAAAisD,aAAAD,EACAhsD,KAAA8O,QAAA4+C,UAAAC,OAAA,qBACA3B,GAAAhsD,KAAA6rD,YACA7rD,KAAAytD,kBAWA/B,EAAA1pD,UAAA6rD,aAAA,SAAA/B,GACA9rD,KAAAisD,cAAAjsD,KAAA6rD,aAAAC,GAGA9rD,KAAAytD,iBASA/B,EAAA1pD,UAAA8rD,aAAA,WACA,OAAA9tD,KAAA6rD,YAGAH,EAtRe,CAuRbtB,IASK,SAASuB,GAAMoC,GACtB/tD,KAAAstD,eAAAS,EAAAxuC,YAIe,IAAAyuC,GAAA,GC/SXC,GAAM,SAAAjE,GACV,SAAAkE,EAAA9vC,GAEA,IAAAtR,EAAAsR,GAAA,GAEA4rC,EAAAzpD,KAAAP,KAAA,CACA8O,QAAAnB,SAAAqC,cAAA,OACA63C,OAAA/6C,EAAA+6C,QAAgCsG,GAChCjjD,OAAA4B,EAAA5B,SAGA,IAAAm3C,OAAAj1C,IAAAN,EAAAu1C,UAAAv1C,EAAAu1C,UAAA,YAEAiK,OAAAl/C,IAAAN,EAAAw/C,MAAAx/C,EAAAw/C,MAAA,IAMAtsD,KAAAusD,OAAA,KAEA,kBAAAD,GACAtsD,KAAAusD,OAAA5+C,SAAAqC,cAAA,QACAhQ,KAAAusD,OAAAlK,UAAA,aACAriD,KAAAusD,OAAAF,YAAAC,IAEAtsD,KAAAusD,OAAAD,EACAtsD,KAAAusD,OAAAmB,UAAAU,IAAA,eAGA,IAAAlC,EAAAp/C,EAAAo/C,SAAAp/C,EAAAo/C,SAAA,iBAEA3oC,EAAA5V,SAAAqC,cAAA,UACAuT,EAAA8+B,YAAA,SACA9+B,EAAA5S,aAAA,iBACA4S,EAAAkpC,MAAAP,EACA3oC,EAAA3S,YAAA5Q,KAAAusD,QAEIj5C,EAAMiQ,EAAS3I,EAASI,MAAAhb,KAAA0sD,aAAA1sD,MAE5B,IAAA2sD,EAAAtK,EAAA,IAAuCiI,GAAkB,IAASC,GAClEz7C,EAAA9O,KAAA8O,QACAA,EAAAuzC,UAAAsK,EACA79C,EAAA8B,YAAA2S,GAEAvjB,KAAAquD,gBAAAvhD,EAAAwhD,WAAAxhD,EAAAwhD,gBAAAlhD,EAMApN,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAMAp3C,KAAAwuD,eAAAphD,IAAAN,EAAA2hD,UAAA3hD,EAAA2hD,SAMAzuD,KAAA0uD,eAAAthD,EAEApN,KAAAwuD,WACAxuD,KAAA8O,QAAA4+C,UAAAU,IAAiC/D,IA8CjC,OAzCAL,IAAAkE,EAAAxhD,UAAAs9C,GACAkE,EAAAlsD,UAAAlB,OAAAY,OAAAsoD,KAAAhoD,WACAksD,EAAAlsD,UAAA+I,YAAAmjD,EAMAA,EAAAlsD,UAAA0qD,aAAA,SAAApyC,GACAA,EAAAT,sBACAzM,IAAApN,KAAAquD,gBACAruD,KAAAquD,kBAEAruD,KAAA2uD,eAOAT,EAAAlsD,UAAA2sD,YAAA,WACA,IAAAr6C,EAAAtU,KAAAmqD,SACAhiC,EAAA7T,EAAAoyC,UACAv+B,QAKA/a,IAAA+a,EAAAmuB,gBACAt2C,KAAAuuD,UAAA,EACApmC,EAAAouB,QAAA,CACA3d,SAAA,EACAwe,SAAAp3C,KAAAuuD,UACAlX,OAAkB9c,KAGlBpS,EAAA0uB,YAAA,KAKAqX,EAhHU,CAiHR9D,IASK,SAAS+D,GAAMJ,GACtB,IAAAxuC,EAAAwuC,EAAAxuC,WACA,GAAAA,EAAA,CAGA,IAAAqZ,EAAArZ,EAAAmpC,UAAA9vB,SACA,GAAAA,GAAA54B,KAAA0uD,UAAA,CACA,IAAAhuB,EAAA,UAAA9H,EAAA,OACA,GAAA54B,KAAAwuD,UAAA,CACA,IAAAzpD,EAAA/E,KAAA8O,QAAA4+C,UAAA3oD,SAAqDslD,IACrDtlD,GAAA,IAAA6zB,EAEO7zB,GAAA,IAAA6zB,GACP54B,KAAA8O,QAAA4+C,UAAA9mD,OAAsCyjD,IAFtCrqD,KAAA8O,QAAA4+C,UAAAU,IAAmC/D,IAKnCrqD,KAAAusD,OAAAt8C,MAAA2+C,YAAAluB,EACA1gC,KAAAusD,OAAAt8C,MAAA4+C,gBAAAnuB,EACA1gC,KAAAusD,OAAAt8C,MAAAywB,YAEA1gC,KAAA0uD,UAAA91B,GAGe,IAAAk2B,GAAA,GClJXC,GAAI,SAAA/E,GACR,SAAAgF,EAAA5wC,GAEA,IAAAtR,EAAAsR,GAAA,GAEA4rC,EAAAzpD,KAAAP,KAAA,CACA8O,QAAAnB,SAAAqC,cAAA,OACA9E,OAAA4B,EAAA5B,SAGA,IAAAm3C,OAAAj1C,IAAAN,EAAAu1C,UAAAv1C,EAAAu1C,UAAA,UAEAlqB,OAAA/qB,IAAAN,EAAAqrB,MAAArrB,EAAAqrB,MAAA,EAEA82B,OAAA7hD,IAAAN,EAAAmiD,YAAAniD,EAAAmiD,YAAA,IACAC,OAAA9hD,IAAAN,EAAAoiD,aAAApiD,EAAAoiD,aAAA,IAEAC,OAAA/hD,IAAAN,EAAAqiD,eACAriD,EAAAqiD,eAAA,UACAC,OAAAhiD,IAAAN,EAAAsiD,gBACAtiD,EAAAsiD,gBAAA,WAEAC,EAAA1hD,SAAAqC,cAAA,UACAq/C,EAAAhN,YAAA,MACAgN,EAAA1+C,aAAA,iBACA0+C,EAAA5C,MAAA0C,EACAE,EAAAz+C,YACA,kBAAAq+C,EAAAthD,SAAA2hD,eAAAL,MAGI37C,EAAM+7C,EAAYz0C,EAASI,MAAAhb,KAAA0sD,aAAA9qD,KAAA5B,KAAAm4B,IAE/B,IAAAo3B,EAAA5hD,SAAAqC,cAAA,UACAu/C,EAAAlN,YAAA,OACAkN,EAAA5+C,aAAA,iBACA4+C,EAAA9C,MAAA2C,EACAG,EAAA3+C,YACA,kBAAAs+C,EAAAvhD,SAAA2hD,eAAAJ,MAGI57C,EAAMi8C,EAAa30C,EAASI,MAAAhb,KAAA0sD,aAAA9qD,KAAA5B,MAAAm4B,IAEhC,IAAAw0B,EAAAtK,EAAA,IAAuCiI,GAAkB,IAASC,GAClEz7C,EAAA9O,KAAA8O,QACAA,EAAAuzC,UAAAsK,EACA79C,EAAA8B,YAAAy+C,GACAvgD,EAAA8B,YAAA2+C,GAMAvvD,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAgDA,OA5CA4S,IAAAgF,EAAAtiD,UAAAs9C,GACAgF,EAAAhtD,UAAAlB,OAAAY,OAAAsoD,KAAAhoD,WACAgtD,EAAAhtD,UAAA+I,YAAAikD,EAOAA,EAAAhtD,UAAA0qD,aAAA,SAAAv0B,EAAA7d,GACAA,EAAAT,iBACA7Z,KAAAwvD,aAAAr3B,IAOA62B,EAAAhtD,UAAAwtD,aAAA,SAAAr3B,GACA,IAAA7jB,EAAAtU,KAAAmqD,SACAhiC,EAAA7T,EAAAoyC,UACA,GAAAv+B,EAAA,CAKA,IAAA0wB,EAAA1wB,EAAA6tB,gBACA,GAAA6C,EAAA,CACA,IAAA4W,EAAAtnC,EAAA4tB,oBAAA8C,EAAA1gB,GACAn4B,KAAAuuD,UAAA,GACApmC,EAAA2vB,gBACA3vB,EAAA6vB,mBAEA7vB,EAAAouB,QAAA,CACAre,WAAAu3B,EACArY,SAAAp3C,KAAAuuD,UACAlX,OAAkB9c,MAGlBpS,EAAA2zB,cAAA2T,MAKAT,EApGQ,CAqGN5E,IAGasF,GAAA,GCjGR,SAAAC,GAAAvxC,GAEP,IAAAtR,EAAAsR,GAAA,GAEA8kC,EAAA,IAAqB9jC,EAErBwwC,OAAAxiD,IAAAN,EAAAgpC,MAAAhpC,EAAAgpC,KACA8Z,GACA1M,EAAAx9C,KAAA,IAAsBgqD,GAAI5iD,EAAA+iD,cAG1B,IAAAC,OAAA1iD,IAAAN,EAAA2+B,QAAA3+B,EAAA2+B,OACAqkB,GACA5M,EAAAx9C,KAAA,IAAsBopD,GAAMhiD,EAAAijD,gBAG5B,IAAAC,OAAA5iD,IAAAN,EAAAmjD,aACAnjD,EAAAmjD,YAKA,OAJAD,GACA9M,EAAAx9C,KAAA,IAAsBsoD,GAAWlhD,EAAAojD,qBAGjChN,ECrDA,IAAAiN,GAAA,SAAAC,EAAAC,EAAAC,GAMAtwD,KAAAuwD,OAAAH,EAMApwD,KAAAwwD,aAAAH,EAMArwD,KAAAywD,OAAAH,EAMAtwD,KAAA0wD,QAAA,GAMA1wD,KAAA2wD,OAAA,EAMA3wD,KAAA4wD,iBAAA,GAMAT,GAAAnuD,UAAAkoB,MAAA,WACAlqB,KAAA0wD,QAAArtD,OAAA,EACArD,KAAA2wD,OAAA,EACA3wD,KAAA4wD,iBAAA,GAOAT,GAAAnuD,UAAA6uD,OAAA,SAAA3sC,EAAAE,GACApkB,KAAA0wD,QAAAhrD,KAAAwe,EAAAE,EAAA2yB,KAAAC,QAMAmZ,GAAAnuD,UAAAmoB,IAAA,WACA,GAAAnqB,KAAA0wD,QAAArtD,OAAA,EAGA,SAEA,IAAAitD,EAAAvZ,KAAAC,MAAAh3C,KAAAywD,OACAK,EAAA9wD,KAAA0wD,QAAArtD,OAAA,EACA,GAAArD,KAAA0wD,QAAAI,EAAA,GAAAR,EAGA,SAIA,IAAAS,EAAAD,EAAA,EACA,MAAAC,EAAA,GAAA/wD,KAAA0wD,QAAAK,EAAA,GAAAT,EACAS,GAAA,EAGA,IAAA3Z,EAAAp3C,KAAA0wD,QAAAI,EAAA,GAAA9wD,KAAA0wD,QAAAK,EAAA,GAIA,GAAA3Z,EAAA,OACA,SAGA,IAAA9yB,EAAAtkB,KAAA0wD,QAAAI,GAAA9wD,KAAA0wD,QAAAK,GACAvsC,EAAAxkB,KAAA0wD,QAAAI,EAAA,GAAA9wD,KAAA0wD,QAAAK,EAAA,GAGA,OAFA/wD,KAAA2wD,OAAAjuD,KAAAq/B,MAAAvd,EAAAF,GACAtkB,KAAA4wD,iBAAAluD,KAAAwF,KAAAoc,IAAAE,KAAA4yB,EACAp3C,KAAA4wD,iBAAA5wD,KAAAwwD,cAMAL,GAAAnuD,UAAAs/B,YAAA,WACA,OAAAthC,KAAAwwD,aAAAxwD,KAAA4wD,kBAAA5wD,KAAAuwD,QAMAJ,GAAAnuD,UAAAgvD,SAAA,WACA,OAAAhxD,KAAA2wD,QAGe,IAAAM,GAAA,GC/GAC,GAAA,CACfC,OAAA,UCyBIC,GAAW,SAAAp0C,GACf,SAAAq0C,EAAAvkD,GACAkQ,EAAAzc,KAAAP,MAEA8M,EAAAu6C,cACArnD,KAAAqnD,YAAAv6C,EAAAu6C,aAOArnD,KAAAqwB,KAAA,KAEArwB,KAAAsxD,WAAA,GAwDA,OArDAt0C,IAAAq0C,EAAA3kD,UAAAsQ,GACAq0C,EAAArvD,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACAqvD,EAAArvD,UAAA+I,YAAAsmD,EAQAA,EAAArvD,UAAAmlD,UAAA,WACA,OAA8BnnD,KAAAiB,IAAciwD,GAAmBC,SAQ/DE,EAAArvD,UAAAmoD,OAAA,WACA,OAAAnqD,KAAAqwB,MASAghC,EAAArvD,UAAAqlD,YAAA,SAAAJ,GACA,UASAoK,EAAArvD,UAAAsvD,UAAA,SAAAC,GACAvxD,KAAAyR,IAAay/C,GAAmBC,OAAAI,IAShCF,EAAArvD,UAAAqiD,OAAA,SAAA/vC,GACAtU,KAAAqwB,KAAA/b,GAGA+8C,EAtEe,CAuEbzzC,GAQK,SAAA4zC,GAAArpC,EAAAgQ,EAAAs5B,GACP,IAAA7Y,EAAAzwB,EAAAkuB,YACA,GAAAuC,EAAA,CACA,IAAA9gB,EAAA3P,EAAA+wB,gBACA,CAAAN,EAAA,GAAAzgB,EAAA,GAAAygB,EAAA,GAAAzgB,EAAA,KACAs5B,EACAtpC,EAAAouB,QAAA,CACAa,SAAAqa,EACApa,OAAgB5c,GAChB3C,WAGA3P,EAAAwuB,UAAA7e,IAYO,SAAS45B,GAAMvpC,EAAAyQ,EAAA+S,EAAA8lB,GACtB74B,EAAAzQ,EAAAkxB,kBAAAzgB,EAAA,GACA+4B,GAAAxpC,EAAAyQ,EAAA+S,EAAA8lB,GAUO,SAAAE,GAAAxpC,EAAAyQ,EAAA+S,EAAA8lB,GACP,QAAArkD,IAAAwrB,EAAA,CACA,IAAAg5B,EAAAzpC,EAAAmuB,cACAsC,EAAAzwB,EAAAkuB,iBACAjpC,IAAAwkD,GAAAhZ,GAAA6Y,EAAA,EACAtpC,EAAAouB,QAAA,CACA3d,WACAkI,OAAA6K,EACAyL,SAAAqa,EACApa,OAAgB9c,KAGhBpS,EAAAsjB,OAAA7S,EAAA+S,IAoBO,SAAAmK,GAAA3tB,EAAA+P,EAAAyT,EAAA8lB,EAAArY,GACPlhB,EAAA/P,EAAA4tB,oBAAA7d,EAAA,EAAAkhB,GACAyY,GAAA1pC,EAAA+P,EAAAyT,EAAA8lB,GAUO,SAAAK,GAAA3pC,EAAAgQ,EAAAwT,EAAA8lB,GACP,IAAA5Y,EAAA1wB,EAAA6tB,gBACA9d,EAAA/P,EAAA4tB,oBAAA8C,EAAA1gB,EAAA,GAEA,QAAA/qB,IAAA8qB,EAAA,CACA,IAAAD,EAAA9P,EAAAiyB,iBACAliB,EAAiBzB,GACjByB,EACA/P,EAAAyxB,oBAAA3hB,IAAA50B,OAAA,GACA8kB,EAAAwxB,oBAAA1hB,EAAA,IAMA,GAAA0T,QAAAv+B,IAAA8qB,OAAA2gB,EAAA,CACA,IAAAD,EAAAzwB,EAAAkuB,YACAve,EAAA3P,EAAAowB,oBAAArgB,EAAAyT,GACA7T,EAAA3P,EAAA+wB,gBAAAphB,GAEA6T,EAAA,EACAzT,EAAA0gB,EAAA,GAAAC,EAAA/gB,EAAA,KACAI,EAAA2gB,IACA3gB,EAAA0gB,EAAA,GAAAC,EAAA/gB,EAAA,KACAI,EAAA2gB,IAIAgZ,GAAA1pC,EAAA+P,EAAAyT,EAAA8lB,GAUO,SAAAI,GAAA1pC,EAAA+P,EAAAyT,EAAA8lB,GACP,GAAAv5B,EAAA,CACA,IAAA2gB,EAAA1wB,EAAA6tB,gBACA4C,EAAAzwB,EAAAkuB,YACA,QAAAjpC,IAAAyrC,GAAAD,GACA1gB,IAAA2gB,GAAA4Y,EACAtpC,EAAAouB,QAAA,CACAre,aACA4I,OAAA6K,EACAyL,SAAAqa,EACApa,OAAgB9c,SAEX,CACL,GAAAoR,EAAA,CACA,IAAA7T,EAAA3P,EAAAowB,oBAAArgB,EAAAyT,GACAxjB,EAAAwuB,UAAA7e,GAEA3P,EAAA2zB,cAAA5jB,KAKe,IAAA65B,GAAA,GCzOfC,GAAA,SAAAX,GACA,SAAAW,EAAA5zC,GACAizC,EAAA9wD,KAAAP,KAAA,CACAqnD,YAAmB4K,KAGnB,IAAAnlD,EAAAsR,GAAA,GAMApe,KAAAkyD,OAAAplD,EAAAqrB,MAAArrB,EAAAqrB,MAAA,EAMAn4B,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAQA,OAJAia,IAAAW,EAAAtlD,UAAA2kD,GACAW,EAAAhwD,UAAAlB,OAAAY,OAAA2vD,KAAArvD,WACAgwD,EAAAhwD,UAAA+I,YAAAinD,EAEAA,EA1BA,CA2BED,IAUF,SAASE,GAAWhL,GACpB,IAAAkL,GAAA,EACA,GAAAlL,EAAA1zC,MAA8B6N,GAAmBnG,SAAA,CACjD,IAAAyE,EAA6CunC,EAAA,cAC7C3yC,EAAA2yC,EAAA3yC,IACAwsB,EAAAmmB,EAAAlnC,WACAoY,EAAAzY,EAAA+I,UAAAzoB,KAAAkyD,OAAAlyD,KAAAkyD,OACA/pC,EAAA7T,EAAAoyC,UACIoL,GAAW3pC,EAAAgQ,EAAA2I,EAAA9gC,KAAAuuD,WACftH,EAAAptC,iBACAs4C,GAAA,EAEA,OAAAA,EAGe,IAAAC,GAAA,GC7BRC,GAAA,SAAApL,GACP,IAAArnC,EAAqEqnC,EAAA,cACrE,OACArnC,EAAA4I,UACA5I,EAAA8I,SAAA9I,EAAA2I,UACA3I,EAAA6I,UAYW6pC,GAAK,SAAAh4C,GAChB,OAAAA,EAAApP,OAAAg7C,qBAAAv4C,SAAA4kD,eAWOC,GAAaj5C,EAwBbk5C,GAAA,SAAAxL,GACP,IAAArnC,EAA4CqnC,EAAA,cAC5C,UAAArnC,EAAA2D,UACQ9C,IAAUC,IAAGd,EAAA2I,UA2DdmqC,GAAA,SAAAzL,GACP,IAAArnC,EAAqEqnC,EAAA,cACrE,OACArnC,EAAA4I,UACA5I,EAAA8I,SAAA9I,EAAA2I,WACA3I,EAAA6I,UA6BOkqC,GAAA,SAAA1L,GACP,IAAArnC,EAAqEqnC,EAAA,cACrE,OACArnC,EAAA4I,UACA5I,EAAA8I,SAAA9I,EAAA2I,UACA3I,EAAA6I,UAYOmqC,GAAA,SAAA3L,GACP,IAAA/7C,EAAA+7C,EAAArnC,cAAA1U,OACA2nD,EAAmC,EAAAA,QACnC,MACA,UAAAA,GACA,WAAAA,GACA,aAAAA,GAWOC,GAAA,SAAA7L,GACP,IAAAjlC,EAA4E,EAAAA,aAG5E,OAFEgR,QAAM5lB,IAAA4U,EAAA,IAER,SAAAA,EAAA6C,aCxLIkuC,GAAkB,SAAA1B,GACtB,SAAA2B,EAAA50C,GAEA,IAAAtR,EAAAsR,GAAA,GAEAizC,EAAA9wD,KAA8EP,KAAA,GAE9E8M,EAAAmmD,kBACAjzD,KAAAizD,gBAAAnmD,EAAAmmD,iBAGAnmD,EAAAomD,kBACAlzD,KAAAkzD,gBAAApmD,EAAAomD,iBAGApmD,EAAAqmD,kBACAnzD,KAAAmzD,gBAAArmD,EAAAqmD,iBAGArmD,EAAAsmD,gBACApzD,KAAAozD,cAAAtmD,EAAAsmD,eAGAtmD,EAAAumD,WACArzD,KAAAqzD,SAAAvmD,EAAAumD,UAOArzD,KAAAszD,wBAAA,EAMAtzD,KAAAuzD,iBAAA,GAMAvzD,KAAAwzD,eAAA,GA8GA,OA1GAnC,IAAA2B,EAAAtmD,UAAA2kD,GACA2B,EAAAhxD,UAAAlB,OAAAY,OAAA2vD,KAAArvD,WACAgxD,EAAAhxD,UAAA+I,YAAAioD,EAQAA,EAAAhxD,UAAAixD,gBAAA,SAAAhM,GACA,UAQA+L,EAAAhxD,UAAAkxD,gBAAA,SAAAjM,KASA+L,EAAAhxD,UAAAqlD,YAAA,SAAAJ,GACA,IAAoE,eACpE,SAGA,IAAAkL,GAAA,EAEA,GADAnyD,KAAAyzD,uBAAAxM,GACAjnD,KAAAszD,wBACA,GAAArM,EAAA1zC,MAAkC6N,GAAmBE,YACrDthB,KAAAkzD,gBAAAjM,QACO,GAAAA,EAAA1zC,MAAkC6N,GAAmBK,UAAA,CAC5D,IAAAiyC,EAAA1zD,KAAAozD,cAAAnM,GACAjnD,KAAAszD,uBAAAI,GAAA1zD,KAAAwzD,eAAAnwD,OAAA,QAGA,GAAA4jD,EAAA1zC,MAAkC6N,GAAmBI,YAAA,CACrD,IAAAmyC,EAAA3zD,KAAAizD,gBAAAhM,GACA0M,GACA1M,EAAAptC,iBAEA7Z,KAAAszD,uBAAAK,EACAxB,EAAAnyD,KAAAqzD,SAAAM,QACO1M,EAAA1zC,MAAkC6N,GAAmBG,aAC5DvhB,KAAAmzD,gBAAAlM,GAGA,OAAAkL,GAQAa,EAAAhxD,UAAAmxD,gBAAA,SAAAlM,KAQA+L,EAAAhxD,UAAAoxD,cAAA,SAAAnM,GACA,UASA+L,EAAAhxD,UAAAqxD,SAAA,SAAAM,GACA,OAAAA,GAOAX,EAAAhxD,UAAAyxD,uBAAA,SAAAxM,GACA,GAAA2M,GAAA3M,GAAA,CACA,IAAA3sC,EAAA2sC,EAAAjlC,aAEAg+B,EAAA1lC,EAAAqK,UAAAnS,WACAy0C,EAAA1zC,MAAkC6N,GAAmBK,iBACrDzhB,KAAAuzD,iBAAAvT,GACOiH,EAAA1zC,MACG6N,GAAmBI,YAC7BxhB,KAAAuzD,iBAAAvT,GAAA1lC,EACO0lC,KAAAhgD,KAAAuzD,mBAEPvzD,KAAAuzD,iBAAAvT,GAAA1lC,GAEAta,KAAAwzD,eAA4Bj8C,EAASvX,KAAAuzD,oBAIrCP,EAzJsB,CA0JpBjB,IAOK,SAAS8B,GAAQC,GAIxB,IAHA,IAAAzwD,EAAAywD,EAAAzwD,OACA8gB,EAAA,EACAE,EAAA,EACAjkB,EAAA,EAAiBA,EAAAiD,EAAYjD,IAC7B+jB,GAAA2vC,EAAA1zD,GAAA+jB,QACAE,GAAAyvC,EAAA1zD,GAAAikB,QAEA,OAAAF,EAAA9gB,EAAAghB,EAAAhhB,GASA,SAAAuwD,GAAA3M,GACA,IAAA1zC,EAAA0zC,EAAA1zC,KACA,OAAAA,IAAkB6N,GAAmBI,aACrCjO,IAAa6N,GAAmBE,aAChC/N,IAAa6N,GAAmBK,UAIjB,IAAAsyC,GAAA,GC9MXC,GAAO,SAAAhB,GACX,SAAAiB,EAAA71C,GAEA40C,EAAAzyD,KAAAP,KAAA,CACAqzD,SAAgB75C,IAGhB,IAAA1M,EAAAsR,GAAA,GAMApe,KAAAk0D,SAAApnD,EAAAqnD,QAKAn0D,KAAAo0D,aAAA,KAKAp0D,KAAAq0D,mBAKAr0D,KAAAs0D,UAAA,EAMAt0D,KAAAu0D,WAAAznD,EAAA0nD,UAAA1nD,EAAA0nD,UAA8D9B,GAM9D1yD,KAAAy0D,YAAA,EAyGA,OArGAzB,IAAAiB,EAAAvnD,UAAAsmD,GACAiB,EAAAjyD,UAAAlB,OAAAY,OAAAsxD,KAAAhxD,WACAiyD,EAAAjyD,UAAA+I,YAAAkpD,EAKAA,EAAAjyD,UAAAkxD,gBAAA,SAAAjM,GACAjnD,KAAAs0D,WACAt0D,KAAAs0D,UAAA,EACAt0D,KAAAmqD,SAAAzD,UAAA7O,QAAsC1e,GAAQE,YAAA,IAE9C,IAAAm6B,EAAAxzD,KAAAwzD,eACAkB,EAAmBb,GAAoBL,GACvC,GAAAA,EAAAnwD,QAAArD,KAAAq0D,oBAIA,GAHAr0D,KAAAk0D,UACAl0D,KAAAk0D,SAAArD,OAAA6D,EAAA,GAAAA,EAAA,IAEA10D,KAAAo0D,aAAA,CACA,IAAAr1B,EAAA/+B,KAAAo0D,aAAA,GAAAM,EAAA,GACA11B,EAAA01B,EAAA,GAAA10D,KAAAo0D,aAAA,GACA9/C,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACA5uB,EAAA,CAAAiH,EAAAC,GACQ5E,GAAetC,EAAA3P,EAAA6tB,iBACflc,GAAgBhC,EAAA3P,EAAAmuB,eAChB5c,GAAa5B,EAAA3P,EAAAkuB,aACrBve,EAAA3P,EAAA+wB,gBAAAphB,GACA3P,EAAAwuB,UAAA7e,SAEK93B,KAAAk0D,UAGLl0D,KAAAk0D,SAAAhqC,QAEAlqB,KAAAo0D,aAAAM,EACA10D,KAAAq0D,mBAAAb,EAAAnwD,QAMA4wD,EAAAjyD,UAAAoxD,cAAA,SAAAnM,GACA,IAAA3yC,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACA,OAAA1mD,KAAAwzD,eAAAnwD,OAAA,CACA,IAAArD,KAAAy0D,YAAAz0D,KAAAk0D,UAAAl0D,KAAAk0D,SAAA/pC,MAAA,CACA,IAAAwqC,EAAA30D,KAAAk0D,SAAA5yB,cACAvH,EAAA/5B,KAAAk0D,SAAAlD,WACAl5B,EAAuE3P,EAAAkuB,YACvEue,EAAAtgD,EAAAgyC,uBAAAxuB,GACA8I,EAAAtsB,EAAA0L,uBAAA,CACA40C,EAAA,GAAAD,EAAAjyD,KAAAu3B,IAAAF,GACA66B,EAAA,GAAAD,EAAAjyD,KAAAy3B,IAAAJ,KAEA5R,EAAAouB,QAAA,CACAze,OAAA3P,EAAA+wB,gBAAAtY,GACAwW,SAAA,IACAC,OAAkB9c,KAOlB,OAJAv6B,KAAAs0D,WACAt0D,KAAAs0D,UAAA,EACAnsC,EAAA0vB,QAAqB1e,GAAQE,aAAA,KAE7B,EAQA,OANAr5B,KAAAk0D,UAGAl0D,KAAAk0D,SAAAhqC,QAEAlqB,KAAAo0D,aAAA,MACA,GAOAH,EAAAjyD,UAAAixD,gBAAA,SAAAhM,GACA,GAAAjnD,KAAAwzD,eAAAnwD,OAAA,GAAArD,KAAAu0D,WAAAtN,GAAA,CACA,IAAA3yC,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UAYA,OAXA1mD,KAAAo0D,aAAA,KAEAjsC,EAAA2vB,gBACA3vB,EAAAwuB,UAAAsQ,EAAA1nC,WAAAmpC,UAAA5wB,QAEA93B,KAAAk0D,UACAl0D,KAAAk0D,SAAAhqC,QAIAlqB,KAAAy0D,WAAAz0D,KAAAwzD,eAAAnwD,OAAA,GACA,EAEA,UAIA4wD,EAjJW,CAkJTF,IAEac,GAAA,GC/IXC,GAAU,SAAA9B,GACd,SAAA+B,EAAA32C,GAEA,IAAAtR,EAAAsR,GAAA,GAEA40C,EAAAzyD,KAAAP,KAAA,CACAqzD,SAAgB75C,IAOhBxZ,KAAAu0D,WAAAznD,EAAA0nD,UAAA1nD,EAAA0nD,UAA8DnC,GAM9DryD,KAAAg1D,gBAAA5nD,EAMApN,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAqEA,OAjEA4b,IAAA+B,EAAAroD,UAAAsmD,GACA+B,EAAA/yD,UAAAlB,OAAAY,OAAAsxD,KAAAhxD,WACA+yD,EAAA/yD,UAAA+I,YAAAgqD,EAKAA,EAAA/yD,UAAAkxD,gBAAA,SAAAjM,GACA,GAAS6L,GAAS7L,GAAlB,CAIA,IAAA3yC,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACA,GAAAv+B,EAAAmxB,iBAAA1gB,WAA2CD,GAA3C,CAGA,IAAAoF,EAAAzpB,EAAAmyC,UACAjuB,EAAAyuB,EAAApnC,MACAkZ,EACAr2B,KAAAq/B,MAAAhE,EAAA,KAAAvF,EAAA,GAAAA,EAAA,GAAAuF,EAAA,MACA,QAAA3wB,IAAApN,KAAAg1D,WAAA,CACA,IAAA78B,EAAAY,EAAA/4B,KAAAg1D,WACAp8B,EAAAzQ,EAAAmuB,cACMqb,GAAwBxpC,EAAAyQ,EAAAT,GAE9Bn4B,KAAAg1D,WAAAj8B,KAOAg8B,EAAA/yD,UAAAoxD,cAAA,SAAAnM,GACA,IAAS6L,GAAS7L,GAClB,SAGA,IAAA3yC,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACAv+B,EAAA0vB,QAAiB1e,GAAQE,aAAA,GACzB,IAAAT,EAAAzQ,EAAAmuB,cAEA,OADIob,GAAMvpC,EAAAyQ,OAAAxrB,EAAApN,KAAAuuD,YACV,GAOAwG,EAAA/yD,UAAAixD,gBAAA,SAAAhM,GACA,IAAS6L,GAAS7L,GAClB,SAGA,GAAQwL,GAAiBxL,IAAAjnD,KAAAu0D,WAAAtN,GAAA,CACzB,IAAA3yC,EAAA2yC,EAAA3yC,IAGA,OAFAA,EAAAoyC,UAAA7O,QAA4B1e,GAAQE,YAAA,GACpCr5B,KAAAg1D,gBAAA5nD,GACA,EAEA,UAIA2nD,EA9Fc,CA+FZhB,IAEakB,GAAA,GCxHXC,GAAS,SAAAl7C,GACb,SAAAm7C,EAAA9S,GACAroC,EAAAzZ,KAAAP,MAMAA,KAAAo1D,UAAA,KAMAp1D,KAAA4uB,SAA8CjhB,SAAAqC,cAAA,OAC9ChQ,KAAA4uB,SAAA3e,MAAAI,SAAA,WACArQ,KAAA4uB,SAAAyzB,UAAA,UAAAA,EAMAriD,KAAAqwB,KAAA,KAMArwB,KAAAq1D,YAAA,KAMAr1D,KAAAs1D,UAAA,KAoFA,OAhFAt7C,IAAAm7C,EAAAzoD,UAAAsN,GACAm7C,EAAAnzD,UAAAlB,OAAAY,OAAAsY,KAAAhY,WACAmzD,EAAAnzD,UAAA+I,YAAAoqD,EAKAA,EAAAnzD,UAAAqX,gBAAA,WACArZ,KAAAqkD,OAAA,OAMA8Q,EAAAnzD,UAAAuzD,QAAA,WACA,IAAAC,EAAAx1D,KAAAq1D,YACAI,EAAAz1D,KAAAs1D,UACAI,EAAA,KACAzlD,EAAAjQ,KAAA4uB,SAAA3e,MACAA,EAAA7K,KAAA1C,KAAA8B,IAAAgxD,EAAA,GAAAC,EAAA,IAAAC,EACAzlD,EAAAS,IAAAhO,KAAA8B,IAAAgxD,EAAA,GAAAC,EAAA,IAAAC,EACAzlD,EAAA2Y,MAAAlmB,KAAA6hB,IAAAkxC,EAAA,GAAAD,EAAA,IAAAE,EACAzlD,EAAAhL,OAAAvC,KAAA6hB,IAAAkxC,EAAA,GAAAD,EAAA,IAAAE,GAMAP,EAAAnzD,UAAAqiD,OAAA,SAAA/vC,GACA,GAAAtU,KAAAqwB,KAAA,CACArwB,KAAAqwB,KAAAs2B,sBAAA51C,YAAA/Q,KAAA4uB,UACA,IAAA3e,EAAAjQ,KAAA4uB,SAAA3e,MACAA,EAAA7K,KAAA6K,EAAAS,IAAAT,EAAA2Y,MAAA3Y,EAAAhL,OAAA,UAEAjF,KAAAqwB,KAAA/b,EACAtU,KAAAqwB,MACArwB,KAAAqwB,KAAAs2B,sBAAA/1C,YAAA5Q,KAAA4uB,WAQAumC,EAAAnzD,UAAA2zD,UAAA,SAAAH,EAAAC,GACAz1D,KAAAq1D,YAAAG,EACAx1D,KAAAs1D,UAAAG,EACAz1D,KAAA41D,yBACA51D,KAAAu1D,WAMAJ,EAAAnzD,UAAA4zD,uBAAA,WACA,IAAAJ,EAAAx1D,KAAAq1D,YACAI,EAAAz1D,KAAAs1D,UACAO,EAAA,CACAL,EACA,CAAAA,EAAA,GAAAC,EAAA,IACAA,EACA,CAAAA,EAAA,GAAAD,EAAA,KAEAj6B,EAAAs6B,EAAAvhD,IAAAtU,KAAAqwB,KAAArQ,uBAAAhgB,KAAAqwB,MAEAkL,EAAA,GAAAA,EAAA,GAAA/0B,QACAxG,KAAAo1D,UAGAp1D,KAAAo1D,UAAA7nB,eAAA,CAAAhS,IAFAv7B,KAAAo1D,UAAA,IAA2BnhB,GAAO,CAAA1Y,KASlC45B,EAAAnzD,UAAA8zD,YAAA,WACA,OAAA91D,KAAAo1D,WAGAD,EAtHa,CAuHX77C,GAGay8C,GAAA,GC3FfC,GAAA,CAMAC,SAAA,WAOAC,QAAA,UAOAC,OAAA,UASAC,GAAA,SAAA18C,GACA,SAAA08C,EAAA7iD,EAAAwM,EAAAknC,GACAvtC,EAAAnZ,KAAAP,KAAAuT,GAQAvT,KAAA+f,aAOA/f,KAAAinD,kBAQA,OAJAvtC,IAAA08C,EAAA1pD,UAAAgN,GACA08C,EAAAp0D,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACAo0D,EAAAp0D,UAAA+I,YAAAqrD,EAEAA,EAzBA,CA0BEt8C,GAiBEu8C,GAAO,SAAArD,GACX,SAAAsD,EAAAl4C,GAEA40C,EAAAzyD,KAAAP,MAEA,IAAA8M,EAAAsR,GAAA,GAMApe,KAAAu2D,KAAA,IAAoBR,GAASjpD,EAAAu1C,WAAA,cAM7BriD,KAAAw2D,cAAAppD,IAAAN,EAAAtE,QAAAsE,EAAAtE,QAAA,GAOAxI,KAAAy2D,UAAA3pD,EAAA4pD,SAAA5pD,EAAA4pD,SAA2Dj9C,EAM3DzZ,KAAAq1D,YAAA,KAMAr1D,KAAAu0D,WAAAznD,EAAA0nD,UAAA1nD,EAAA0nD,UAA8DhC,GAM9DxyD,KAAA22D,iBAAA7pD,EAAA8pD,gBACA9pD,EAAA8pD,gBAAA52D,KAAA62D,uBAoFA,OAjFA7D,IAAAsD,EAAA5pD,UAAAsmD,GACAsD,EAAAt0D,UAAAlB,OAAAY,OAAAsxD,KAAAhxD,WACAs0D,EAAAt0D,UAAA+I,YAAAurD,EAWAA,EAAAt0D,UAAA60D,uBAAA,SAAA5P,EAAAuO,EAAAC,GACA,IAAA7sC,EAAA6sC,EAAA,GAAAD,EAAA,GACAvwD,EAAAwwD,EAAA,GAAAD,EAAA,GACA,OAAA5sC,IAAA3jB,KAAAjF,KAAAw2D,UAQAF,EAAAt0D,UAAA8zD,YAAA,WACA,OAAA91D,KAAAu2D,KAAAT,eAMAQ,EAAAt0D,UAAAkxD,gBAAA,SAAAjM,GACS6L,GAAS7L,KAIlBjnD,KAAAu2D,KAAAZ,UAAA31D,KAAAq1D,YAAApO,EAAApnC,OAEA7f,KAAAqa,cAAA,IAAA+7C,GAAAJ,GAAAE,QACAjP,EAAAlnC,WAAAknC,MAMAqP,EAAAt0D,UAAAoxD,cAAA,SAAAnM,GACA,OAAS6L,GAAS7L,KAIlBjnD,KAAAu2D,KAAAlS,OAAA,MAEArkD,KAAA22D,iBAAA1P,EAAAjnD,KAAAq1D,YAAApO,EAAApnC,SACA7f,KAAAy2D,UAAAxP,GACAjnD,KAAAqa,cAAA,IAAA+7C,GAAAJ,GAAAG,OACAlP,EAAAlnC,WAAAknC,MAEA,IAMAqP,EAAAt0D,UAAAixD,gBAAA,SAAAhM,GACA,QAAS6L,GAAS7L,QAIVwL,GAAiBxL,KACzBjnD,KAAAu0D,WAAAtN,MACAjnD,KAAAq1D,YAAApO,EAAApnC,MACA7f,KAAAu2D,KAAAlS,OAAA4C,EAAA3yC,KACAtU,KAAAu2D,KAAAZ,UAAA31D,KAAAq1D,YAAAr1D,KAAAq1D,aACAr1D,KAAAqa,cAAA,IAAA+7C,GAAAJ,GAAAC,SACAhP,EAAAlnC,WAAAknC,KACA,KAMAqP,EA/HW,CAgITvC,IAGa+C,GAAA,GCjNXC,GAAQ,SAAAT,GACZ,SAAAU,EAAA54C,GACA,IAAAtR,EAAAsR,GAAA,GAEAo2C,EAAA1nD,EAAA0nD,UAAA1nD,EAAA0nD,UAA4D7B,GAE5D2D,EAAA/1D,KAAAP,KAAA,CACAw0D,YACAnS,UAAAv1C,EAAAu1C,WAAA,cACAqU,cAOA12D,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAMAp3C,KAAAi3D,UAAA7pD,IAAAN,EAAAihB,KAAAjhB,EAAAihB,IAOA,OAJAuoC,IAAAU,EAAAtqD,UAAA4pD,GACAU,EAAAh1D,UAAAlB,OAAAY,OAAA40D,KAAAt0D,WACAg1D,EAAAh1D,UAAA+I,YAAAisD,EAEAA,EA7BY,CA8BVF,IAMF,SAAAJ,KACA,IAAApiD,EAAAtU,KAAAmqD,SACAhiC,EAAsD7T,EAAAoyC,UACtD3oB,EAAmDzpB,EAAAmyC,UACnD5uB,EAAA73B,KAAA81D,cAAApyB,YAEA,GAAA1jC,KAAAi3D,KAAA,CACA,IAAAC,EAAA/uC,EAAAsxB,gBAAA1b,GACAo5B,EAAyB36B,GAA6B,CACtDloB,EAAAgyC,uBAAiCnpB,GAAatF,IAC9CvjB,EAAAgyC,uBAAiCjpB,GAAWxF,MAC5Cu/B,EAAAjvC,EAAAkyB,uBAAA8c,EAAAp5B,GAEIe,GAAeo4B,EAAA,EAAAE,GACnBv/B,EAAAq/B,EAGA,IAAAh/B,EAAA/P,EAAA4tB,oBACA5tB,EAAAkyB,uBAAAxiB,EAAAkG,IAEAjG,EAAe6F,GAAS9F,GACxBC,EAAA3P,EAAA+wB,gBAAAphB,GAEA3P,EAAAouB,QAAA,CACAre,aACAJ,SACAsf,SAAAp3C,KAAAuuD,UACAlX,OAAY9c,KAKG,IAAA88B,GAAA,GC5FAC,GAAA,CACfj8B,KAAA,GACAk8B,GAAA,GACAp8B,MAAA,GACAq8B,KAAA,ICwBIC,GAAW,SAAApG,GACf,SAAAqG,EAAAt5C,GAEAizC,EAAA9wD,KAAAP,KAAA,CACAqnD,YAAmBsQ,KAGnB,IAAA7qD,EAAAsR,GAAA,GAOApe,KAAA43D,kBAAA,SAAA3Q,GACA,OAAayL,GAAczL,IACnB2L,GAAiB3L,IAOzBjnD,KAAAu0D,gBAAAnnD,IAAAN,EAAA0nD,UACA1nD,EAAA0nD,UAAAx0D,KAAA43D,kBAMA53D,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAMAp3C,KAAA63D,iBAAAzqD,IAAAN,EAAAgrD,WACAhrD,EAAAgrD,WAAA,IAQA,OAJAzG,IAAAqG,EAAAhrD,UAAA2kD,GACAqG,EAAA11D,UAAAlB,OAAAY,OAAA2vD,KAAArvD,WACA01D,EAAA11D,UAAA+I,YAAA2sD,EAEAA,EA7Ce,CA8Cb3F,IAWF,SAAS4F,GAAW1Q,GACpB,IAAAkL,GAAA,EACA,GAAAlL,EAAA1zC,MAA8BqH,EAASU,QAAA,CACvC,IAAAy8C,EAA4C9Q,EAAA,cAC5C+Q,EAAAD,EAAAC,QACA,GAAAh4D,KAAAu0D,WAAAtN,KACA+Q,GAAoBV,GAAOE,MAC3BQ,GAAmBV,GAAOj8B,MAC1B28B,GAAmBV,GAAOn8B,OAC1B68B,GAAmBV,GAAOC,IAAA,CAC1B,IAAAjjD,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACAuR,EAAA9vC,EAAA6tB,gBAAAh2C,KAAA63D,YACA94B,EAAA,EAAAC,EAAA,EACAg5B,GAAqBV,GAAOE,KAC5Bx4B,GAAAi5B,EACOD,GAAqBV,GAAOj8B,KACnC0D,GAAAk5B,EACOD,GAAqBV,GAAOn8B,MACnC4D,EAAAk5B,EAEAj5B,EAAAi5B,EAEA,IAAA9/B,EAAA,CAAA4G,EAAAC,GACMlF,GAAgB3B,EAAAhQ,EAAAmuB,eAChBkb,GAAGrpC,EAAAgQ,EAAAn4B,KAAAuuD,WACTtH,EAAAptC,iBACAs4C,GAAA,GAGA,OAAAA,EAGe,IAAA+F,GAAA,GC9FXC,GAAY,SAAA9G,GAChB,SAAA+G,EAAAh6C,GAEAizC,EAAA9wD,KAAAP,KAAA,CACAqnD,YAAmBgR,KAGnB,IAAAvrD,EAAAsR,GAAA,GAMApe,KAAAu0D,WAAAznD,EAAA0nD,UAAA1nD,EAAA0nD,UAA8D5B,GAM9D5yD,KAAAkyD,OAAAplD,EAAAqrB,MAAArrB,EAAAqrB,MAAA,EAMAn4B,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAQA,OAJAia,IAAA+G,EAAA1rD,UAAA2kD,GACA+G,EAAAp2D,UAAAlB,OAAAY,OAAA2vD,KAAArvD,WACAo2D,EAAAp2D,UAAA+I,YAAAqtD,EAEAA,EAjCgB,CAkCdrG,IAWF,SAASsG,GAAWpR,GACpB,IAAAkL,GAAA,EACA,GAAAlL,EAAA1zC,MAA8BqH,EAASU,SACvC2rC,EAAA1zC,MAA8BqH,EAASW,SAAA,CACvC,IAAAw8C,EAA4C9Q,EAAA,cAC5CqR,EAAAP,EAAAO,SACA,GAAAt4D,KAAAu0D,WAAAtN,KACAqR,GAAA,IAAAC,WAAA,IAAAD,GAAA,IAAAC,WAAA,KACA,IAAAjkD,EAAA2yC,EAAA3yC,IACA6jB,EAAAmgC,GAAA,IAAAC,WAAA,GAAAv4D,KAAAkyD,QAAAlyD,KAAAkyD,OACA/pC,EAAA7T,EAAAoyC,UACMoL,GAAW3pC,EAAAgQ,OAAA/qB,EAAApN,KAAAuuD,WACjBtH,EAAAptC,iBACAs4C,GAAA,GAGA,OAAAA,EAGe,IAAAqG,GAAA,GChFfC,GAAA,EAMOC,GAAA,CACPC,SAAA,WACAx8C,MAAA,SA0BIy8C,GAAc,SAAAvH,GAClB,SAAAwH,EAAAz6C,GAEA,IAAAtR,EAAAsR,GAAA,GAEAizC,EAAA9wD,KAA8EP,KAAA,GAM9EA,KAAAkyD,OAAA,EAMAlyD,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAMAp3C,KAAA84D,cAAA1rD,IAAAN,EAAAisD,QAAAjsD,EAAAisD,QAAA,GAMA/4D,KAAAg5D,gBAAA5rD,IAAAN,EAAAmsD,WAAAnsD,EAAAmsD,UAMAj5D,KAAAk5D,qBAAApsD,EAAAipC,sBAAA,EAMA/1C,KAAAu0D,WAAAznD,EAAA0nD,UAAA1nD,EAAA0nD,UAA8DhC,GAM9DxyD,KAAAm5D,YAAA,KAMAn5D,KAAAo5D,gBAAAhsD,EAMApN,KAAAq5D,WAMAr5D,KAAAs5D,WAAAlsD,EAOApN,KAAAu5D,kBAAA,IAKAv5D,KAAAw5D,mBAOAx5D,KAAAy5D,sBAAA,IAOAz5D,KAAA05D,oBAAA,IA0KA,OAtKArI,IAAAwH,EAAAnsD,UAAA2kD,GACAwH,EAAA72D,UAAAlB,OAAAY,OAAA2vD,KAAArvD,WACA62D,EAAA72D,UAAA+I,YAAA8tD,EAKAA,EAAA72D,UAAA23D,0BAAA,WACA35D,KAAAw5D,wBAAApsD,EACA,IAAA+a,EAAAnoB,KAAAmqD,SAAAzD,UACAv+B,EAAA0vB,QAAiB1e,GAAQE,aAAA,IAQzBw/B,EAAA72D,UAAAqlD,YAAA,SAAAJ,GACA,IAAAjnD,KAAAu0D,WAAAtN,GACA,SAEA,IAAA1zC,EAAA0zC,EAAA1zC,KACA,GAAAA,IAAiBqH,EAASuB,OAAA5I,IAAmBqH,EAASiB,WACtD,SAGAorC,EAAAptC,iBAEA,IASAse,EATA7jB,EAAA2yC,EAAA3yC,IACAslD,EAA2C3S,EAAA,cAyB3C,GAvBAjnD,KAAAg5D,aACAh5D,KAAAm5D,YAAAlS,EAAAlnC,YAMAknC,EAAA1zC,MAAgCqH,EAASuB,OACzCgc,EAAAyhC,EAAA56B,OACUze,IACVq5C,EAAAC,YAAAC,WAAAC,kBACA5hC,GAAiBxX,IAEjBi5C,EAAAC,YAAAC,WAAAE,iBACA7hC,GAAA,KAEK8uB,EAAA1zC,MAAkCqH,EAASiB,aAChDsc,GAAAyhC,EAAAK,YACUz5C,KACV2X,GAAA,IAIA,IAAAA,EACA,SAGA,IAAA6e,EAAAD,KAAAC,MAYA,QAVA5pC,IAAApN,KAAAo5D,aACAp5D,KAAAo5D,WAAApiB,KAGAh3C,KAAAs5D,OAAAtiB,EAAAh3C,KAAAo5D,WAAAp5D,KAAAu5D,qBACAv5D,KAAAs5D,MAAA52D,KAAA6hB,IAAA4T,GAAA,EACAugC,GAAAC,SACAD,GAAAv8C,OAGAnc,KAAAs5D,QAAAZ,GAAAC,SAAA,CACA,IAAAxwC,EAAA7T,EAAAoyC,UACA1mD,KAAAw5D,mBACAtsC,aAAAltB,KAAAw5D,oBAEArxC,EAAA0vB,QAAqB1e,GAAQE,YAAA,GAE7Br5B,KAAAw5D,mBAAAxsC,WAAAhtB,KAAA25D,0BAAA/3D,KAAA5B,WAAAu5D,mBACA,IAAArhC,EAAA/P,EAAA6tB,gBAAAtzC,KAAAkF,IAAA,EAAAuwB,EAAAn4B,KAAAy5D,uBACAxkB,EAAA9sB,EAAAyxB,mBACAthB,EAAAnQ,EAAAwxB,mBACAugB,EAAA,EAQA,GAPAhiC,EAAA+c,GACA/c,EAAAx1B,KAAAC,IAAAu1B,EAAA+c,EAAAj1C,KAAA05D,qBACAQ,EAAA,GACOhiC,EAAAI,IACPJ,EAAAx1B,KAAA8B,IAAA0zB,EAAAI,EAAAt4B,KAAA05D,qBACAQ,GAAA,GAEAl6D,KAAAm5D,YAAA,CACA,IAAArhC,EAAA3P,EAAAowB,oBAAArgB,EAAAl4B,KAAAm5D,aACAhxC,EAAAwuB,UAAAxuB,EAAA+wB,gBAAAphB,IA6BA,OA3BA3P,EAAA2zB,cAAA5jB,GAEA,IAAAgiC,GAAAl6D,KAAAk5D,sBACA/wC,EAAAouB,QAAA,CACAre,WAAA/P,EAAA4tB,oBAAA7d,EAAAC,EAAA,QACAkf,OAAkB9c,GAClBuG,OAAA9gC,KAAAm5D,YACA/hB,SAAAp3C,KAAAuuD,YAIA2L,EAAA,EACA/xC,EAAAouB,QAAA,CACAre,WAAA+c,EACAoC,OAAkB9c,GAClBuG,OAAA9gC,KAAAm5D,YACA/hB,SAAA,MAEO8iB,EAAA,GACP/xC,EAAAouB,QAAA,CACAre,WAAAI,EACA+e,OAAkB9c,GAClBuG,OAAA9gC,KAAAm5D,YACA/hB,SAAA,MAGAp3C,KAAAo5D,WAAApiB,GACA,EAGAh3C,KAAAkyD,QAAA/5B,EAEA,IAAAgiC,EAAAz3D,KAAAC,IAAA3C,KAAA84D,UAAA9hB,EAAAh3C,KAAAo5D,YAAA,GAKA,OAHAlsC,aAAAltB,KAAAq5D,YACAr5D,KAAAq5D,WAAArsC,WAAAhtB,KAAAo6D,iBAAAx4D,KAAA5B,KAAAsU,GAAA6lD,IAEA,GAOAtB,EAAA72D,UAAAo4D,iBAAA,SAAA9lD,GACA,IAAA6T,EAAA7T,EAAAoyC,UACAv+B,EAAA2vB,gBACA3vB,EAAA6vB,mBAEA,IAAAtJ,EAAA+pB,GACAtgC,EAAgB1B,GAAKz2B,KAAAkyD,QAAAxjB,KACjBojB,GAAW3pC,GAAAgQ,EAAAn4B,KAAAm5D,YAAAn5D,KAAAuuD,WACfvuD,KAAAs5D,WAAAlsD,EACApN,KAAAkyD,OAAA,EACAlyD,KAAAm5D,YAAA,KACAn5D,KAAAo5D,gBAAAhsD,EACApN,KAAAq5D,gBAAAjsD,GASAyrD,EAAA72D,UAAAq4D,eAAA,SAAApB,GACAj5D,KAAAg5D,WAAAC,EACAA,IACAj5D,KAAAm5D,YAAA,OAIAN,EArQkB,CAsQhB9G,IAEauI,GAAA,GClSXC,GAAW,SAAAvH,GACf,SAAAwH,EAAAp8C,GAEA,IAAAtR,EAAAsR,GAAA,GAEAq8C,EAAmE,EAEnEA,EAAApH,WACAoH,EAAApH,SAAgC75C,GAGhCw5C,EAAAzyD,KAAAP,KAAAy6D,GAMAz6D,KAAA06D,QAAA,KAMA16D,KAAAg1D,gBAAA5nD,EAMApN,KAAA26D,WAAA,EAMA36D,KAAA46D,eAAA,EAMA56D,KAAA66D,gBAAAztD,IAAAN,EAAAguD,UAAAhuD,EAAAguD,UAAA,GAMA96D,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IA6FA,OAzFA4b,IAAAwH,EAAA9tD,UAAAsmD,GACAwH,EAAAx4D,UAAAlB,OAAAY,OAAAsxD,KAAAhxD,WACAw4D,EAAAx4D,UAAA+I,YAAAyvD,EAKAA,EAAAx4D,UAAAkxD,gBAAA,SAAAjM,GACA,IAAA8T,EAAA,EAEAC,EAAAh7D,KAAAwzD,eAAA,GACAyH,EAAAj7D,KAAAwzD,eAAA,GAGAz5B,EAAAr3B,KAAAq/B,MACAk5B,EAAA52C,QAAA22C,EAAA32C,QACA42C,EAAA92C,QAAA62C,EAAA72C,SAEA,QAAA/W,IAAApN,KAAAg1D,WAAA,CACA,IAAA78B,EAAA4B,EAAA/5B,KAAAg1D,WACAh1D,KAAA46D,gBAAAziC,GACAn4B,KAAA26D,WACAj4D,KAAA6hB,IAAAvkB,KAAA46D,gBAAA56D,KAAA66D,aACA76D,KAAA26D,WAAA,GAEAI,EAAA5iC,EAEAn4B,KAAAg1D,WAAAj7B,EAEA,IAAAzlB,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACA,GAAAv+B,EAAAmxB,iBAAA1gB,WAA2CD,GAA3C,CAOA,IAAAmtB,EAAAxxC,EAAAqc,cAAAo1B,wBACA2O,EAAmBb,GAAoB7zD,KAAAwzD,gBAMvC,GALAkB,EAAA,IAAA5O,EAAA1gD,KACAsvD,EAAA,IAAA5O,EAAAp1C,IACA1Q,KAAA06D,QAAApmD,EAAA0L,uBAAA00C,GAGA10D,KAAA26D,UAAA,CACA,IAAA/hC,EAAAzQ,EAAAmuB,cACAhiC,EAAAuzC,SACM8J,GAAwBxpC,EAAAyQ,EAAAmiC,EAAA/6D,KAAA06D,YAO9BF,EAAAx4D,UAAAoxD,cAAA,SAAAnM,GACA,GAAAjnD,KAAAwzD,eAAAnwD,OAAA,GACA,IAAAiR,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UAEA,GADAv+B,EAAA0vB,QAAmB1e,GAAQE,aAAA,GAC3Br5B,KAAA26D,UAAA,CACA,IAAA/hC,EAAAzQ,EAAAmuB,cACQob,GAAMvpC,EAAAyQ,EAAA54B,KAAA06D,QAAA16D,KAAAuuD,WAEd,SAEA,UAOAiM,EAAAx4D,UAAAixD,gBAAA,SAAAhM,GACA,GAAAjnD,KAAAwzD,eAAAnwD,QAAA,GACA,IAAAiR,EAAA2yC,EAAA3yC,IAQA,OAPAtU,KAAA06D,QAAA,KACA16D,KAAAg1D,gBAAA5nD,EACApN,KAAA26D,WAAA,EACA36D,KAAA46D,eAAA,EACA56D,KAAAszD,wBACAh/C,EAAAoyC,UAAA7O,QAA8B1e,GAAQE,YAAA,IAEtC,EAEA,UAIAmhC,EA5Ie,CA6IbzG,IAEamH,GAAA,GChJXC,GAAS,SAAAnI,GACb,SAAAoI,EAAAh9C,GAEA,IAAAtR,EAAAsR,GAAA,GAEAq8C,EAAmE,EAEnEA,EAAApH,WACAoH,EAAApH,SAAgC75C,GAGhCw5C,EAAAzyD,KAAAP,KAAAy6D,GAMAz6D,KAAAk5D,qBAAApsD,EAAAipC,sBAAA,EAMA/1C,KAAA06D,QAAA,KAMA16D,KAAAuuD,eAAAnhD,IAAAN,EAAAsqC,SAAAtqC,EAAAsqC,SAAA,IAMAp3C,KAAAq7D,mBAAAjuD,EAMApN,KAAAs7D,gBAAA,EAoGA,OAhGAtI,IAAAoI,EAAA1uD,UAAAsmD,GACAoI,EAAAp5D,UAAAlB,OAAAY,OAAAsxD,KAAAhxD,WACAo5D,EAAAp5D,UAAA+I,YAAAqwD,EAKAA,EAAAp5D,UAAAkxD,gBAAA,SAAAjM,GACA,IAAAsU,EAAA,EAEAP,EAAAh7D,KAAAwzD,eAAA,GACAyH,EAAAj7D,KAAAwzD,eAAA,GACAlvC,EAAA02C,EAAA72C,QAAA82C,EAAA92C,QACAK,EAAAw2C,EAAA32C,QAAA42C,EAAA52C,QAGAswC,EAAAjyD,KAAAwF,KAAAoc,IAAAE,UAEApX,IAAApN,KAAAq7D,gBACAE,EAAAv7D,KAAAq7D,cAAA1G,GAEA30D,KAAAq7D,cAAA1G,EAGA,IAAArgD,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACAxuB,EAAA/P,EAAA6tB,gBACA1d,EAAAnQ,EAAAwxB,mBACA1E,EAAA9sB,EAAAyxB,mBACA6V,EAAAv3B,EAAAqjC,EACA9L,EAAAn3B,GACAijC,EAAAjjC,EAAAJ,EACAu3B,EAAAn3B,GACKm3B,EAAAxa,IACLsmB,EAAAtmB,EAAA/c,EACAu3B,EAAAxa,GAGA,GAAAsmB,IACAv7D,KAAAs7D,gBAAAC,GAIA,IAAAzV,EAAAxxC,EAAAqc,cAAAo1B,wBACA2O,EAAmBb,GAAoB7zD,KAAAwzD,gBACvCkB,EAAA,IAAA5O,EAAA1gD,KACAsvD,EAAA,IAAA5O,EAAAp1C,IACA1Q,KAAA06D,QAAApmD,EAAA0L,uBAAA00C,GAGApgD,EAAAuzC,SACIgK,GAAsB1pC,EAAAsnC,EAAAzvD,KAAA06D,UAM1BU,EAAAp5D,UAAAoxD,cAAA,SAAAnM,GACA,GAAAjnD,KAAAwzD,eAAAnwD,OAAA,GACA,IAAAiR,EAAA2yC,EAAA3yC,IACA6T,EAAA7T,EAAAoyC,UACAv+B,EAAA0vB,QAAmB1e,GAAQE,aAAA,GAC3B,IAAAnB,EAAA/P,EAAA6tB,gBACA,GAAAh2C,KAAAk5D,sBACAhhC,EAAA/P,EAAAyxB,oBACA1hB,EAAA/P,EAAAwxB,mBAAA,CAIA,IAAA3vB,EAAAhqB,KAAAs7D,gBAAA,EACQxlB,GAAI3tB,EAAA+P,EAAAl4B,KAAA06D,QAAA16D,KAAAuuD,UAAAvkC,GAEZ,SAEA,UAOAoxC,EAAAp5D,UAAAixD,gBAAA,SAAAhM,GACA,GAAAjnD,KAAAwzD,eAAAnwD,QAAA,GACA,IAAAiR,EAAA2yC,EAAA3yC,IAOA,OANAtU,KAAA06D,QAAA,KACA16D,KAAAq7D,mBAAAjuD,EACApN,KAAAs7D,gBAAA,EACAt7D,KAAAszD,wBACAh/C,EAAAoyC,UAAA7O,QAA8B1e,GAAQE,YAAA,IAEtC,EAEA,UAIA+hC,EA7Ia,CA8IXrH,IAEayH,GAAA,GC/ER,SAASC,GAAQr9C,GAExB,IAAAtR,EAAAsR,GAAA,GAEA+kC,EAAA,IAAyB/jC,EAEzB+0C,EAAA,IAAoBlD,IAAO,cAE3ByK,OAAAtuD,IAAAN,EAAA4uD,oBACA5uD,EAAA4uD,mBACAA,GACAvY,EAAAz9C,KAAA,IAA0BuvD,IAG1B,IAAA0G,OAAAvuD,IAAAN,EAAA6uD,iBACA7uD,EAAA6uD,gBACAA,GACAxY,EAAAz9C,KAAA,IAA0B0sD,GAAe,CACzCj6B,MAAArrB,EAAA8uD,UACAxkB,SAAAtqC,EAAA+uD,gBAIA,IAAAC,OAAA1uD,IAAAN,EAAAgvD,SAAAhvD,EAAAgvD,QACAA,GACA3Y,EAAAz9C,KAAA,IAA0BmvD,GAAO,CACjCL,UAAA1nD,EAAAivD,YAAuCzJ,QAAKllD,EAC5C+mD,aAIA,IAAA6H,OAAA5uD,IAAAN,EAAAkvD,aAAAlvD,EAAAkvD,YAEAA,GACA7Y,EAAAz9C,KAAA,IAA0Bw1D,IAG1B,IAAAe,OAAA7uD,IAAAN,EAAAmvD,WAAAnvD,EAAAmvD,UACAA,GACA9Y,EAAAz9C,KAAA,IAA0B81D,GAAS,CACnCzlB,oBAAAjpC,EAAAipC,oBACAqB,SAAAtqC,EAAA+uD,gBAIA,IAAAK,OAAA9uD,IAAAN,EAAAovD,UAAApvD,EAAAovD,SACAA,IACA/Y,EAAAz9C,KAAA,IAA0BwyD,IAC1B/U,EAAAz9C,KAAA,IAA0B8yD,GAAY,CACtCrgC,MAAArrB,EAAA8uD,UACAxkB,SAAAtqC,EAAA+uD,iBAIA,IAAAM,OAAA/uD,IAAAN,EAAAqvD,gBACArvD,EAAAqvD,eACAA,GACAhZ,EAAAz9C,KAAA,IAA0B40D,GAAc,CACxC9F,UAAA1nD,EAAAivD,YAAuCzJ,QAAKllD,EAC5C2oC,oBAAAjpC,EAAAipC,oBACAqB,SAAAtqC,EAAA+uD,gBAIA,IAAAO,OAAAhvD,IAAAN,EAAAsvD,eACAtvD,EAAAsvD,cAOA,OANAA,GACAjZ,EAAAz9C,KAAA,IAA0B2xD,GAAQ,CAClCjgB,SAAAtqC,EAAA+uD,gBAIA1Y,ECvJO,IAAAkZ,GAAA,GAOAC,IAAA,ECNHC,GAAS,SAAAlgD,GACb,SAAAmgD,EAAA3kC,EAAAK,EAAAyiB,EAAA7kB,GAEAzZ,EAAA9b,KAAAP,MAMAA,KAAA63B,SAMA73B,KAAAwhD,YAAA7G,EAMA36C,KAAAk4B,aAMAl4B,KAAA81B,QA2DA,OAvDAzZ,IAAAmgD,EAAA9vD,UAAA2P,GACAmgD,EAAAx6D,UAAAlB,OAAAY,OAAA2a,KAAAra,WACAw6D,EAAAx6D,UAAA+I,YAAAyxD,EAKAA,EAAAx6D,UAAAwa,QAAA,WACAxc,KAAAqa,cAAuBO,EAASC,SAMhC2hD,EAAAx6D,UAAA0hC,UAAA,WACA,OAAA1jC,KAAA63B,QAOA2kC,EAAAx6D,UAAAy6D,SAAA,WACA,OAAW1mD,KAMXymD,EAAAx6D,UAAA06D,cAAA,WACA,OAAA18D,KAAAwhD,aAMAgb,EAAAx6D,UAAAg0C,cAAA,WACA,OAA6Bh2C,KAAA,YAM7Bw8D,EAAAx6D,UAAA+zB,SAAA,WACA,OAAA/1B,KAAA81B,OAOA0mC,EAAAx6D,UAAAqE,KAAA,WACI0P,KAGJymD,EAtFa,CAuFX7hD,GAGagiD,GAAA,GC7FAC,GAAA,CACfjqC,KAAA,EACAC,QAAA,EACAC,OAAA,EACAxX,MAAA,GCMIwhD,GAAW,SAAAL,GACf,SAAAM,EAAAjlC,EAAAK,EAAAyiB,EAAAgC,EAAAogB,GAEA,IAAAjnC,OAAA1oB,IAAA2vD,EAA2CH,GAAUjqC,KAAQiqC,GAAU/pC,OAEvE2pC,EAAAj8D,KAAAP,KAAA63B,EAAAK,EAAAyiB,EAAA7kB,GAOA91B,KAAAg9D,aAAA5vD,IAAA2vD,IAAA,KAMA/8D,KAAAi9D,QAAAtgB,EAMA38C,KAAAk9D,OAAA,KAiDA,OA7CAV,IAAAM,EAAApwD,UAAA8vD,GACAM,EAAA96D,UAAAlB,OAAAY,OAAA86D,KAAAx6D,WACA86D,EAAA96D,UAAA+I,YAAA+xD,EAMAA,EAAA96D,UAAAm7D,SAAA,WACA,OAAAn9D,KAAAk9D,QAQAJ,EAAA96D,UAAAo7D,YAAA,SAAAlsD,GACAA,GACAlR,KAAAk9D,OAAAhsD,EACAlR,KAAA81B,MAAmB8mC,GAAUvhD,OAE7Brb,KAAA81B,MAAmB8mC,GAAU/pC,OAE7B7yB,KAAAwc,WAMAsgD,EAAA96D,UAAAqE,KAAA,WACArG,KAAA81B,OAAsB8mC,GAAUjqC,OAChC3yB,KAAA81B,MAAmB8mC,GAAUhqC,QAC7B5yB,KAAAwc,UACAxc,KAAAg9D,QAAAh9D,KAAAo9D,YAAAx7D,KAAA5B,SAOA88D,EAAA96D,UAAAy6D,SAAA,WACA,OAAAz8D,KAAAi9D,SAGAH,EAzEe,CA0EbH,IAGaU,GAAA,GCtFAC,GAAA,CACfC,MAAA,QACAC,KAAA,OACAC,YAAA,cACAC,OAAA,UCEeC,GAAA,CACfJ,MAAA,QACAG,OAAA,UCVAE,GAAA,SAAAlkD,GACA,SAAAkkD,EAAArqD,EAAAsqD,EAAAv+C,EAAAw+C,EAAAC,GAEArkD,EAAAnZ,KAAAP,KAAAuT,GAOAvT,KAAAg+D,cAAAH,EAOA79D,KAAAuf,WAAAD,EAQAtf,KAAAi+D,QAAAH,EAQA99D,KAAAk+D,UAAAH,EAQA,OAJArkD,IAAAkkD,EAAAlxD,UAAAgN,GACAkkD,EAAA57D,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACA47D,EAAA57D,UAAA+I,YAAA6yD,EAEAA,EAzCA,CA0CE9jD,GAEaqkD,GAAA,GCvBXC,GAAQ,SAAA/hD,GACZ,SAAAgiD,EAAAC,GAEAjiD,EAAA9b,KAAAP,MAKAA,KAAAu+D,mBAAAnxD,IAAAkxD,IAAA,KAMAt+D,KAAAw+D,OAAA,EAMAx+D,KAAAy+D,SAAA,GAMAz+D,KAAA0+D,QAAA,KAMA1+D,KAAA2+D,QAAA,KAgPA,OA5OAtiD,IAAAgiD,EAAA3xD,UAAA2P,GACAgiD,EAAAr8D,UAAAlB,OAAAY,OAAA2a,KAAAra,WACAq8D,EAAAr8D,UAAA+I,YAAAszD,EAMAA,EAAAr8D,UAAA48D,eAAA,WACA,OAAA5+D,KAAAk0B,WAAAl0B,KAAAu+D,eAOAF,EAAAr8D,UAAAe,MAAA,WACA/C,KAAAw+D,OAAA,EACAx+D,KAAAy+D,SAAA,GACAz+D,KAAA0+D,QAAA,KACA1+D,KAAA2+D,QAAA,KACA3+D,KAAAqa,cAAuBO,EAASE,QAQhCujD,EAAAr8D,UAAA68D,YAAA,SAAAl9D,GACA,OAAA3B,KAAAy+D,SAAAx8D,eAAAN,IAYA08D,EAAAr8D,UAAA4M,QAAA,SAAA+P,EAAAxG,GACA,IAAA2mD,EAAA9+D,KAAA0+D,QACA,MAAAI,EACAngD,EAAApe,KAAA4X,EAAA2mD,EAAAC,OAAAD,EAAAE,KAAAh/D,MACA8+D,IAAAG,OASAZ,EAAAr8D,UAAAf,IAAA,SAAAU,GACA,IAAAm9D,EAAA9+D,KAAAy+D,SAAA98D,GAGA,OAFIqxB,QAAM5lB,IAAA0xD,EACV,IACAA,IAAA9+D,KAAA2+D,QACAG,EAAAC,QACKD,IAAA9+D,KAAA0+D,SACL1+D,KAAA0+D,QAAsC1+D,KAAA0+D,QAAA,MACtC1+D,KAAA0+D,QAAAQ,MAAA,OAEAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAI,MAAAl/D,KAAA2+D,QACA3+D,KAAA2+D,QAAAM,MAAAH,EACA9+D,KAAA2+D,QAAAG,EACAA,EAAAC,SASAV,EAAAr8D,UAAA4E,OAAA,SAAAjF,GACA,IAAAm9D,EAAA9+D,KAAAy+D,SAAA98D,GAkBA,OAjBIqxB,QAAM5lB,IAAA0xD,EAAA,IACVA,IAAA9+D,KAAA2+D,SACA3+D,KAAA2+D,QAAsCG,EAAA,MACtC9+D,KAAA2+D,UACA3+D,KAAA2+D,QAAAM,MAAA,OAEKH,IAAA9+D,KAAA0+D,SACL1+D,KAAA0+D,QAAsCI,EAAA,MACtC9+D,KAAA0+D,UACA1+D,KAAA0+D,QAAAQ,MAAA,QAGAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,cAEAj/D,KAAAy+D,SAAA98D,KACA3B,KAAAw+D,OACAM,EAAAC,QAOAV,EAAAr8D,UAAAkyB,SAAA,WACA,OAAAl0B,KAAAw+D,QAOAH,EAAAr8D,UAAAob,QAAA,WACA,IAEA0hD,EAFAjmD,EAAA,IAAAhF,MAAA7T,KAAAw+D,QACAp+D,EAAA,EAEA,IAAA0+D,EAAA9+D,KAAA2+D,QAA8BG,EAAOA,IAAAI,MACrCrmD,EAAAzY,KAAA0+D,EAAAE,KAEA,OAAAnmD,GAOAwlD,EAAAr8D,UAAAuV,UAAA,WACA,IAEAunD,EAFAtnD,EAAA,IAAA3D,MAAA7T,KAAAw+D,QACAp+D,EAAA,EAEA,IAAA0+D,EAAA9+D,KAAA2+D,QAA8BG,EAAOA,IAAAI,MACrC1nD,EAAApX,KAAA0+D,EAAAC,OAEA,OAAAvnD,GAOA6mD,EAAAr8D,UAAAm9D,SAAA,WACA,OAAAn/D,KAAA0+D,QAAAK,QAOAV,EAAAr8D,UAAAo9D,YAAA,WACA,OAAAp/D,KAAA0+D,QAAAM,MAQAX,EAAAr8D,UAAAq9D,aAAA,WACA,OAAAr/D,KAAA2+D,QAAAK,MAOAX,EAAAr8D,UAAAyD,IAAA,WACA,IAAAq5D,EAAA9+D,KAAA0+D,QAUA,cATA1+D,KAAAy+D,SAAAK,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAC,MAAA,MAEAl/D,KAAA0+D,QAAoCI,EAAA,MACpC9+D,KAAA0+D,UACA1+D,KAAA2+D,QAAA,QAEA3+D,KAAAw+D,OACAM,EAAAC,QAQAV,EAAAr8D,UAAAs9D,QAAA,SAAA39D,EAAAN,GACArB,KAAAiB,IAAAU,GACA3B,KAAAy+D,SAAA98D,GAAAo9D,OAAA19D,GAQAg9D,EAAAr8D,UAAAyP,IAAA,SAAA9P,EAAAN,GACI2xB,KAAMrxB,KAAA3B,KAAAy+D,UACV,IACA,IAAAK,EAAiC,CACjCE,KAAAr9D,EACAs9D,MAAA,KACAC,MAAAl/D,KAAA2+D,QACAI,OAAA19D,GAEArB,KAAA2+D,QAGA3+D,KAAA2+D,QAAAM,MAAAH,EAFA9+D,KAAA0+D,QAAAI,EAIA9+D,KAAA2+D,QAAAG,EACA9+D,KAAAy+D,SAAA98D,GAAAm9D,IACA9+D,KAAAw+D,QASAH,EAAAr8D,UAAAonD,QAAA,SAAArrB,GACA/9B,KAAAu+D,cAAAxgC,GAOAsgC,EAAAr8D,UAAAu9D,MAAA,WACA,MAAAv/D,KAAA4+D,iBACA5+D,KAAAyF,OAIA44D,EAhRY,CAiRV1jD,GAEa6kD,GAAA,GC5NRC,GAAA,kBAOAC,GAAA,UAOAC,GAAA,QAOAC,GAAA,GAOAC,GAAA,EAOAC,GAAA,QAOAC,GAAA,GAOAC,GAAA,UAOAC,GAAA,SAOAC,GAAA,SAOAC,GAAA,UAOAC,GAAA,EASAC,GAAA,IAAqBb,GAMrBc,GAAA,GAMPC,GAAA,KAMOC,GAAA,GAOAC,GAAA,WACP,IAMAC,EAAAC,EANAC,EAAA,GACAC,EAAAP,GACAviC,EAAA,QACA+iC,EAAA,sBACA76D,EAAA66D,EAAAz9D,OACAmK,EAAA,2BAGA,SAAAuzD,EAAApW,GAIA,IAHA,IAAAsT,EAAA+C,KAGAC,EAAA,IAA0BA,GAAA,IAAeA,GAAA,KAGzC,IAFA,IAAAC,EAAAD,EAAA,IACAE,GAAA,EACA/gE,EAAA,EAAqBA,EAAA6F,IAAS7F,EAAA,CAC9B,IAAAghE,EAAAN,EAAA1gE,GAGA,GAFA69D,EAAAtT,KAAAuW,EAAAnjC,EAAAqjC,EACAT,EAAA1C,EAAAoD,YAAA7zD,GAAAob,MACA+hC,GAAAyW,EAAA,CACAnD,EAAAtT,KAAAuW,EAAAnjC,EAAA4sB,EAAA,IAAAyW,EACA,IAAAx4C,EAAAq1C,EAAAoD,YAAA7zD,GAAAob,MAGAu4C,KAAAv4C,GAAA+3C,GAGA,GAAAQ,EAIA,SAGA,SAGA,SAAAG,IACA,IAAAC,GAAA,EACA,QAAA5W,KAAAkW,EACAA,EAAAlW,GAAAiW,IACAG,EAAApW,IACAkW,EAAAlW,GAAAiW,EACUtpD,EAAKkpD,IAEfD,GAAA,KACAF,GAAAt9D,YAEA89D,EAAAlW,GACA4W,GAAA,IAIAA,IACAC,cAAAd,GACAA,OAAAtzD,GAIA,gBAAAq0D,GACA,IAAAC,EAAuBjX,GAAegX,GACtC,GAAAC,EAGA,QAAAthE,EAAA,EAAAgX,EAAAsqD,EAAAr+D,OAA6CjD,EAAAgX,IAAQhX,EAAA,CACrD,IAAAyqD,EAAA6W,EAAAthE,GACAyqD,KAAAgW,IACAA,EAAAhW,GAAA+V,EACAG,EAAAlW,KACAgW,EAAAhW,GAAA,OACAz9C,IAAAszD,IACAA,EAAAiB,YAAAL,EAAA,SAxEO,GAoFP,SAAAN,KAIA,OAHAT,KACAA,GAAqB/jB,GAAqB,MAE1C+jB,GAQO,IAAAqB,GAAA,WACP,IAAAC,EACAC,EAAAtB,GACA,gBAAA7V,GACA,IAAA1lD,EAAA68D,EAAAnX,GAcA,YAbAv9C,GAAAnI,IACA48D,IACAA,EAAAl0D,SAAAqC,cAAA,QACA6xD,EAAAxV,YAAA,IACAwV,EAAA5xD,MAAArG,OAAAi4D,EAAA5xD,MAAAG,QAAA,eACAyxD,EAAA5xD,MAAAI,SAAA,sBACAwxD,EAAA5xD,MAAA7K,KAAA,uBAEAy8D,EAAA5xD,MAAA06C,OACAh9C,SAAAC,KAAAgD,YAAAixD,GACA58D,EAAA68D,EAAAnX,GAAAkX,EAAAnY,aACA/7C,SAAAC,KAAAmD,YAAA8wD,IAEA58D,GAlBO,GA4BA,SAAA88D,GAAApX,EAAAn9C,GACP,IAAA+yD,EAAAS,KAIA,OAHArW,GAAA4V,EAAA5V,OACA4V,EAAA5V,QAEA4V,EAAAc,YAAA7zD,GAAAob,MAUO,SAAAo5C,GAAA/D,EAAArlC,EAAAqpC,EAAAC,GACP,IAAAtpC,IACAqlC,EAAA/xB,UAAA+1B,EAAAC,GACAjE,EAAAxyB,OAAA7S,GACAqlC,EAAA/xB,WAAA+1B,GAAAC,IAKO,IAAAC,GAAqBzgE,KAgBrB,SAAA0gE,GAAAnE,EACPv9B,EAAAid,EAAA0kB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv+C,EAAAE,EAAAiW,GACA,IAAAqoC,EACA,GAAA/kB,IACA+kB,EAAAzE,EAAA0E,YACA1E,EAAA0E,YAAAD,EAAA/kB,GAEAjd,GACAu9B,EAAA2E,aAAAp7D,MAAAy2D,EAAAv9B,GAGAu9B,EAAAmE,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv+C,EAAAE,EAAAo+C,EAAAnoC,EAAAooC,EAAApoC,GAEAqoC,IACAzE,EAAA0E,YAAAD,GAEAhiC,GACAu9B,EAAA2E,aAAAp7D,MAAAy2D,EAAAkE,IC/VA,IAAAU,GAAA,oDASAC,GAAA,cASO,SAAAC,GAAAC,GACP,wBAAAA,EACAA,EAEWC,GAAQD,GASnB,SAAAE,GAAAF,GACA,IAAAG,EAAAx1D,SAAAqC,cAAA,OAEA,GADAmzD,EAAAlzD,MAAA+yD,QACA,KAAAG,EAAAlzD,MAAA+yD,MAAA,CACAr1D,SAAAC,KAAAgD,YAAAuyD,GACA,IAAAC,EAAApqB,iBAAAmqB,GAAAH,MAEA,OADAr1D,SAAAC,KAAAmD,YAAAoyD,GACAC,EAEA,SASO,IAAAC,GAAA,WAWP,IAAAC,EAAA,KAKA5Y,EAAA,GAKA6Y,EAAA,EAEA,gBAKAphE,GACA,IAAA6gE,EACA,GAAAtY,EAAAzoD,eAAAE,GACA6gE,EAAAtY,EAAAvoD,OACS,CACT,GAAAohE,GAAAD,EAAA,CACA,IAAAljE,EAAA,EACA,QAAAuB,KAAA+oD,EACA,OAAAtqD,cACAsqD,EAAA/oD,KACA4hE,GAIAP,EAAAQ,GAAArhE,GACAuoD,EAAAvoD,GAAA6gE,IACAO,EAEA,OAAAP,GA9CO,GA2DA,SAAAS,GAAAT,GACP,OAAAnvD,MAAA6I,QAAAsmD,GACAA,EAEAK,GAAAL,GASA,SAAAQ,GAAArhE,GACA,IAAAjB,EAAAwiE,EAAAn/D,EAAAD,EAAA0+D,EAMA,GAJAF,GAAAa,KAAAxhE,KACAA,EAAA+gE,GAAA/gE,IAGA0gE,GAAAc,KAAAxhE,GAAA,CACA,IACAzB,EADAmB,EAAAM,EAAAkB,OAAA,EAGA3C,EADAmB,GAAA,EACA,EAEA,EAEA,IAAA+hE,EAAA,IAAA/hE,GAAA,IAAAA,EACAX,EAAA+3C,SAAA92C,EAAA0hE,OAAA,IAAAnjE,KAAA,IACAgjE,EAAAzqB,SAAA92C,EAAA0hE,OAAA,IAAAnjE,KAAA,IACA6D,EAAA00C,SAAA92C,EAAA0hE,OAAA,IAAAnjE,KAAA,IAEA4D,EADAs/D,EACA3qB,SAAA92C,EAAA0hE,OAAA,IAAAnjE,KAAA,IAEA,IAEA,GAAAA,IACAQ,MAAA,GAAAA,EACAwiE,MAAA,GAAAA,EACAn/D,MAAA,GAAAA,EACAq/D,IACAt/D,MAAA,GAAAA,IAGA0+D,EAAA,CAAA9hE,EAAAwiE,EAAAn/D,EAAAD,EAAA,UACG,GAAAnC,EAAAiB,QAAA,UACH4/D,EAAA7gE,EAAAqE,MAAA,MAAA+P,MAAA,KAAAjC,IAAAwZ,QACAg2C,GAAAd,IACG,GAAA7gE,EAAAiB,QAAA,SACH4/D,EAAA7gE,EAAAqE,MAAA,MAAA+P,MAAA,KAAAjC,IAAAwZ,QACAk1C,EAAAt9D,KAAA,GACAo+D,GAAAd,IAEIhwC,IAAM,MAEV,OAAAgwC,EASO,SAAAc,GAAAd,GAKP,OAJAA,EAAA,GAAavsC,GAAKusC,EAAA,eAClBA,EAAA,GAAavsC,GAAKusC,EAAA,eAClBA,EAAA,GAAavsC,GAAKusC,EAAA,eAClBA,EAAA,GAAavsC,GAAKusC,EAAA,QAClBA,EAQO,SAASC,GAAQD,GACxB,IAAA9hE,EAAA8hE,EAAA,GACA9hE,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAwiE,EAAAV,EAAA,GACAU,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAn/D,EAAAy+D,EAAA,GACAz+D,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAD,OAAA8I,IAAA41D,EAAA,KAAAA,EAAA,GACA,cAAA9hE,EAAA,IAAAwiE,EAAA,IAAAn/D,EAAA,IAAAD,EAAA,ICvMO,SAAAy/D,GAAAf,GACP,OAAAnvD,MAAA6I,QAAAsmD,GACWC,GAAQD,GAEnBA,EClBA,IAAIgB,GAAa,aAEjBA,GAAahiE,UAAAiiE,WAAA,SAAAhpB,EAAAwK,EAAAye,KAObF,GAAahiE,UAAAmiE,aAAA,SAAAlpB,KAOb+oB,GAAahiE,UAAAoiE,SAAA,SAAAn0D,KAMb+zD,GAAahiE,UAAAqiE,WAAA,SAAAC,EAAA7e,KAMbue,GAAahiE,UAAAuiE,YAAA,SAAA9e,EAAAx1C,KAMb+zD,GAAahiE,UAAAwiE,uBAAA,SAAAC,EAAAhf,KAMbue,GAAahiE,UAAA0iE,eAAA,SAAAC,EAAAlf,KAMbue,GAAahiE,UAAA4iE,oBAAA,SAAAC,EAAApf,KAMbue,GAAahiE,UAAA8iE,eAAA,SAAAC,EAAAtf,KAMbue,GAAahiE,UAAAgjE,iBAAA,SAAAC,EAAAxf,KAMbue,GAAahiE,UAAAkjE,UAAA,SAAAC,EAAA1f,KAMbue,GAAahiE,UAAAojE,YAAA,SAAAC,EAAA5f,KAMbue,GAAahiE,UAAAsjE,SAAA,SAAArqB,EAAAwK,KAMbue,GAAahiE,UAAAujE,mBAAA,SAAAC,EAAAC,KAMbzB,GAAahiE,UAAA0jE,cAAA,SAAAC,EAAAC,KAMb5B,GAAahiE,UAAA6jE,aAAA,SAAAC,EAAAF,KAEE,IAAAG,GAAA,GC/EXC,GAAuB,SAAAC,GAC3B,SAAAC,EAAAjI,EAAAtjB,EAAA9iB,EAAA6I,EAAAylC,GACAF,EAAA1lE,KAAAP,MAMAA,KAAAomE,SAAAnI,EAMAj+D,KAAAwhD,YAAA7G,EAMA36C,KAAA4iC,QAAA/K,EAMA73B,KAAAqmE,WAAA3lC,EAMA1gC,KAAAsmE,cAAAH,EAMAnmE,KAAAumE,kBAAA,KAMAvmE,KAAAwmE,oBAAA,KAMAxmE,KAAAymE,kBAAA,KAMAzmE,KAAA0mE,WAAA,KAMA1mE,KAAA2mE,aAAA,KAMA3mE,KAAA4mE,OAAA,KAMA5mE,KAAA6mE,cAAA,EAMA7mE,KAAA8mE,cAAA,EAMA9mE,KAAA+mE,aAAA,EAMA/mE,KAAAgnE,cAAA,EAMAhnE,KAAAinE,cAAA,EAMAjnE,KAAAknE,cAAA,EAMAlnE,KAAAmnE,sBAAA,EAMAnnE,KAAAonE,eAAA,EAMApnE,KAAAqnE,YAAA,EAMArnE,KAAAsnE,YAAA,EAMAtnE,KAAAunE,MAAA,GAMAvnE,KAAAwnE,aAAA,EAMAxnE,KAAAynE,aAAA,EAMAznE,KAAA0nE,qBAAA,EAMA1nE,KAAA2nE,cAAA,EAMA3nE,KAAA4nE,WAAA,EAMA5nE,KAAA6nE,eAAA,KAMA7nE,KAAA8nE,iBAAA,KAMA9nE,KAAA+nE,WAAA,KAMA/nE,KAAAgoE,kBAAA,GAMAhoE,KAAAioE,mBAA8BvmE,KAksB9B,OA9rBAukE,IAAAC,EAAAx5D,UAAAu5D,GACAC,EAAAlkE,UAAAlB,OAAAY,OAAAukE,KAAAjkE,WACAkkE,EAAAlkE,UAAA+I,YAAAm7D,EASAA,EAAAlkE,UAAAkmE,YAAA,SAAAvrC,EAAAnE,EAAArO,EAAAyS,GACA,GAAA58B,KAAA4mE,OAAA,CAGA,IAAAuB,EAA2B1nC,GAC3B9D,EAAAnE,EAAArO,EAAA,EAAAnqB,KAAAqmE,WACArmE,KAAAgoE,mBACA/J,EAAAj+D,KAAAomE,SACAgC,EAAApoE,KAAAioE,mBACAvF,EAAAzE,EAAA0E,YACA,GAAA3iE,KAAAgnE,gBACA/I,EAAA0E,YAAAD,EAAA1iE,KAAAgnE,eAEA,IAAApuC,EAAA54B,KAAAonE,eACApnE,KAAAmnE,uBACAvuC,GAAA54B,KAAAsmE,eAEA,QAAAlmE,EAAA,EAAAgX,EAAA+wD,EAAA9kE,OAAiDjD,EAAAgX,EAAQhX,GAAA,GACzD,IAAA8jB,EAAAikD,EAAA/nE,GAAAJ,KAAA6mE,cACAziD,EAAA+jD,EAAA/nE,EAAA,GAAAJ,KAAA8mE,cACA,OAAAluC,GAAA,GAAA54B,KAAAqnE,YAAA,CACA,IAAAzrB,EAAA13B,EAAAlkB,KAAA6mE,cACAhrB,EAAAz3B,EAAApkB,KAAA8mE,cACQ98B,GAAgBo+B,EACxBxsB,EAAAC,EACA77C,KAAAqnE,YAAArnE,KAAAqnE,YACAzuC,GACAgjB,GAAAC,GACAoiB,EAAA2E,aAAAp7D,MAAAy2D,EAAAmK,GAEAnK,EAAAmE,UAAApiE,KAAA4mE,OAAA5mE,KAAAinE,cAAAjnE,KAAAknE,cACAlnE,KAAAsnE,YAAAtnE,KAAA+mE,aAAA7iD,EAAAE,EACApkB,KAAAsnE,YAAAtnE,KAAA+mE,cAEA,IAAAnuC,GAAA,GAAA54B,KAAAqnE,aACApJ,EAAA2E,aAAA,aAEA,GAAA5iE,KAAAgnE,gBACA/I,EAAA0E,YAAAD,KAWAwD,EAAAlkE,UAAAqmE,UAAA,SAAA1rC,EAAAnE,EAAArO,EAAAyS,GACA,GAAA58B,KAAA+nE,YAAA,KAAA/nE,KAAAunE,MAAA,CAGAvnE,KAAA6nE,gBACA7nE,KAAAsoE,qBAAAtoE,KAAA6nE,gBAEA7nE,KAAA8nE,kBACA9nE,KAAAuoE,uBAAAvoE,KAAA8nE,kBAEA9nE,KAAAwoE,qBAAAxoE,KAAA+nE,YACA,IAAAI,EAA2B1nC,GAC3B9D,EAAAnE,EAAArO,EAAAyS,EAAA58B,KAAAqmE,WACArmE,KAAAgoE,mBACA/J,EAAAj+D,KAAAomE,SACAxtC,EAAA54B,KAAA2nE,cAIA,IAHA3nE,KAAA0nE,sBACA9uC,GAAA54B,KAAAsmE,eAEU9tC,EAAArO,EAAcqO,GAAAoE,EAAA,CACxB,IAAA1Y,EAAAikD,EAAA3vC,GAAAx4B,KAAAwnE,aACApjD,EAAA+jD,EAAA3vC,EAAA,GAAAx4B,KAAAynE,aACA,OAAA7uC,GAAA,GAAA54B,KAAA4nE,WAAA,CACA,IAAAQ,EAA6Bp+B,GAAgBhqC,KAAAioE,mBAC7C/jD,EAAAE,EACApkB,KAAA4nE,WAAA5nE,KAAA4nE,WACAhvC,GACA1U,GAAAE,GACA65C,EAAA2E,aAAAp7D,MAAAy2D,EAAAmK,GAEApoE,KAAA8nE,kBACA7J,EAAAwK,WAAAzoE,KAAAunE,MAAArjD,EAAAE,GAEApkB,KAAA6nE,gBACA5J,EAAAyK,SAAA1oE,KAAAunE,MAAArjD,EAAAE,GAGA,IAAAwU,GAAA,GAAA54B,KAAA4nE,YACA3J,EAAA2E,aAAA,eAaAsD,EAAAlkE,UAAA2mE,cAAA,SAAAhsC,EAAAnE,EAAArO,EAAAyS,EAAAgsC,GACA,IAAA3K,EAAAj+D,KAAAomE,SACA+B,EAA2B1nC,GAC3B9D,EAAAnE,EAAArO,EAAAyS,EAAA58B,KAAAqmE,WACArmE,KAAAgoE,mBACA/J,EAAA4K,OAAAV,EAAA,GAAAA,EAAA,IACA,IAAA9kE,EAAA8kE,EAAA9kE,OACAulE,IACAvlE,GAAA,GAEA,QAAAjD,EAAA,EAAmBA,EAAAiD,EAAYjD,GAAA,EAC/B69D,EAAA6K,OAAAX,EAAA/nE,GAAA+nE,EAAA/nE,EAAA,IAKA,OAHAwoE,GACA3K,EAAA8K,YAEA5+C,GAWA+7C,EAAAlkE,UAAAgnE,WAAA,SAAArsC,EAAAnE,EAAA0V,EAAAtR,GACA,QAAAx8B,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAqCjD,EAAAgX,IAAQhX,EAC7Co4B,EAAAx4B,KAAA2oE,cAAAhsC,EAAAnE,EAAA0V,EAAA9tC,GAAAw8B,GAAA,GAEA,OAAApE,GAWA0tC,EAAAlkE,UAAAqiE,WAAA,SAAAppB,GACA,GAASrc,GAAU5+B,KAAA4iC,QAAAqY,EAAAvX,aAAnB,CAGA,GAAA1jC,KAAA0mE,YAAA1mE,KAAA2mE,aAAA,CACA3mE,KAAA0mE,YACA1mE,KAAAsoE,qBAAAtoE,KAAA0mE,YAEA1mE,KAAA2mE,cACA3mE,KAAAuoE,uBAAAvoE,KAAA2mE,cAEA,IAAAwB,EAA6Bv6B,GAC7BqN,EAAAj7C,KAAAqmE,WAAArmE,KAAAgoE,mBACA1jD,EAAA6jD,EAAA,GAAAA,EAAA,GACA3jD,EAAA2jD,EAAA,GAAAA,EAAA,GACAzmC,EAAAh/B,KAAAwF,KAAAoc,IAAAE,KACAy5C,EAAAj+D,KAAAomE,SACAnI,EAAAgL,YACAhL,EAAAiL,IACAf,EAAA,GAAAA,EAAA,GAAAzmC,EAAA,IAAAh/B,KAAA+0B,IACAz3B,KAAA0mE,YACAzI,EAAAkL,OAEAnpE,KAAA2mE,cACA1I,EAAAmL,SAGA,KAAAppE,KAAAunE,OACAvnE,KAAAqoE,UAAAptB,EAAA5E,YAAA,SAYA6vB,EAAAlkE,UAAAoiE,SAAA,SAAAn0D,GACAjQ,KAAAulE,mBAAAt1D,EAAAo5D,UAAAp5D,EAAAq5D,aACAtpE,KAAA0lE,cAAAz1D,EAAAwsD,YACAz8D,KAAA6lE,aAAA51D,EAAAs5D,YAWArD,EAAAlkE,UAAAmiE,aAAA,SAAAlpB,GACA,IAAA1nC,EAAA0nC,EAAAlP,UACA,OAAAx4B,GACA,KAAWmsB,GAAYC,MACvB3/B,KAAAklE,UAAwE,GACxE,MACA,KAAWxlC,GAAYE,YACvB5/B,KAAA0kE,eAAkF,GAClF,MACA,KAAWhlC,GAAYI,QACvB9/B,KAAAolE,YAA4E,GAC5E,MACA,KAAW1lC,GAAYK,YACvB//B,KAAA8kE,eAAkF,GAClF,MACA,KAAWplC,GAAYM,kBACvBhgC,KAAA4kE,oBAA4F,GAC5F,MACA,KAAWllC,GAAYO,cACvBjgC,KAAAglE,iBAAsF,GACtF,MACA,KAAWtlC,GAAYQ,oBACvBlgC,KAAAwkE,uBAAkG,GAClG,MACA,KAAW9kC,GAAYS,OACvBngC,KAAAqkE,WAA0E,GAC1E,MACA,WAeA6B,EAAAlkE,UAAAuiE,YAAA,SAAA9e,EAAAx1C,GACA,IAAAgrC,EAAAhrC,EAAAu5D,qBAAAv5D,CAAAw1C,GACAxK,GAAsBrc,GAAU5+B,KAAA4iC,QAAAqY,EAAAvX,eAGhC1jC,KAAAokE,SAAAn0D,GACAjQ,KAAAmkE,aAAAlpB,KAUAirB,EAAAlkE,UAAAwiE,uBAAA,SAAAvpB,GAEA,IADA,IAAAwuB,EAAAxuB,EAAAyuB,qBACAtpE,EAAA,EAAAgX,EAAAqyD,EAAApmE,OAA2CjD,EAAAgX,IAAQhX,EACnDJ,KAAAmkE,aAAAsF,EAAArpE,KAWA8lE,EAAAlkE,UAAAkjE,UAAA,SAAAjqB,GACA,IAAAte,EAAAse,EAAAnO,qBACAlQ,EAAAqe,EAAA7N,YACAptC,KAAA4mE,QACA5mE,KAAAkoE,YAAAvrC,EAAA,EAAAA,EAAAt5B,OAAAu5B,GAEA,KAAA58B,KAAAunE,OACAvnE,KAAAqoE,UAAA1rC,EAAA,EAAAA,EAAAt5B,OAAAu5B,IAWAspC,EAAAlkE,UAAA8iE,eAAA,SAAA7pB,GACA,IAAAte,EAAAse,EAAAnO,qBACAlQ,EAAAqe,EAAA7N,YACAptC,KAAA4mE,QACA5mE,KAAAkoE,YAAAvrC,EAAA,EAAAA,EAAAt5B,OAAAu5B,GAEA,KAAA58B,KAAAunE,OACAvnE,KAAAqoE,UAAA1rC,EAAA,EAAAA,EAAAt5B,OAAAu5B,IAWAspC,EAAAlkE,UAAA0iE,eAAA,SAAAzpB,GACA,GAASrc,GAAU5+B,KAAA4iC,QAAAqY,EAAAvX,aAAnB,CAGA,GAAA1jC,KAAA2mE,aAAA,CACA3mE,KAAAuoE,uBAAAvoE,KAAA2mE,cACA,IAAA1I,EAAAj+D,KAAAomE,SACAzpC,EAAAse,EAAAnO,qBACAmxB,EAAAgL,YACAjpE,KAAA2oE,cAAAhsC,EAAA,EAAAA,EAAAt5B,OACA43C,EAAA7N,aAAA,GACA6wB,EAAAmL,SAEA,QAAAppE,KAAAunE,MAAA,CACA,IAAAoC,EAAA1uB,EAAA2uB,kBACA5pE,KAAAqoE,UAAAsB,EAAA,UAWAzD,EAAAlkE,UAAA4iE,oBAAA,SAAA3pB,GACA,IAAA4uB,EAAA5uB,EAAAvX,YACA,GAAS9E,GAAU5+B,KAAA4iC,QAAAinC,GAAnB,CAGA,GAAA7pE,KAAA2mE,aAAA,CACA3mE,KAAAuoE,uBAAAvoE,KAAA2mE,cACA,IAAA1I,EAAAj+D,KAAAomE,SACAzpC,EAAAse,EAAAnO,qBACAtU,EAAA,EACA0V,EAA0C+M,EAAAxH,UAC1C7W,EAAAqe,EAAA7N,YACA6wB,EAAAgL,YACA,QAAA7oE,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAuCjD,EAAAgX,IAAQhX,EAC/Co4B,EAAAx4B,KAAA2oE,cAAAhsC,EAAAnE,EAAA0V,EAAA9tC,GAAAw8B,GAAA,GAEAqhC,EAAAmL,SAEA,QAAAppE,KAAAunE,MAAA,CACA,IAAAuC,EAAA7uB,EAAA8uB,mBACA/pE,KAAAqoE,UAAAyB,EAAA,EAAAA,EAAAzmE,OAAA,MAWA6iE,EAAAlkE,UAAAojE,YAAA,SAAAnqB,GACA,GAASrc,GAAU5+B,KAAA4iC,QAAAqY,EAAAvX,aAAnB,CAGA,GAAA1jC,KAAA2mE,cAAA3mE,KAAA0mE,WAAA,CACA1mE,KAAA0mE,YACA1mE,KAAAsoE,qBAAAtoE,KAAA0mE,YAEA1mE,KAAA2mE,cACA3mE,KAAAuoE,uBAAAvoE,KAAA2mE,cAEA,IAAA1I,EAAAj+D,KAAAomE,SACAnI,EAAAgL,YACAjpE,KAAAgpE,WAAA/tB,EAAAzH,6BACA,EAAoCyH,EAAAxH,UAAAwH,EAAA7N,aACpCptC,KAAA0mE,YACAzI,EAAAkL,OAEAnpE,KAAA2mE,cACA1I,EAAAmL,SAGA,QAAAppE,KAAAunE,MAAA,CACA,IAAAyC,EAAA/uB,EAAAvH,uBACA1zC,KAAAqoE,UAAA2B,EAAA,UAUA9D,EAAAlkE,UAAAgjE,iBAAA,SAAA/pB,GACA,GAASrc,GAAU5+B,KAAA4iC,QAAAqY,EAAAvX,aAAnB,CAGA,GAAA1jC,KAAA2mE,cAAA3mE,KAAA0mE,WAAA,CACA1mE,KAAA0mE,YACA1mE,KAAAsoE,qBAAAtoE,KAAA0mE,YAEA1mE,KAAA2mE,cACA3mE,KAAAuoE,uBAAAvoE,KAAA2mE,cAEA,IAAA1I,EAAAj+D,KAAAomE,SACAzpC,EAAAse,EAAAzH,6BACAhb,EAAA,EACAmX,EAAAsL,EAAAgvB,WACArtC,EAAAqe,EAAA7N,YACA6wB,EAAAgL,YACA,QAAA7oE,EAAA,EAAAgX,EAAAu4B,EAAAtsC,OAAwCjD,EAAAgX,IAAQhX,EAAA,CAChD,IAAA8tC,EAAAyB,EAAAvvC,GACAo4B,EAAAx4B,KAAAgpE,WAAArsC,EAAAnE,EAAA0V,EAAAtR,GAEA58B,KAAA0mE,YACAzI,EAAAkL,OAEAnpE,KAAA2mE,cACA1I,EAAAmL,SAGA,QAAAppE,KAAAunE,MAAA,CACA,IAAA2C,EAAAjvB,EAAAkvB,wBACAnqE,KAAAqoE,UAAA6B,EAAA,EAAAA,EAAA7mE,OAAA,MAQA6iE,EAAAlkE,UAAAsmE,qBAAA,SAAA8B,GACA,IAAAnM,EAAAj+D,KAAAomE,SACAiE,EAAArqE,KAAAumE,kBACA8D,EAMAA,EAAA7E,WAAA4E,EAAA5E,YACA6E,EAAA7E,UAAAvH,EAAAuH,UAAA4E,EAAA5E,YANAvH,EAAAuH,UAAA4E,EAAA5E,UACAxlE,KAAAumE,kBAAA,CACAf,UAAA4E,EAAA5E,aAaAU,EAAAlkE,UAAAumE,uBAAA,SAAA+B,GACA,IAAArM,EAAAj+D,KAAAomE,SACAmE,EAAAvqE,KAAAwmE,oBACA+D,GAoBAA,EAAAC,SAAAF,EAAAE,UACAD,EAAAC,QAAAvM,EAAAuM,QAAgFF,EAAA,SAEtEzpD,KACGyJ,GAAMigD,EAAAE,SAAAH,EAAAG,WACnBxM,EAAAj9C,YAAAupD,EAAAE,SAAAH,EAAAG,UAEAF,EAAAG,gBAAAJ,EAAAI,iBACAH,EAAAG,eAAAzM,EAAAyM,eACAJ,EAAAI,iBAGAH,EAAAI,UAAAL,EAAAK,WACAJ,EAAAI,SAAA1M,EAAA0M,SAAmFL,EAAA,UAEnFC,EAAAK,WAAAN,EAAAM,YACAL,EAAAK,UAAA3M,EAAA2M,UAAAN,EAAAM,WAEAL,EAAAM,YAAAP,EAAAO,aACAN,EAAAM,WAAA5M,EAAA4M,WACAP,EAAAO,YAEAN,EAAA9E,aAAA6E,EAAA7E,cACA8E,EAAA9E,YAAAxH,EAAAwH,YACA6E,EAAA7E,eA3CAxH,EAAAuM,QAAiDF,EAAA,QACvCzpD,KACVo9C,EAAAj9C,YAAAspD,EAAAG,UACAxM,EAAAyM,eAAAJ,EAAAI,gBAEAzM,EAAA0M,SAAmDL,EAAA,SACnDrM,EAAA2M,UAAAN,EAAAM,UACA3M,EAAA4M,WAAAP,EAAAO,WACA5M,EAAAwH,YAAA6E,EAAA7E,YACAzlE,KAAAwmE,oBAAA,CACAgE,QAAAF,EAAAE,QACAC,SAAAH,EAAAG,SACAC,eAAAJ,EAAAI,eACAC,SAAAL,EAAAK,SACAC,UAAAN,EAAAM,UACAC,WAAAP,EAAAO,WACApF,YAAA6E,EAAA7E,eAoCAS,EAAAlkE,UAAAwmE,qBAAA,SAAAsC,GACA,IAAA7M,EAAAj+D,KAAAomE,SACA2E,EAAA/qE,KAAAymE,kBACAuE,EAAAF,EAAAE,UACAF,EAAAE,UAA4B/K,GAC5B8K,GAUAA,EAAApgB,MAAAmgB,EAAAngB,OACAogB,EAAApgB,KAAAsT,EAAAtT,KAAAmgB,EAAAngB,MAEAogB,EAAAC,eACAD,EAAAC,UAAA/M,EAAA+M,UAAoF,GAEpFD,EAAAE,cAAAH,EAAAG,eACAF,EAAAE,aAAAhN,EAAAgN,aACwCH,EAAA,gBAjBxC7M,EAAAtT,KAAAmgB,EAAAngB,KACAsT,EAAA+M,UAAqD,EACrD/M,EAAAgN,aAA2DH,EAAA,aAC3D9qE,KAAAymE,kBAAA,CACA9b,KAAAmgB,EAAAngB,KACAqgB,YACAC,aAAAH,EAAAG,gBAwBA/E,EAAAlkE,UAAAujE,mBAAA,SAAAC,EAAAC,GACA,GAAAD,EAEK,CACL,IAAA0F,EAAA1F,EAAA2F,WACAnrE,KAAA0mE,WAAA,CACAlB,UAAmBzB,GAAWmH,GACHxL,UAL3B1/D,KAAA0mE,WAAA,KAQA,GAAAjB,EAEK,CACL,IAAA2F,EAAA3F,EAAA0F,WACAE,EAAA5F,EAAA6F,aACAC,EAAA9F,EAAA+F,cACAC,EAAAhG,EAAAiG,oBACAC,EAAAlG,EAAAmG,cACAC,EAAApG,EAAAhoC,WACAquC,EAAArG,EAAAsG,gBACA/rE,KAAA2mE,aAAA,CACA6D,aAAAp9D,IAAAi+D,EACAA,EAA+B1L,GAC/B8K,SAAAc,GACgC3L,GAChC8K,eAAAe,GACsC5L,GACtC8K,cAAAv9D,IAAAu+D,EACAA,EAAgC7L,GAChC8K,UAAA5qE,KAAAwhD,kBAAAp0C,IAAAy+D,EACAA,EAA6BzL,IAC7ByK,gBAAAz9D,IAAA0+D,EACAA,EAAkC/L,GAClC0F,YAAqB1B,GAAWqH,GACHpL,UAvB7BhgE,KAAA2mE,aAAA,MAmCAT,EAAAlkE,UAAA0jE,cAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAAqG,EAAArG,EAAAsG,YAEAC,EAAAvG,EAAAlJ,SAAA,GACA0P,EAAAxG,EAAAyG,YACAC,EAAA1G,EAAAlf,UACAzmD,KAAA6mE,cAAAmF,EAAA,GACAhsE,KAAA8mE,cAAAkF,EAAA,GACAhsE,KAAA+mE,aAAAsF,EAAA,GACArsE,KAAA4mE,OAAAsF,EACAlsE,KAAAgnE,cAAArB,EAAAznB,aACAl+C,KAAAinE,cAAAkF,EAAA,GACAnsE,KAAAknE,cAAAiF,EAAA,GACAnsE,KAAAmnE,qBAAAxB,EAAA2G,oBACAtsE,KAAAonE,eAAAzB,EAAArvB,cACAt2C,KAAAqnE,YAAA1B,EAAA4G,WAAAvsE,KAAAwhD,YACAxhD,KAAAsnE,YAAA+E,EAAA,QAjBArsE,KAAA4mE,OAAA,MA4BAV,EAAAlkE,UAAA6jE,aAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAA0G,EAAA1G,EAAAuD,UACA,GAAAmD,EAEO,CACP,IAAAC,EAAAD,EAAArB,WACAnrE,KAAA6nE,eAAA,CACArC,UAAqBzB,GAAW0I,GACC/M,UALjC1/D,KAAA6nE,eAAA,KAQA,IAAA6E,EAAA5G,EAAAwD,YACA,GAAAoD,EAEO,CACP,IAAAC,EAAAD,EAAAvB,WACAyB,EAAAF,EAAApB,aACAuB,EAAAH,EAAAlB,cACAsB,EAAAJ,EAAAhB,oBACAqB,EAAAL,EAAAd,cACAoB,EAAAN,EAAAjvC,WACAwvC,EAAAP,EAAAX,gBACA/rE,KAAA8nE,iBAAA,CACA0C,aAAAp9D,IAAAw/D,EACAA,EAAqCjN,GACrC8K,SAAAoC,GACsCjN,GACtC8K,eAAAoC,GAC4CjN,GAC5C8K,cAAAv9D,IAAA2/D,EACAA,EAAsCjN,GACtC8K,eAAAx9D,IAAA4/D,EACAA,EAAmC5M,GACnCyK,gBAAAz9D,IAAA6/D,EACAA,EAAwClN,GACxC0F,YAAuB1B,GAAW4I,GACC3M,UAvBnChgE,KAAA8nE,iBAAA,KA0BA,IAAAoF,EAAApH,EAAAqH,UACAC,EAAAtH,EAAAuH,aACAC,EAAAxH,EAAAyH,aACAC,EAAA1H,EAAAwG,oBACAmB,EAAA3H,EAAAxvB,cACAo3B,EAAA5H,EAAAyG,WACAoB,EAAA7H,EAAAyD,UACAqE,EAAA9H,EAAA+H,eACAC,EAAAhI,EAAAiI,kBACA/tE,KAAA+nE,WAAA,CACApd,UAAAv9C,IAAA8/D,EACAA,EAAqBzN,GACrBuL,eAAA59D,IAAAwgE,EACAA,EAA0B3N,GAC1BgL,kBAAA79D,IAAA0gE,EACAA,EAA6B5N,IAE7BlgE,KAAAunE,WAAAn6D,IAAAugE,IAAA,GACA3tE,KAAAwnE,kBACAp6D,IAAAggE,EAAAptE,KAAAwhD,YAAA4rB,EAAA,EACAptE,KAAAynE,kBACAr6D,IAAAkgE,EAAAttE,KAAAwhD,YAAA8rB,EAAA,EACAttE,KAAA0nE,yBAAAt6D,IAAAogE,KACAxtE,KAAA2nE,mBAAAv6D,IAAAqgE,IAAA,EACAztE,KAAA4nE,WAAA5nE,KAAAwhD,kBAAAp0C,IAAAsgE,EACAA,EAAA,QAjEA1tE,KAAAunE,MAAA,IAqEArB,EAp4B2B,CAq4BzBH,IAGaiI,GAAA,GC15BfC,GAAA,WAMAjuE,KAAAkuE,OAAA,GAMAluE,KAAAmuE,WAAA,EAMAnuE,KAAAouE,cAAA,IAqEA,SAAA94C,GAAAngB,EAAAk5D,EAAArL,GACA,IAAAsL,EAAAtL,EAA4BD,GAAQC,GAAA,OACpC,OAAAqL,EAAA,IAAAl5D,EAAA,IAAAm5D,EAjEAL,GAAAjsE,UAAAe,MAAA,WACA/C,KAAAkuE,OAAA,GACAluE,KAAAmuE,WAAA,GAMAF,GAAAjsE,UAAAusE,OAAA,WACA,GAAAvuE,KAAAmuE,WAAAnuE,KAAAouE,cAAA,CACA,IAAAhuE,EAAA,EACA,QAAAuB,KAAA3B,KAAAkuE,OAAA,CACA,IAAAM,EAAAxuE,KAAAkuE,OAAAvsE,GACA,OAAAvB,MAAAouE,EAAA/zD,uBACAza,KAAAkuE,OAAAvsE,KACA3B,KAAAmuE,eAYAF,GAAAjsE,UAAAf,IAAA,SAAAkU,EAAAk5D,EAAArL,GACA,IAAArhE,EAAA2zB,GAAAngB,EAAAk5D,EAAArL,GACA,OAAArhE,KAAA3B,KAAAkuE,OAAAluE,KAAAkuE,OAAAvsE,GAAA,MASAssE,GAAAjsE,UAAAyP,IAAA,SAAA0D,EAAAk5D,EAAArL,EAAAwL,GACA,IAAA7sE,EAAA2zB,GAAAngB,EAAAk5D,EAAArL,GACAhjE,KAAAkuE,OAAAvsE,GAAA6sE,IACAxuE,KAAAmuE,YAUAF,GAAAjsE,UAAAonD,QAAA,SAAAqlB,GACAzuE,KAAAouE,cAAAK,EACAzuE,KAAAuuE,UAgBe,IAQRG,GAAA,IAAAT,GC9FHU,GAAW,SAAA30D,GACf,SAAA40D,EAAAt6D,GACA0F,EAAAzZ,KAAAP,MAMAA,KAAAqwB,KAAA/b,EAMAtU,KAAA6uE,gBAAA,GAMA7uE,KAAA8uE,wBAAA,GAMA9uE,KAAA+uE,2BAAA,GAgSA,OA5RA/0D,IAAA40D,EAAAliE,UAAAsN,GACA40D,EAAA5sE,UAAAlB,OAAAY,OAAAsY,KAAAhY,WACA4sE,EAAA5sE,UAAA+I,YAAA6jE,EAOAA,EAAA5sE,UAAA2lD,oBAAA,SAAAp0C,EAAAgM,GACIxJ,KAOJ64D,EAAA5sE,UAAAgtE,uBAAA,SAAAC,GACAjvE,KAAA+uE,2BAAArpE,KAAA8B,MAAAxH,KAAA+uE,2BAAAE,IAOAL,EAAA5sE,UAAAktE,oBAAA,SAAA3vD,GACA,IAAAmpC,EAAAnpC,EAAAmpC,UACAnC,EAAAhnC,EAAAgnC,2BACAH,EAAA7mC,EAAA6mC,2BAEIpc,GAAgBuc,EACpBhnC,EAAAwe,KAAA,KAAAxe,EAAAwe,KAAA,KACA,EAAA2qB,EAAAxwB,YAAA,EAAAwwB,EAAAxwB,YACAwwB,EAAA9vB,UACA8vB,EAAA5wB,OAAA,IAAA4wB,EAAA5wB,OAAA,IAEIuS,GACER,GAAqBuc,EAAAG,KAM3BqoB,EAAA5sE,UAAAgmD,qBAAA,WACA,QAAArmD,KAAA3B,KAAA6uE,gBACA7uE,KAAAmvE,0BAAAxtE,GAAAyX,WAmBAw1D,EAAA5sE,UAAAsjD,2BAAA,SACAvlC,EACAR,EACA6lC,EACAzyC,EACAy8D,EACA/pB,EACAgqB,GAEA,IAAArpE,EACA0iD,EAAAnpC,EAAAmpC,UACA4mB,EAAA5mB,EAAAxwB,WAOA,SAAAotB,EAAAG,EAAAzH,GACA,IAAAC,EAAA1+B,EAAAspC,YAA2C5yC,EAAM+nC,IAAAC,QACjD,KAAYhoC,EAAMwvC,KAAAlmC,EAAAupC,qBAAA7K,EAClB,OAAAtrC,EAAApS,KAAA6uE,EAAA3pB,EAAAxH,EAAAD,EAAA,MAIA,IAAAzX,EAAAmiB,EAAAniB,WAEAgpC,EAAAxvD,EACA,GAAAwmB,EAAA/C,WAAA,CACA,IAAAgsC,EAAAjpC,EAAA7C,YACA+rC,EAAuBhyC,GAAQ+xC,GAC/BtrD,EAAAnE,EAAA,GACA,GAAAmE,EAAAsrD,EAAA,IAAAtrD,EAAAsrD,EAAA,IACA,IAAAE,EAAAhtE,KAAAG,MAAA2sE,EAAA,GAAAtrD,GAAAurD,GACAF,EAAA,CAAArrD,EAAAurD,EAAAC,EAAA3vD,EAAA,KAIA,IAEA3f,EAFAyoD,EAAAtpC,EAAAqpC,iBACA+mB,EAAA9mB,EAAAxlD,OAEA,IAAAjD,EAAAuvE,EAAA,EAA2BvvE,GAAA,IAAQA,EAAA,CACnC,IAAAogD,EAAAqI,EAAAzoD,GACA49C,EAAAwC,EAAAxC,MACA,GAAUuN,GAAmB/K,EAAA8uB,IAAAjqB,EAAA9kD,KAAA8uE,EAAArxB,GAAA,CAC7B,IAAA4xB,EAAA5vE,KAAA6vE,iBAAA7xB,GACA3mC,EAAoE,EAAAwyC,YAMpE,GALAxyC,IACArR,EAAA4pE,EAAAtqB,2BACAjuC,EAAAy4D,WAAAP,EAAAxvD,EACAR,EAAA6lC,EAAAE,IAEAt/C,EACA,OAAAA,KAuBA4oE,EAAA5sE,UAAA0jD,oBAAA,SAAA7lC,EAAAN,EAAA6lC,EAAAzyC,EAAAy8D,EAAA/pB,EAAAgqB,GACA,OAAWt5D,KAeX64D,EAAA5sE,UAAA4jD,uBAAA,SAAA7lC,EAAAR,EAAA6lC,EAAAC,EAAA+pB,GACA,IAAAW,EAAA/vE,KAAAslD,2BACAvlC,EAAAR,EAAA6lC,EAA4C7rC,EAAIvZ,KAAAqlD,EAAA+pB,GAEhD,YAAAhiE,IAAA2iE,GAQAnB,EAAA5sE,UAAA6tE,iBAAA,SAAA7xB,GACA,IAAAgyB,EAAmB/5D,EAAM+nC,GACzB,GAAAgyB,KAAAhwE,KAAA6uE,gBACA,OAAA7uE,KAAA6uE,gBAAAmB,GAGA,IADA,IAAA9L,EACA9jE,EAAA,EAAAgX,EAAApX,KAAA+uE,2BAAA1rE,OAAkEjD,EAAAgX,IAAQhX,EAAA,CAC1E,IAAA6vE,EAAAjwE,KAAA+uE,2BAAA3uE,GACA,GAAA6vE,EAAA,WAAAjyB,GAAA,CACAkmB,EAAA+L,EAAA,UAAAjwE,KAAAg+C,GACA,OAGA,IAAAkmB,EAKA,UAAAvyD,MAAA,wCAAAqsC,EAAAjS,WAEA,OANA/rC,KAAA6uE,gBAAAmB,GAAA9L,EACAlkE,KAAA8uE,wBAAAkB,GAAiD18D,EAAM4wD,EAC7CtpD,EAASC,OAAA7a,KAAAkwE,2BAAAlwE,MAInBkkE,GASA0K,EAAA5sE,UAAAmuE,sBAAA,SAAAH,GACA,OAAAhwE,KAAA6uE,gBAAAmB,IAOApB,EAAA5sE,UAAAouE,kBAAA,WACA,OAAApwE,KAAA6uE,iBAMAD,EAAA5sE,UAAAmoD,OAAA,WACA,OAAAnqD,KAAAqwB,MAOAu+C,EAAA5sE,UAAAkuE,2BAAA,WACAlwE,KAAAqwB,KAAAw3B,UAQA+mB,EAAA5sE,UAAAmtE,0BAAA,SAAAa,GACA,IAAAJ,EAAA5vE,KAAA6uE,gBAAAmB,GAMA,cALAhwE,KAAA6uE,gBAAAmB,GAEIh4D,EAAahY,KAAA8uE,wBAAAkB,WACjBhwE,KAAA8uE,wBAAAkB,GAEAJ,GAQAhB,EAAA5sE,UAAAquE,4BAAA,SAAA/7D,EAAAiL,GACA,QAAAywD,KAAAhwE,KAAA6uE,gBACAtvD,GAAAywD,KAAAzwD,EAAAspC,aACA7oD,KAAAmvE,0BAAAa,GAAA52D,WAUAw1D,EAAA5sE,UAAAgnD,YAAA,SAAAzpC,GACIxJ,KAOJ64D,EAAA5sE,UAAAsuE,wBAAA,SAAA/wD,GACAA,EAAAqoC,oBAAAliD,KAAmG,KAOnGkpE,EAAA5sE,UAAAuuE,mCAAA,SAAAhxD,GACA,QAAAywD,KAAAhwE,KAAA6uE,gBACA,KAAAmB,KAAAzwD,EAAAspC,aAIA,YAHAtpC,EAAAqoC,oBAAAliD,KACqE1F,KAAAqwE,4BAAAzuE,KAAA5B,QAOrE4uE,EA1Te,CA2Tbt1D,GAOF,SAAAk3D,GAAAl8D,EAAAiL,GACEmvD,GAAcH,SAST,SAAAkC,GAAAC,EAAAC,GACP,OAAAD,EAAA7yB,OAAA8yB,EAAA9yB,OAEe,IAAA+yB,GAAA,GC5URC,GAAA,GAOHC,GAAiB,SAAAlC,GACrB,SAAAmC,EAAAz8D,GACAs6D,EAAAruE,KAAAP,KAAAsU,GAEA,IAAA5G,EAAA4G,EAAAqc,cAMA3wB,KAAAomE,SAAoB5pB,KAMpBx8C,KAAAi9D,QAAAj9D,KAAAomE,SAAAzpB,OAEA38C,KAAAi9D,QAAAhtD,MAAA2Y,MAAA,OACA5oB,KAAAi9D,QAAAhtD,MAAAhL,OAAA,OACAjF,KAAAi9D,QAAAhtD,MAAAs9C,QAAA,QACAvtD,KAAAi9D,QAAA5a,UAA6BiI,GAC7B58C,EAAAsjE,aAAAhxE,KAAAi9D,QAAAvvD,EAAAujE,WAAA,UAMAjxE,KAAA6sD,kBAAA,EAMA7sD,KAAAqmE,WAAsB3kE,KA+JtB,OA3JAktE,IAAAmC,EAAArkE,UAAAkiE,GACAmC,EAAA/uE,UAAAlB,OAAAY,OAAAktE,KAAA5sE,WACA+uE,EAAA/uE,UAAA+I,YAAAgmE,EAMAA,EAAA/uE,UAAA2lD,oBAAA,SAAAp0C,EAAAgM,GACA,IAAAjL,EAAAtU,KAAAmqD,SACA8T,EAAAj+D,KAAAomE,SACA,GAAA9xD,EAAAmG,YAAAlH,GAAA,CACA,IAAAskB,EAAAtY,EAAAsY,OACA8iB,EAAAp7B,EAAAo7B,WACA+N,EAAAnpC,EAAAmpC,UACA9vB,EAAA8vB,EAAA9vB,SAEA8H,EAAA1gC,KAAAkxE,aAAA3xD,GAEAy+C,EAAA,IAA8BgQ,GAAuB/P,EAAAtjB,EACrD9iB,EAAA6I,EAAA9H,GACAu4C,EAAA,IAA6BhT,GAAW5qD,EAAAyqD,EACxCz+C,EAAA0+C,EAAA,MACA3pD,EAAA+F,cAAA82D,KASAJ,EAAA/uE,UAAAkvE,aAAA,SAAA3xD,GACA,IAAAmpC,EAAAnpC,EAAAmpC,UACAze,EAAAjqC,KAAAi9D,QAAAr0C,MAAA,EACAshB,EAAAlqC,KAAAi9D,QAAAh4D,OAAA,EACAi8B,EAAA3hB,EAAAo7B,WAAA+N,EAAAxwB,WACAiJ,GAAAD,EACAnH,GAAA2uB,EAAA9vB,SACAuR,GAAAue,EAAA5wB,OAAA,GACAsS,GAAAse,EAAA5wB,OAAA,GACA,OAAWkS,GAAgBhqC,KAAAqmE,WAAAp8B,EAAAC,EAAAhJ,EAAAC,EAAApH,EAAAoQ,EAAAC,IAM3B2mC,EAAA/uE,UAAAgnD,YAAA,SAAAzpC,GAEA,GAAAA,EAAA,CAQA,IAAA0+C,EAAAj+D,KAAAomE,SACAzrB,EAAAp7B,EAAAo7B,WACA/xB,EAAAlmB,KAAA2tC,MAAA9wB,EAAAwe,KAAA,GAAA4c,GACA11C,EAAAvC,KAAA2tC,MAAA9wB,EAAAwe,KAAA,GAAA4c,GACA36C,KAAAi9D,QAAAr0C,UAAA5oB,KAAAi9D,QAAAh4D,WACAjF,KAAAi9D,QAAAr0C,QACA5oB,KAAAi9D,QAAAh4D,UAEAg5D,EAAAmT,UAAA,IAAAxoD,EAAA3jB,GAGA,IAAA2zB,EAAArZ,EAAAmpC,UAAA9vB,SAEA54B,KAAAkvE,oBAAA3vD,GAEAvf,KAAA2nD,oBAA6Bt1B,GAAeE,WAAAhT,GAE5C,IAAAqpC,EAAArpC,EAAAqpC,iBACIl+B,GAAUk+B,EAAmB6nB,IAEjC73C,IACAqlC,EAAAoT,OACMrP,GAAc/D,EAAArlC,EAAAhQ,EAAA,EAAA3jB,EAAA,IAGpB,IACA7E,EAAAgX,EADAk4D,EAAA/vD,EAAAmpC,UAAAxwB,WAEA,IAAA93B,EAAA,EAAAgX,EAAAwxC,EAAAvlD,OAA6CjD,EAAAgX,IAAQhX,EAAA,CACrD,IAAAogD,EAAAoI,EAAAxoD,GACA49C,EAAAwC,EAAAxC,MACA4xB,EAAkE5vE,KAAA6vE,iBAAA7xB,GACvDuN,GAAmB/K,EAAA8uB,IAC9B9uB,EAAArC,aAAoCc,GAAWE,QAG/CywB,EAAA0B,aAAA/xD,EAAAihC,IACAovB,EAAA2B,aAAAhyD,EAAAihC,EAAAyd,IAIArlC,GACAqlC,EAAAuT,UAGAxxE,KAAA2nD,oBAA6Bt1B,GAAeC,YAAA/S,GAE5Cvf,KAAA6sD,mBACA7sD,KAAAi9D,QAAAhtD,MAAAs9C,QAAA,GACAvtD,KAAA6sD,kBAAA,GAGA7sD,KAAAuwE,mCAAAhxD,GACAvf,KAAAswE,wBAAA/wD,QA3DAvf,KAAA6sD,mBACA7sD,KAAAi9D,QAAAhtD,MAAAs9C,QAAA,OACAvtD,KAAA6sD,kBAAA,IA+DAkkB,EAAA/uE,UAAA0jD,oBAAA,SAAA7lC,EAAAN,EAAA6lC,EAAAzyC,EAAAy8D,EAAA/pB,EAAAgqB,GACA,IAAArpE,EAUA5F,EATAsoD,EAAAnpC,EAAAmpC,UACA4mB,EAAA5mB,EAAAxwB,WAEA2wB,EAAAtpC,EAAAqpC,iBACA+mB,EAAA9mB,EAAAxlD,OAEA0c,EAAqBvY,GACrB+X,EAAA6mC,2BAAAvmC,EAAArZ,SAGA,IAAApG,EAAAuvE,EAAA,EAA2BvvE,GAAA,IAAQA,EAAA,CACnC,IAAAogD,EAAAqI,EAAAzoD,GACA49C,EAAAwC,EAAAxC,MACA,GAAUuN,GAAmB/K,EAAA8uB,IAAAjqB,EAAA9kD,KAAA8uE,EAAArxB,GAAA,CAC7B,IAAA4xB,EAAoE5vE,KAAA6vE,iBAAA7xB,GAGpE,GAFAh4C,EAAA4pE,EAAA6B,yBACA1xD,EAAAR,EAAA6lC,EAAAzyC,EAAAy8D,GACAppE,EACA,OAAAA,KAUA+qE,EAAA/uE,UAAAgtE,uBAAA,SAAAC,GACAL,EAAA5sE,UAAAgtE,uBAAAzuE,KAAAP,KAAAivE,GACA,QAAA7uE,EAAA,EAAAgX,EAAA63D,EAAA5rE,OAA6CjD,EAAAgX,IAAQhX,EAAA,CACrD,IAAAsxE,EAAAzC,EAAA7uE,GACW0pB,GAAQ+mD,GAAAa,IACnBb,GAAAnrE,KAAAgsE,KAKAX,EAjMqB,CAkMnBH,IAGae,GAAA,GCpNXC,GAAa,SAAAt1D,GACjB,SAAAu1D,EAAA7zB,GAEA1hC,EAAA/b,KAAAP,MAMAA,KAAA8xE,OAAA9zB,EA6NA,OAzNA1hC,IAAAu1D,EAAAnlE,UAAA4P,GACAu1D,EAAA7vE,UAAAlB,OAAAY,OAAA4a,KAAAta,WACA6vE,EAAA7vE,UAAA+I,YAAA8mE,EAWAA,EAAA7vE,UAAA+vE,uBAAA,SAAA16D,EAAAkvB,EAAAyrC,GACA,gBAMAl8B,EAAAm8B,GAIA,SAAAt/D,EAAAgjB,GACAq8C,EAAAl8B,KACAk8B,EAAAl8B,GAAA,IAEAk8B,EAAAl8B,GAAAngB,EAAAu8C,UAAA1/D,YAAAmjB,EAEA,OAAAte,EAAA86D,kBAAA5rC,EAAAuP,EAAAm8B,EAAAt/D,KAcAk/D,EAAA7vE,UAAAsjD,2BAAA,SAAAvlC,EAAAR,EAAA6lC,EAAAzyC,KAKAk/D,EAAA7vE,UAAAowE,SAAA,WACA,OAAApyE,KAAA8xE,QAQAD,EAAA7vE,UAAAqwE,mBAAA,SAAA/3D,GACA,IAAA+nD,EAAyD/nD,EAAA,OACzD+nD,EAAAtsC,aAA6B6mC,GAAU/pC,QACvC7yB,KAAAsyE,2BASAT,EAAA7vE,UAAA4jD,uBAAA,SAAA7lC,EAAAR,GACA,UAUAsyD,EAAA7vE,UAAAuwE,UAAA,SAAAlQ,GACA,IAAAmQ,EAAAnQ,EAAAtsC,WAQA,OAPAy8C,GAAsB5V,GAAU/pC,QAAA2/C,GAAyB5V,GAAUvhD,OAC7D/H,EAAM+uD,EAAQznD,EAASC,OAAA7a,KAAAqyE,mBAAAryE,MAE7BwyE,GAAsB5V,GAAUjqC,OAChC0vC,EAAAh8D,OACAmsE,EAAAnQ,EAAAtsC,YAEAy8C,GAAyB5V,GAAU/pC,QAMnCg/C,EAAA7vE,UAAAswE,wBAAA,WACA,IAAAt0B,EAAAh+C,KAAAoyE,WACAp0B,EAAAK,cAAAL,EAAAI,kBAAwDa,GAAWE,OACnEn/C,KAAAwc,WASAq1D,EAAA7vE,UAAAywE,oBAAA,SAAAlzD,EAAAmzD,GACA,GAAAA,EAAA9T,iBAAA,CAMA,IAAA+T,EAAA,SAAAD,EAAAp+D,EAAAiL,GACA,IAAAsnC,EAA4B5wC,EAAMy8D,GAClC7rB,KAAAtnC,EAAAwpC,WACA2pB,EAAAE,YAAArzD,EAAAmpC,UAAAniB,WACAhnB,EAAAwpC,UAAAlC,KAEOjlD,KAAA,KAAA8wE,GAEPnzD,EAAAqoC,oBAAAliD,KACmE,KAYnEmsE,EAAA7vE,UAAA6wE,gBAAA,SAAA9pB,EAAA2pB,EAAAtoE,EAAA6nE,GAEA,IAAAprB,EAAwB5wC,EAAMy8D,GAC9BI,EAAA1oE,EAAAoI,WACAq0C,KAAAkC,EACA+pB,KAAA/pB,EAAAlC,GACAkC,EAAAlC,GAAAisB,GAAA1uE,OAAA6tE,GAEAlpB,EAAAlC,GAAAisB,GAAAb,GAGAlpB,EAAAlC,GAAA,GACAkC,EAAAlC,GAAAisB,GAAAb,IAwBAJ,EAAA7vE,UAAA+wE,kBAAA,SACAxzD,EACAmzD,EACAvuC,EACAwW,EACApU,EACA1O,EACAm7C,EACAC,EACAC,EACA/6D,GAEA,IAAA0uC,EAAwB5wC,EAAMy8D,GAC9B7rB,KAAAtnC,EAAAynC,cACAznC,EAAAynC,YAAAH,GAAA,IAEA,IAGAlxB,EAAAs8C,EAAAlrB,EAAA7iC,EAAAE,EAAAha,EAHA48C,EAAAznC,EAAAynC,YAAAH,GACAU,EAAAhoC,EAAAgoC,UACAjS,EAAAnR,EAAA8V,aAEA,IAAA7vC,EAAAkrC,EAAqBlrC,GAAA4oE,IAAe5oE,EAGpC,IAFA6nE,EAAA9tC,EAAAgvC,0BAAAt7C,EAAAztB,EAAA6nE,GACAlrB,EAAA5iB,EAAA6R,cAAA5rC,GACA8Z,EAAA+tD,EAAAnuE,KAA8BogB,GAAA+tD,EAAAhuE,OAAqBigB,EACnD,IAAAE,EAAA6tD,EAAAjuE,KAAgCogB,GAAA6tD,EAAA/tE,OAAqBkgB,EACrD4uD,EAAA5oE,GAAA6oE,GACAt9C,EAAA+8C,EAAAU,QAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACA5Q,EAAAI,YAAmCrD,GAASC,OAC5Cq0B,EAAArxB,EAAAL,WAAA,EACAiyB,EAAA/yB,YAAAmB,EAAAL,WACAiyB,EAAAxzB,QAAA,CAAA4B,EAAAkxB,EACA1iB,EAAAkvC,mBAAA19C,EAAAu8C,WAAAnrB,UAGA35C,IAAA8lE,GACAA,EAAA3yE,KAAA4X,EAAAwd,IAGA+8C,EAAAY,QAAAlpE,EAAA8Z,EAAAE,EAAAmiB,IAOAsrC,EAtOiB,CAuOfj1D,GAEa22D,GAAA,GCpOXC,GAAmB,SAAA3B,GACvB,SAAA4B,EAAAz1B,GAEA6zB,EAAAtxE,KAAAP,KAAAg+C,GAMAh+C,KAAA0zE,mBAMA1zE,KAAAqmE,WAAsB3kE,KA4JtB,OAxJAmwE,IAAA4B,EAAA/mE,UAAAmlE,GACA4B,EAAAzxE,UAAAlB,OAAAY,OAAAmwE,KAAA7vE,WACAyxE,EAAAzxE,UAAA+I,YAAA0oE,EAQAA,EAAAzxE,UAAA2xE,KAAA,SAAA1V,EAAA1+C,EAAAsY,GACA,IAAA8iB,EAAAp7B,EAAAo7B,WACA/xB,EAAArJ,EAAAwe,KAAA,GAAA4c,EACA11C,EAAAsa,EAAAwe,KAAA,GAAA4c,EACA/hB,EAAArZ,EAAAmpC,UAAA9vB,SACAg7C,EAAkBt2C,GAAUzF,GAC5Bg8C,EAAmBx2C,GAAWxF,GAC9Bi8C,EAAsB12C,GAAcvF,GACpCk8C,EAAqB52C,GAAatF,GAE9BrwB,GAAc+X,EAAAgnC,2BAAAqtB,GACdpsE,GAAc+X,EAAAgnC,2BAAAstB,GACdrsE,GAAc+X,EAAAgnC,2BAAAutB,GACdtsE,GAAc+X,EAAAgnC,2BAAAwtB,GAElB9V,EAAAoT,OACIrP,GAAc/D,GAAArlC,EAAAhQ,EAAA,EAAA3jB,EAAA,GAClBg5D,EAAAgL,YACAhL,EAAA4K,OAAA+K,EAAA,GAAAj5B,EAAAi5B,EAAA,GAAAj5B,GACAsjB,EAAA6K,OAAA+K,EAAA,GAAAl5B,EAAAk5B,EAAA,GAAAl5B,GACAsjB,EAAA6K,OAAAgL,EAAA,GAAAn5B,EAAAm5B,EAAA,GAAAn5B,GACAsjB,EAAA6K,OAAAiL,EAAA,GAAAp5B,EAAAo5B,EAAA,GAAAp5B,GACAsjB,EAAA0V,OACI3R,GAAc/D,EAAArlC,EAAAhQ,EAAA,EAAA3jB,EAAA,IAUlBwuE,EAAAzxE,UAAAgyE,sBAAA,SAAAzgE,EAAA0qD,EAAA1+C,EAAA00D,GACA,IAAAj2B,EAAAh+C,KAAAoyE,WACA,GAAAp0B,EAAAvjC,YAAAlH,GAAA,CACA,IAAAqV,EAAArJ,EAAAwe,KAAA,GAAAxe,EAAAo7B,WACA11C,EAAAsa,EAAAwe,KAAA,GAAAxe,EAAAo7B,WACA/hB,EAAArZ,EAAAmpC,UAAA9vB,SACMopC,GAAc/D,GAAArlC,EAAAhQ,EAAA,EAAA3jB,EAAA,GACpB,IAAAy7B,OAAAtzB,IAAA6mE,EACAA,EAAAj0E,KAAAkxE,aAAA3xD,EAAA,GACAsoC,EAAA,IAAuBmmB,GACvB/P,EAAA1+C,EAAAo7B,WAAAp7B,EAAAsY,OAAA6I,EACAnhB,EAAAmpC,UAAA9vB,UACAu4C,EAAA,IAA6BhT,GAAW5qD,EAAAs0C,EAAAtoC,EACxC0+C,EAAA,MACAjgB,EAAA3jC,cAAA82D,GACMnP,GAAc/D,EAAArlC,EAAAhQ,EAAA,EAAA3jB,EAAA,KAcpBwuE,EAAAzxE,UAAAyvE,yBAAA,SAAA1xD,EAAAR,EAAA6lC,EAAAzyC,EAAAy8D,GACA,IAAAW,EAAA/vE,KAAAslD,2BAAAvlC,EAAAR,EAAA6lC,EAA2F7rC,GAE3F,OAAAw2D,EACAp9D,EAAApS,KAAA6uE,EAAApvE,KAAAoyE,WAAA,WAEA,GAWAqB,EAAAzxE,UAAAkyE,YAAA,SAAAjW,EAAA1+C,EAAAihC,EAAAyzB,GACAj0E,KAAAg0E,sBAA+B3hD,GAAeC,YAAA2rC,EAAA1+C,EAAA00D,IAS9CR,EAAAzxE,UAAAmyE,WAAA,SAAAlW,EAAA1+C,EAAA00D,GACAj0E,KAAAg0E,sBAA+B3hD,GAAeE,WAAA0rC,EAAA1+C,EAAA00D,IAS9CR,EAAAzxE,UAAA2lD,oBAAA,SAAAsW,EAAA1+C,EAAA00D,GACAj0E,KAAAg0E,sBAA+B3hD,GAAeG,OAAAyrC,EAAA1+C,EAAA00D,IAS9CR,EAAAzxE,UAAAkvE,aAAA,SAAA3xD,EAAA0iD,GACA,IAAAvZ,EAAAnpC,EAAAmpC,UACA/N,EAAAp7B,EAAAo7B,WACA1Q,EAAA0Q,EAAAp7B,EAAAwe,KAAA,KACAmM,EAAAyQ,EAAAp7B,EAAAwe,KAAA,KACAmD,EAAAyZ,EAAA+N,EAAAxwB,WACAiJ,GAAAD,EACAnH,GAAA2uB,EAAA9vB,SACAuR,GAAAue,EAAA5wB,OAAA,GAAAmqC,EACA73B,GAAAse,EAAA5wB,OAAA,GACA,OAAWkS,GAAgBhqC,KAAAqmE,WAAAp8B,EAAAC,EAAAhJ,EAAAC,EAAApH,EAAAoQ,EAAAC,IAS3BqpC,EAAAzxE,UAAAuvE,aAAA,SAAAhyD,EAAAihC,EAAAyd,GACIloD,KASJ09D,EAAAzxE,UAAAsvE,aAAA,SAAA/xD,EAAAihC,GACA,OAAWzqC,KAGX09D,EA3KuB,CA4KrBF,IAEaa,GAAA,GCjLXC,GAA0B,SAAAZ,GAC9B,SAAAa,EAAAt2B,GAEAy1B,EAAAlzE,KAAAP,KAAAg+C,GAMAh+C,KAAAu0E,iCAA4C7yE,KAM5C1B,KAAAw0E,kBAAA,KAgGA,OA5FAf,IAAAa,EAAA5nE,UAAA+mE,GACAa,EAAAtyE,UAAAlB,OAAAY,OAAA+xE,KAAAzxE,WACAsyE,EAAAtyE,UAAA+I,YAAAupE,EAKAA,EAAAtyE,UAAAuvE,aAAA,SAAAhyD,EAAAihC,EAAAyd,GAEAj+D,KAAAm0E,WAAAlW,EAAA1+C,GAEA,IAAA8iD,EAAAriE,KAAAy8D,WACA,GAAA4F,EAAA,CAGA,IAAAxqC,EAAA2oB,EAAA3oB,OACA48C,OAAArnE,IAAAyqB,IACWmE,GAAcnE,EAAAtY,EAAAsY,SACf+G,GAAU/G,EAAAtY,EAAAsY,QACpB48C,GACAz0E,KAAA2zE,KAAA1V,EAAA1+C,EAAmF,GAGnF,IAAAm1D,EAAA10E,KAAA20E,oBAIAjS,EAAAzE,EAAA0E,YACA1E,EAAA0E,YAAAniB,EAAA7C,QAIA,IAAAr5B,EAAAowD,EAAA,GACAlwD,EAAAkwD,EAAA,GACAE,EAAAvS,EAAAz5C,MAAA8rD,EAAA,GACAG,EAAAxS,EAAAp9D,OAAAyvE,EAAA,GACAE,GAAA,IAAAC,GAAA,IACA5W,EAAAmE,UAAAC,EAAA,KAAAA,EAAAz5C,OAAAy5C,EAAAp9D,OACAvC,KAAA2tC,MAAA/rB,GAAA5hB,KAAA2tC,MAAA7rB,GAAA9hB,KAAA2tC,MAAAukC,GAAAlyE,KAAA2tC,MAAAwkC,IAEA5W,EAAA0E,YAAAD,EAEA+R,GACAxW,EAAAuT,UAIAxxE,KAAAk0E,YAAAjW,EAAA1+C,EAAAihC,IAOA8zB,EAAAtyE,UAAAy6D,SAAA,WACA,OAAW1mD,KAOXu+D,EAAAtyE,UAAA2yE,kBAAA,WACA,OAAW5+D,KAMXu+D,EAAAtyE,UAAAyvE,yBAAA,SAAA1xD,EAAAR,EAAA6lC,EAAAzyC,EAAAy8D,GACA,GAAApvE,KAAAy8D,WAAA,CAIA,IAAA58C,EAAgBrY,GAAcxH,KAAAu0E,iCAAAx0D,EAAAvZ,SAC1B4zB,GAAeva,EAAAN,EAAAmpC,UAAAxwB,WAAAl4B,KAAA0zE,oBAEnB1zE,KAAAw0E,oBACAx0E,KAAAw0E,kBAA+Bh4B,GAAqB,MAGpDx8C,KAAAw0E,kBAAApD,UAAA,SACApxE,KAAAw0E,kBAAApS,UAAApiE,KAAAy8D,WAAA58C,EAAA,GAAAA,EAAA,gBAEA,IAAAi1D,EAAA90E,KAAAw0E,kBAAAO,aAAA,SAAAlvE,KACA,OAAAivE,EAAA,KACAniE,EAAApS,KAAA6uE,EAAApvE,KAAAoyE,WAAA0C,QAEA,IAIAR,EA/G8B,CAgH5BF,IAGaY,GAAA,GC5GXC,GAAwB,SAAAX,GAC5B,SAAAY,EAAAC,GA2BA,GAzBAb,EAAA/zE,KAAAP,KAAAm1E,GAMAn1E,KAAA4mE,OAAA,KAMA5mE,KAAAo1E,gBAA2B1zE,KAK3B1B,KAAAq1E,iBAAA,GAMAr1E,KAAAs1E,gBAAA,KAEAH,EAAAppC,YAAiCuxB,GAASI,OAC1C,QAAAt9D,EAAA,EAAAgX,EAA2By5D,GAAyBxtE,OAAQjD,EAAAgX,IAAQhX,EAAA,CACpE,IAAAsxE,EAAmBb,GAAyBzwE,GAC5C,GAAAsxE,IAAAwD,GAAAxD,EAAA,WAAAyD,GAAA,CACAn1E,KAAAs1E,gBAA+E,IAAA5D,EAAAyD,GAC/E,QAyIA,OAlIAb,IAAAY,EAAAxoE,UAAA4nE,GACAY,EAAAlzE,UAAAlB,OAAAY,OAAA4yE,KAAAtyE,WACAkzE,EAAAlzE,UAAA+I,YAAAmqE,EAKAA,EAAAlzE,UAAAqX,gBAAA,WACArZ,KAAAs1E,iBACAt1E,KAAAs1E,gBAAAl8D,UAEAk7D,EAAAtyE,UAAAqX,gBAAA9Y,KAAAP,OAMAk1E,EAAAlzE,UAAAy6D,SAAA,WACA,OAAAz8D,KAAA4mE,OAAA5mE,KAAA4mE,OAAAnK,WAAA,MAMAyY,EAAAlzE,UAAA2yE,kBAAA,WACA,OAAA30E,KAAAo1E,iBAMAF,EAAAlzE,UAAAsvE,aAAA,SAAA/xD,EAAAihC,GAEA,IAMA6hB,EANA1nB,EAAAp7B,EAAAo7B,WACA5c,EAAAxe,EAAAwe,KACA2qB,EAAAnpC,EAAAmpC,UACA6sB,EAAA7sB,EAAA5wB,OACAw3C,EAAA5mB,EAAAxwB,WAGAi9C,EAAuEn1E,KAAAoyE,WACvEoD,EAAyEL,EAAAtrB,YAEzErC,EAAAjoC,EAAAkoC,UAEAguB,EAAAz1E,KAAAs1E,gBACAI,EAAAn2D,EAAAsY,OAKA,GAJA49C,QAAAroE,IAAAozC,EAAA3oB,SACA69C,EAAuBh3C,GAAeg3C,EAAAl1B,EAAA3oB,UAGtC2vB,EAAeruB,GAAQC,aAAAouB,EAAsBruB,GAAQE,eAC5CmE,GAAOk4C,GAAA,CAChB,IAAAnvC,EAAAmiB,EAAAniB,WACA,IAAW+1B,GAA0B,CACrC,IAAA9zB,EAAAgtC,EAAAr7B,gBACA3R,IACAjC,EAAAiC,GAGA,IAAAmtC,EAAA31E,KAAAq1E,iBACA,GAAAI,EAAA,CACA,IAAAxX,EAAAwX,EAAAxX,QACA2X,EAAyF7+D,EAAM,GAAGwI,EAAA,CAClGwe,KAAA,CACYN,GAAQi4C,GAAApG,EACR5xC,GAASg4C,GAAApG,GAErB5mB,UAAmE3xC,EAAM,GAAGwI,EAAAmpC,UAAA,CAC5E9vB,SAAA,MAGAi9C,EAAA/0E,OAAA+X,KAAA+8D,EAAA9sB,oBAAAr/C,OACA44D,EAAA,IAAoBhF,GAAWqY,EAAApG,EAAA30B,EAAAsjB,EAAAthB,OAAA,SAAAhqC,IAC/B8iE,EAAAnE,aAAAsE,EAAAp1B,KACAi1B,EAAAK,oBACexrD,GAAMqrD,EAAAE,KACrB5X,EAAAthB,OAAA/zB,MAAAgtD,EAAA73C,KAAA,GAAA4c,EACAsjB,EAAAthB,OAAA13C,OAAA2wE,EAAA73C,KAAA,GAAA4c,EACA86B,EAAAM,QAAA9X,EAAA2X,EAAAp1B,GACAm1B,EAAAE,EACAljE,YAIA0vD,EAAAmT,EAAA/Y,SACAiZ,EAAApG,EAAA30B,EAAApU,GAEA87B,GAAAriE,KAAAuyE,UAAAlQ,KACAriE,KAAA4mE,OAAAvE,EACAriE,KAAAq1E,iBAAAM,GAIA,GAAA31E,KAAA4mE,OAAA,CACAvE,EAAAriE,KAAA4mE,OACA,IAAAoP,EAAA3T,EAAA3+B,YACAuyC,EAAA5T,EAAArsB,gBACAkgC,EAAA7T,EAAA3F,gBACAriC,EAAAsgB,EAAAs7B,GACA3G,EAAA4G,GACAx1C,EAAsBsJ,GAAgBhqC,KAAAo1E,gBACtCz6B,EAAA5c,EAAA,KAAA4c,EAAA5c,EAAA,KACA1D,IACA,EACA67C,GAAAF,EAAA,GAAAT,EAAA,IAAAU,EACAC,GAAAX,EAAA,GAAAS,EAAA,IAAAC,GACMjsC,GAAgBhqC,KAAAu0E,iCACtB55B,EAAA5c,EAAA,KAAA2C,EAAA,GAAAia,EAAA5c,EAAA,KAAA2C,EAAA,GACAia,EAAA20B,GAAA30B,EAAA20B,EACA,GACAiG,EAAA,IAAAA,EAAA,IAEAv1E,KAAA0zE,mBAAAuC,EAAAt7B,EAAAu7B,EAGA,QAAAl2E,KAAA4mE,QAMAsO,EAAAlzE,UAAAsjD,2BAAA,SAAAvlC,EAAAR,EAAA6lC,EAAAzyC,GACA,OAAA3S,KAAAs1E,gBACAt1E,KAAAs1E,gBAAAhwB,2BAAAvlC,EAAAR,EAAA6lC,EAAAzyC,GAEA2hE,EAAAtyE,UAAAsjD,2BAAA/kD,KAAAP,KAAA+f,EAAAR,EAAA6lC,EAAAzyC,IAIAuiE,EA1K4B,CA2K1BF,IAQFC,GAAwB,oBAAAj3B,GACxB,OAAAA,EAAAjS,YAA6BuxB,GAASC,OACtCvf,EAAAjS,YAAwBuxB,GAASI,QACsB,EAAAyY,kBAAgCxY,GAAgBJ,OAUvG0X,GAAwB,mBAAAmB,EAAAp4B,GACxB,WAAai3B,GAA2E,IAIzE,IAAAoB,GAAA,GCjNfC,GAAA,SAAAxyE,EAAAG,EAAAD,EAAAE,GAKAlE,KAAA8D,OAKA9D,KAAAiE,OAKAjE,KAAAgE,OAKAhE,KAAAkE,QAkGO,SAASqyE,GAAczyE,EAAAG,EAAAD,EAAAE,EAAA+tE,GAC9B,YAAA7kE,IAAA6kE,GACAA,EAAAnuE,OACAmuE,EAAAhuE,OACAguE,EAAAjuE,OACAiuE,EAAA/tE,OACA+tE,GAEA,IAAAqE,GAAAxyE,EAAAG,EAAAD,EAAAE,GAlGAoyE,GAAAt0E,UAAA+C,SAAA,SAAAmtE,GACA,OAAAlyE,KAAAmrC,WAAA+mC,EAAA,GAAAA,EAAA,KAOAoE,GAAAt0E,UAAAw0E,kBAAA,SAAAvE,GACA,OAAAjyE,KAAA8D,MAAAmuE,EAAAnuE,MAAAmuE,EAAAhuE,MAAAjE,KAAAiE,MACAjE,KAAAgE,MAAAiuE,EAAAjuE,MAAAiuE,EAAA/tE,MAAAlE,KAAAkE,MAQAoyE,GAAAt0E,UAAAmpC,WAAA,SAAAjnB,EAAAE,GACA,OAAApkB,KAAA8D,MAAAogB,MAAAlkB,KAAAiE,MAAAjE,KAAAgE,MAAAogB,MAAApkB,KAAAkE,MAOAoyE,GAAAt0E,UAAAsoB,OAAA,SAAA2nD,GACA,OAAAjyE,KAAA8D,MAAAmuE,EAAAnuE,MAAA9D,KAAAgE,MAAAiuE,EAAAjuE,MACAhE,KAAAiE,MAAAguE,EAAAhuE,MAAAjE,KAAAkE,MAAA+tE,EAAA/tE,MAMAoyE,GAAAt0E,UAAAoC,OAAA,SAAA6tE,GACAA,EAAAnuE,KAAA9D,KAAA8D,OACA9D,KAAA8D,KAAAmuE,EAAAnuE,MAEAmuE,EAAAhuE,KAAAjE,KAAAiE,OACAjE,KAAAiE,KAAAguE,EAAAhuE,MAEAguE,EAAAjuE,KAAAhE,KAAAgE,OACAhE,KAAAgE,KAAAiuE,EAAAjuE,MAEAiuE,EAAA/tE,KAAAlE,KAAAkE,OACAlE,KAAAkE,KAAA+tE,EAAA/tE,OAOAoyE,GAAAt0E,UAAA07B,UAAA,WACA,OAAA19B,KAAAkE,KAAAlE,KAAAgE,KAAA,GAMAsyE,GAAAt0E,UAAAykD,QAAA,WACA,OAAAzmD,KAAAy9B,WAAAz9B,KAAA09B,cAMA44C,GAAAt0E,UAAAy7B,SAAA,WACA,OAAAz9B,KAAAiE,KAAAjE,KAAA8D,KAAA,GAOAwyE,GAAAt0E,UAAAgD,WAAA,SAAAitE,GACA,OAAAjyE,KAAA8D,MAAAmuE,EAAAhuE,MACAjE,KAAAiE,MAAAguE,EAAAnuE,MACA9D,KAAAgE,MAAAiuE,EAAA/tE,MACAlE,KAAAkE,MAAA+tE,EAAAjuE,MAyBe,IAAAyyE,GAAA,GCzHXC,GAAuB,SAAApC,GAC3B,SAAAqC,EAAAC,EAAAC,GAEAvC,EAAA/zE,KAAAP,KAAA42E,GAMA52E,KAAAi+D,QAAA4Y,EAAA,KAA0Cr6B,KAM1Cx8C,KAAA82E,cAMA92E,KAAA+2E,gBAAA,KAMA/2E,KAAAg3E,iBAMAh3E,KAAAi3E,cAAA,GAMAj3E,KAAAk3E,WAAA,EAMAl3E,KAAAm3E,UAAqB37C,KAMrBx7B,KAAAo3E,cAAA,IAA6BX,GAAS,SAMtCz2E,KAAAo1E,gBAA2B1zE,KAM3B1B,KAAAq3E,WAAA,EA+RA,OA3RA/C,IAAAqC,EAAAjqE,UAAA4nE,GACAqC,EAAA30E,UAAAlB,OAAAY,OAAA4yE,KAAAtyE,WACA20E,EAAA30E,UAAA+I,YAAA4rE,EAOAA,EAAA30E,UAAAs1E,gBAAA,SAAA3hD,GACA,IAAAihD,EAAqE52E,KAAAoyE,WACrEmF,EAAA5hD,EAAAI,WACAyhD,EAAAZ,EAAAa,4BACA,OAAAF,GAAwB7kD,GAASG,QACjC0kD,GAAqB7kD,GAASI,OAC9BykD,GAAqB7kD,GAASrX,QAAAm8D,GAW9Bb,EAAA30E,UAAAoxE,QAAA,SAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACA,IAAAqwC,EAAqE52E,KAAAoyE,WACrEM,EAAuEkE,EAAA/sB,YACvEl0B,EAAA+8C,EAAAU,QAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GAaA,OAZA5Q,EAAAI,YAA2BrD,GAASrX,QACpCu7D,EAAAa,4BAGOb,EAAAc,aAAA,IAEP13E,KAAAk3E,WAAA,GAHAvhD,EAAAgiD,SAAsBjlD,GAASG,SAM/B7yB,KAAAs3E,gBAAA3hD,KACAA,IAAAiiD,kBAEAjiD,GAMAghD,EAAA30E,UAAAsvE,aAAA,SAAA/xD,EAAAihC,GAEA,IAAA7F,EAAAp7B,EAAAo7B,WACA5c,EAAAxe,EAAAwe,KACA2qB,EAAAnpC,EAAAmpC,UACAniB,EAAAmiB,EAAAniB,WACA+oC,EAAA5mB,EAAAxwB,WACAq9C,EAAA7sB,EAAA5wB,OAEA8+C,EAAqE52E,KAAAoyE,WACrEM,EAAuEkE,EAAA/sB,YACvEguB,EAAAnF,EAAAj2D,cACA0nB,EAAAuuC,EAAAoF,yBAAAvxC,GACAn8B,EAAA+5B,EAAA4zC,kBAAAzI,EAAAtvE,KAAAq3E,YACAtwB,EAAA5iB,EAAA6R,cAAA5rC,GACA4tE,EAAAt1E,KAAA2tC,MAAAi/B,EAAAvoB,IAAA,EACAlvB,EAAAtY,EAAAsY,OAKA,QAHAzqB,IAAAozC,EAAA3oB,SACAA,EAAe6G,GAAe7G,EAAA2oB,EAAA3oB,SAEtB2F,GAAO3F,GAEf,SAGA,IAAAo6C,EAAA9tC,EAAAgvC,0BAAAt7C,EAAAztB,GACA4rE,EAAA7xC,EAAA8zC,mBAAA7tE,EAAA6nE,GAEAiG,EAAAxF,EAAAyF,kBAAAx9B,GAKAy9B,EAAA,GACAA,EAAAhuE,GAAA,GAEA,IASAurB,EAAAzR,EAAAE,EATAi0D,EAAAr4E,KAAA+xE,uBACAW,EAAAnsC,EAAA6xC,GAEA5wB,EAAAjoC,EAAAkoC,UACA6wB,EAAA9wB,EAAuCruB,GAAQC,YAAAouB,EAAqBruB,GAAQE,aAE5E89C,EAAAn3E,KAAAm3E,UACAoB,EAAAv4E,KAAAo3E,cAGA,IAFAp3E,KAAAk3E,WAAA,EAEAhzD,EAAA+tD,EAAAnuE,KAA4BogB,GAAA+tD,EAAAhuE,OAAqBigB,EACjD,IAAAE,EAAA6tD,EAAAjuE,KAA8BogB,GAAA6tD,EAAA/tE,OAAqBkgB,EACnD,KAAA2yB,KAAAC,MAAAz3B,EAAAkpC,KAAA,IAAA6vB,GAAA,CAIA,GADA3iD,EAAA31B,KAAAozE,QAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACAvmC,KAAAs3E,gBAAA3hD,GAAA,CACA,IAAA6iD,EAAoBviE,EAAMjW,MAC1B,GAAA21B,EAAAI,YAAiCrD,GAASG,OAAA,CAC1CulD,EAAAhuE,GAAAurB,EAAAu8C,UAAA1/D,YAAAmjB,EACA,IAAA8iD,EAAA9iD,EAAA8iD,aAAAD,GACAx4E,KAAAk3E,YAAAuB,IAAA,IAAAz4E,KAAAi3E,cAAA7zE,QAAAuyB,KACA31B,KAAAk3E,WAAA,GAGA,OAAAvhD,EAAA+iD,SAAAF,EAAAj5D,EAAAkpC,MAEA,SAIA,IAAAkwB,EAAAx0C,EAAAy0C,2BACAjjD,EAAAu8C,UAAAqG,EAAApB,GACA0B,GAAA,EACAF,IACAE,EAAAR,EAAAjuE,EAAA,EAAAuuE,IAEAE,GACA10C,EAAA20C,gCACAnjD,EAAAu8C,UAAAmG,EAAA,KAAAE,EAAApB,GAMA,IAAAzD,EAAA3sB,EAAApM,EAAAu9B,EAAAF,EACA,KAAAh4E,KAAA0zE,oBAAA38B,KAAAC,MAAAz3B,EAAAkpC,KAAA,IAAA6vB,KACAt4E,KAAAk3E,YACAl3E,KAAA+2E,kBAAoC/6C,GAAch8B,KAAA+2E,gBAAAl/C,IAClD73B,KAAAg3E,kBAAAa,GACAG,GAAAh4E,KAAA82E,gBACAwB,GAAA5E,GAAA1zE,KAAA0zE,oBACA,CAEA,IAAAzV,EAAAj+D,KAAAi+D,QACA,GAAAA,EAAA,CACA,IAAA8a,EAAArG,EAAAsG,iBAAA5uE,EAAAuwC,EAAApU,GACA3d,EAAAlmB,KAAA2tC,MAAA4hC,EAAAx0C,WAAAs7C,EAAA,GAAAf,GACA/yE,EAAAvC,KAAA2tC,MAAA4hC,EAAAv0C,YAAAq7C,EAAA,GAAAf,GACAr7B,EAAAshB,EAAAthB,OACAA,EAAA/zB,UAAA+zB,EAAA13C,WACAjF,KAAA82E,cAAAkB,EACAr7B,EAAA/zB,QACA+zB,EAAA13C,WAEAjF,KAAA+2E,kBAAuCj6C,GAAMk5C,EAAAh2E,KAAA+2E,kBAC7C9Y,EAAAmT,UAAA,IAAAxoD,EAAA3jB,GAEA+yE,EAAAh4E,KAAA82E,eAIA92E,KAAAi3E,cAAA5zE,OAAA,EAEA,IAUAw1C,EAAAogC,EAAAC,EAAAlG,EAAA5yE,EAAAgX,EACA+hE,EAAAC,EAAAC,EAAA7W,EAAAC,EAXA6W,EAAAx4E,OAAA+X,KAAAu/D,GAAA9jE,IAAAwZ,QAYA,IAXAwrD,EAAA7vE,KAAA,SAAAnF,EAAAC,GACA,OAAAD,IAAA8F,EACA,EACS7F,IAAA6F,GACT,EAEA9F,EAAAC,EAAA,EAAAD,EAAAC,GAAA,MAKAnE,EAAA,EAAAgX,EAAAkiE,EAAAj2E,OAAiCjD,EAAAgX,IAAQhX,EAOzC,QAAAm5E,KANAvG,EAAAsG,EAAAl5E,GACA84E,EAAAxG,EAAAsG,iBAAAhG,EAAAr4B,EAAApU,GACAsS,EAAA1U,EAAA6R,cAAAg9B,GACAiG,EAAApgC,EAAAkO,EACAqyB,EAAAlB,EAAAxF,EAAA8G,uBAAAjzC,GACA8yC,EAAAjB,EAAApF,GACAqG,EACA1jD,EAAA0jD,EAAAE,GACAJ,EAAAh1C,EAAAs1C,mBAAA9jD,EAAA+jD,eAAAvC,GACAjzD,GAAAi1D,EAAA,GAAAnD,EAAA,IAAAjvB,EAAAmxB,EAAAF,EACA5zD,GAAA4xD,EAAA,GAAAmD,EAAA,IAAApyB,EAAAmxB,EAAAF,EACAxV,EAAA0W,EAAA,GAAAD,EAAAjB,EACAvV,EAAAyW,EAAA,GAAAD,EAAAjB,EACAh4E,KAAA25E,cAAAhkD,EAAApW,EAAAihC,EAAAt8B,EAAAE,EAAAo+C,EAAAC,EAAA2W,EAAAhvE,IAAA4oE,GACAhzE,KAAAi3E,cAAAvxE,KAAAiwB,GAIA31B,KAAAg3E,iBAAAa,EACA73E,KAAA0zE,mBAAA3sB,EAAApM,EAAAu9B,EAAAF,EACAh4E,KAAA+2E,gBAAAf,EAGA,IAAA37C,EAAAr6B,KAAA0zE,mBAAApE,EACA5uC,EAAoBsJ,GAAgBhqC,KAAAo1E,gBACpCz6B,EAAA5c,EAAA,KAAA4c,EAAA5c,EAAA,KACA1D,IACA,GACAr6B,KAAA+2E,gBAAA,GAAAxB,EAAA,IAAAv1E,KAAA0zE,mBAAA/4B,GACA46B,EAAA,GAAAv1E,KAAA+2E,gBAAA,IAAA/2E,KAAA0zE,mBAAA/4B,GAaA,OAZI3Q,GAAgBhqC,KAAAu0E,iCACpB55B,EAAA5c,EAAA,KAAA2C,EAAA,GAAAia,EAAA5c,EAAA,KAAA2C,EAAA,GACAia,EAAA20B,GAAA30B,EAAA20B,EACA,GACAiG,EAAA,IAAAA,EAAA,IAGAv1E,KAAA6yE,gBAAAtzD,EAAAwpC,UAAA2pB,EAAAtoE,EAAA6nE,GACAjyE,KAAA+yE,kBAAAxzD,EAAAmzD,EAAAvuC,EAAAwW,EACApU,EAAA1O,EAAAztB,EAAAwsE,EAAAc,cACA13E,KAAAyyE,oBAAAlzD,EAAAmzD,GAEA1yE,KAAAi3E,cAAA5zE,OAAA,GAcAszE,EAAA30E,UAAA23E,cAAA,SAAAhkD,EAAApW,EAAAihC,EAAAt8B,EAAAE,EAAAo+C,EAAAC,EAAAmX,EAAAC,GACA,IAAAxX,EAAAriE,KAAA85E,aAAAnkD,GACA,GAAA0sC,EAAA,CAGA,IAAAmW,EAAcviE,EAAMjW,MACpB0iE,EAAAmX,EAAAlkD,EAAA+iD,SAAAF,EAAAj5D,EAAAkpC,MAAA,EACAmuB,EAAqE52E,KAAAoyE,WACrEM,EAAuEkE,EAAA/sB,YACvE,IAAA6Y,GAAAgQ,EAAAqH,UAAAx6D,EAAAmpC,UAAAniB,aACAvmC,KAAAi+D,QAAAmT,UAAAltD,EAAAE,EAAAo+C,EAAAC,GAEA,IAAAuX,EAAAtX,IAAA1iE,KAAAi+D,QAAA0E,YACAqX,IACAh6E,KAAAi+D,QAAAoT,OACArxE,KAAAi+D,QAAA0E,YAAAD,GAEA1iE,KAAAi+D,QAAAmE,UAAAC,EAAAuX,IACAvX,EAAAz5C,MAAA,EAAAgxD,EAAAvX,EAAAp9D,OAAA,EAAA20E,EAAA11D,EAAAE,EAAAo+C,EAAAC,GAEAuX,GACAh6E,KAAAi+D,QAAAuT,UAEA,IAAA9O,EACAnjD,EAAAg3B,SAAA,EACKsjC,GACLlkD,EAAAskD,cAAAzB,KAOA7B,EAAA30E,UAAAy6D,SAAA,WACA,IAAAwB,EAAAj+D,KAAAi+D,QACA,OAAAA,IAAAthB,OAAA,MAMAg6B,EAAA30E,UAAA2yE,kBAAA,WACA,OAAA30E,KAAAo1E,iBASAuB,EAAA30E,UAAA83E,aAAA,SAAAnkD,GACA,OAA2D,EAAA8mC,YAG3Dka,EA9V2B,CA+VzB3B,IAQF0B,GAAuB,oBAAA14B,GACvB,OAAAA,EAAAjS,YAA6BuxB,GAASE,MAUtCkZ,GAAuB,mBAAAN,EAAAp4B,GACvB,WAAa04B,GAAyE,IAQtFA,GAAuB10E,UAAAowE,SAGR,IAAA8H,GAAA,2BCxYXC,GAAW,aAEfA,GAAWn4E,UAAAo4E,UAAA,SAAAv8B,EAAAw8B,GACX,OAAStkE,KAOTokE,GAAWn4E,UAAAuyB,QAAA,WACX,OAASxe,KAQTokE,GAAWn4E,UAAAs4E,aAAA,SAAAC,GACX,OAASxkE,KAGM,IAAAykE,GAAA,GCxBAC,GAAA,CACft6C,OAAA,SACAu6C,QAAA,UACAnd,MAAA,QACA39B,YAAA,aACAE,QAAA,UACA66C,KAAA,QCDO,SAAAC,GAAAj+C,EAAAnE,EAAArO,EAAAyS,GAIP,IAHA,IAAAhG,EAAA+F,EAAAnE,GACA3B,EAAA8F,EAAAnE,EAAA,GACAn1B,EAAA,EACAjD,EAAAo4B,EAAAoE,EAA+Bx8B,EAAA+pB,EAAS/pB,GAAAw8B,EAAA,CACxC,IAAA9F,EAAA6F,EAAAv8B,GACA22B,EAAA4F,EAAAv8B,EAAA,GACAiD,GAAAX,KAAAwF,MAAA4uB,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,IACAD,EAAAE,EACAD,EAAAE,EAEA,OAAA1zB,ECJO,SAAAw3E,GACPl+C,EAAAnE,EAAArO,EAAAyS,EAAApvB,EAAAstE,EAAAC,EAAAC,GACA,IAAAh1E,EAAA,GAGA8sC,EAAAnW,EAAAnE,GAAAmE,EAAAxS,EAAAyS,GAEAq+C,EAAAztE,EAAAnK,OAEAuzB,EAAA+F,EAAAnE,GACA3B,EAAA8F,EAAAnE,EAAA,GACAA,GAAAoE,EASA,IARA,IAOA/2B,EAAAiB,EAAAo0E,EAPApkD,EAAA6F,EAAAnE,GACAzB,EAAA4F,EAAAnE,EAAA,GACA2iD,EAAA,EACArpC,EAAApvC,KAAAwF,KAAAxF,KAAAkF,IAAAkvB,EAAAF,EAAA,GAAAl0B,KAAAkF,IAAAmvB,EAAAF,EAAA,IAEAukD,EAAA,GACAC,EAAA,EAEAj7E,EAAA,EAAiBA,EAAA66E,IAAc76E,EAAA,CAC/B0G,EAAAgsC,EAAAmoC,EAAA76E,EAAA,EAAAA,EACA,IAAAk7E,EAAA9tE,EAAA+tE,OAAAz0E,GACAs0E,EAAAtoC,EAAAwoC,EAAAF,IAAAE,EACA,IAAAE,EAAAV,EAAAM,GAAAC,EACAA,GAAAG,EACA,IAAAC,EAAAV,EAAAS,EAAA,EACA,MAAAhjD,EAAArO,EAAAyS,GAAAu+C,EAAArpC,EAAA2pC,EACA7kD,EAAAE,EACAD,EAAAE,EACAyB,GAAAoE,EACA9F,EAAA6F,EAAAnE,GACAzB,EAAA4F,EAAAnE,EAAA,GACA2iD,GAAArpC,EACAA,EAAApvC,KAAAwF,KAAAxF,KAAAkF,IAAAkvB,EAAAF,EAAA,GAAAl0B,KAAAkF,IAAAmvB,EAAAF,EAAA,IAEA,IAAA6kD,EAAAD,EAAAN,EACAphD,EAAAr3B,KAAAq/B,MAAAhL,EAAAF,EAAAC,EAAAF,GAIA,GAHAkc,IACA/Y,KAAA,GAAAr3B,KAAA+0B,GAAA/0B,KAAA+0B,SAEArqB,IAAA8tE,EAAA,CACA,IAAA/iD,EAAA4B,EAAAmhD,EAEA,GADA/iD,KAAAz1B,KAAA+0B,IAAA,EAAA/0B,KAAA+0B,GAAAU,GAAAz1B,KAAA+0B,GAAA,EAAA/0B,KAAA+0B,GAAA,EACA/0B,KAAA6hB,IAAA4T,GAAA6iD,EACA,YAGA,IAAAW,EAAAD,EAAA5pC,EACA5tB,EAAYyT,GAAIf,EAAAE,EAAA6kD,GAChBv3D,EAAYuT,GAAId,EAAAE,EAAA4kD,GAChBT,GAAAnhD,GACA+Y,IACAjtC,EAAA,GAAAqe,EACAre,EAAA,GAAAue,EACAve,EAAA,GAAA21E,EAAA,GAEA31E,EAAA,GAAAu1E,IAEAA,EAAAE,EACAD,EAAAG,EACA31E,EAAA,CAAAqe,EAAAE,EAAAo3D,EAAA,EAAAzhD,EAAAqhD,GACAtoC,EACA9sC,EAAA41E,QAAA/1E,GAEAG,EAAAN,KAAAG,GAEAq1E,EAAAnhD,GAEAghD,GAAAS,EAEA,OAAAx1E,ECnFA,IAAA61E,GAAA,CACAC,eAAA,EACAC,WAAA,EACA57C,OAAA,EACA67C,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,IAOWC,GAAe,CAAAb,GAAAQ,MAMfM,GAAiB,CAAAd,GAAAY,QAMrBG,GAAA,CAAAf,GAAAE,YAMAc,GAAA,CAAAhB,GAAAG,YAGQc,GAAA,GCtCRC,GAAA,CACLtC,GAAU36C,QACV26C,GAAUt6C,OACVs6C,GAAU76C,YACV66C,GAAUld,MACVkd,GAAUE,KACVF,GAAUC,SAOLsC,GAAA,CACP53E,KAAA,EACA+kB,IAAA,EACA2N,OAAA,GACAzyB,MAAA,EACA65B,MAAA,EACAxuB,IAAA,EACAusE,OAAA,GACAC,QAAA,GACAC,WAAA,GACAC,YAAA,GACAC,OAAA,GCDIC,GAAY9hD,KAMZ+hD,GAAe77E,KAGf87E,GAAY,SAAAvX,GAChB,SAAAwX,EAAAvkD,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GACA3X,EAAA1lE,KAAAP,MAKAA,KAAA49E,gBAMA59E,KAAAk5B,YAOAl5B,KAAA09E,YAMA19E,KAAA29E,WAMA39E,KAAA26C,aAMA36C,KAAA69E,aAAA,EAOA79E,KAAAk4B,aAMAl4B,KAAA89E,WAMA99E,KAAA+9E,2BAAA,KAMA/9E,KAAAg+E,2BAAA,KAMAh+E,KAAAi+E,mBAAA,KAMAj+E,KAAAk+E,aAAA,GAMAl+E,KAAAu7B,YAAA,GAMAv7B,KAAAm+E,iBAAA,GAMAn+E,KAAAo+E,mBAA8B18E,KAM9B1B,KAAAq+E,yBAAA,GAMAr+E,KAAAgoE,kBAAA,KAMAhoE,KAAA81B,MAAmE,GAMnE91B,KAAAsmE,cAAA,EA25BA,OAv5BAL,IAAAwX,EAAA/wE,UAAAu5D,GACAwX,EAAAz7E,UAAAlB,OAAAY,OAAAukE,KAAAjkE,WACAy7E,EAAAz7E,UAAA+I,YAAA0yE,EAWAA,EAAAz7E,UAAAs8E,sBAAA,SAAArgB,EAAAsgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA3gB,EAAAgL,YACAhL,EAAA4K,OAAArhE,MAAAy2D,EAAAsgB,GACAtgB,EAAA6K,OAAAthE,MAAAy2D,EAAAugB,GACAvgB,EAAA6K,OAAAthE,MAAAy2D,EAAAwgB,GACAxgB,EAAA6K,OAAAthE,MAAAy2D,EAAAygB,GACAzgB,EAAA6K,OAAAthE,MAAAy2D,EAAAsgB,GACAI,IACA3+E,KAAA89E,WAA2Ca,EAAA,GAC3C3+E,KAAA6+E,MAAA5gB,IAEA2gB,IACA5+E,KAAA8+E,gBAAA7gB,EAAwD,GACxDA,EAAAmL,WAwBAqU,EAAAz7E,UAAA+8E,aAAA,SACA9gB,EACA/5C,EACAE,EACAi+C,EACAthC,EACAC,EACAg+C,EACA/5E,EACA04C,EACA2kB,EACAC,EACA3pC,EACAyB,EACA4kD,EACAr2D,EACAxY,EACAuuE,EACAC,GAEA,IAAAM,EAAAP,GAAAC,EACA79C,GAAA1G,EACA2G,GAAA3G,EACAnW,GAAA6c,EACA3c,GAAA4c,EAEA,IAQAu9C,EAEAC,EAEAC,EAEAC,EAdAlc,EAAA55C,EAAA05C,EAAAD,EAAAz5C,MAAAy5C,EAAAz5C,MAAA05C,EAAA15C,EACA65C,EAAAx9D,EAAAs9D,EAAAF,EAAAp9D,OAAAo9D,EAAAp9D,OAAAs9D,EAAAt9D,EACAk6E,EAAA/uE,EAAA,GAAAoyD,EAAAnoC,EAAAjqB,EAAA,GACAgvE,EAAAhvE,EAAA,GAAAqyD,EAAApoC,EAAAjqB,EAAA,GACAivE,EAAAn7D,EAAA9T,EAAA,GACAkvE,EAAAl7D,EAAAhU,EAAA,IAUA8uE,GAAA,IAAAtmD,KACA2lD,EAAA,CAAAc,EAAAC,GACAd,EAAA,CAAAa,EAAAF,EAAAG,GACAb,EAAA,CAAAY,EAAAF,EAAAG,EAAAF,GACAV,EAAA,CAAAW,EAAAC,EAAAF,IAGA,IAAA1+C,EAAA,KACA,OAAA9H,EAAA,CACA,IAAAgjB,EAAA13B,EAAA6c,EACA8a,EAAAz3B,EAAA4c,EACAN,EAAkBsJ,GAAiBuzC,GAAY3hC,EAAAC,EAAA,IAAAjjB,GAAAgjB,GAAAC,GAEzCvf,GAAoBghD,IACpB7hD,GAAiB6hD,GAAW91E,GAAe+1E,GAAYgB,IACvD9iD,GAAiB6hD,GAAW91E,GAAe+1E,GAAYiB,IACvD/iD,GAAiB6hD,GAAW91E,GAAe+1E,GAAYkB,IACvDhjD,GAAiB6hD,GAAW91E,GAAe+1E,GAAYmB,SAEvDriD,GAAcgjD,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAuC9B,IAE3D,IAAA3gC,EAAAshB,EAAAthB,OACA4iC,EAAAX,IAAA,GAAAvkD,EAAA,IACAr1B,EACQs4E,GAAS,GAAAiC,GAAA5iC,EAAA/zB,OAAuC00D,GAAS,GAAAiC,GAAA,GACzDjC,GAAS,GAAAiC,GAAA5iC,EAAA13C,QAAwCq4E,GAAS,GAAAiC,GAAA,EAOlE,GALAN,IACA/6D,EAAAxhB,KAAA2tC,MAAAnsB,GACAE,EAAA1hB,KAAA2tC,MAAAjsB,IAGA46D,EAAA,CACA,IAAAh6E,GAAA,GAAAg6E,EAAA,GACA,OAEMjiD,GAAMiiD,EAAiB1B,IAC7B,IAAAkC,EAAAx6E,EACA,CAAAi5D,EAAAv9B,IAAAl6B,MAAA,QAAAm3C,EAAA0kB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv+C,EAAAE,EAAAiW,GACA,KACAmlD,GAAAN,GACAM,EAAA95E,KAAAi5E,EAAAC,EAAAL,EAAAC,EAAAC,EAAAC,GAEAM,EAAAt5E,KAAA85E,QACKx6E,IACLk6E,GACAl/E,KAAAs+E,sBAAArgB,EAAAsgB,EAAAC,EAAAC,EAAAC,EAC8B,EACA,GAExBtc,GAASnE,EAAAv9B,EAAAid,EAAA0kB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv+C,EAAAE,EAAAiW,KASfojD,EAAAz7E,UAAAy9E,gBAAA,SAAAC,GACA,IAAA/kC,EAAA36C,KAAA26C,WACA,UAAAA,EAAA+kC,IAAAprE,IAAA,SAAAqrE,GACA,OAAAA,EAAAhlC,KAcA8iC,EAAAz7E,UAAA49E,sBAAA,SAAAjjD,EAAAnE,EAAArO,EAAAyS,EAAAijD,EAAAC,GAEA,IAAAC,EAAA//E,KAAAu7B,YAAAl4B,OACAw0B,EAAA73B,KAAAggF,uBACAF,IACAtnD,GAAAoE,GAEA,IAIAx8B,EAAA6/E,EAAAC,EAJAC,EAAA,CAAAxjD,EAAAnE,GAAAmE,EAAAnE,EAAA,IACA4nD,EAAA,CAAA90C,SACA+0C,GAAA,EAGA,IAAAjgF,EAAAo4B,EAAAoE,EAA6Bx8B,EAAA+pB,EAAS/pB,GAAAw8B,EACtCwjD,EAAA,GAAAzjD,EAAAv8B,GACAggF,EAAA,GAAAzjD,EAAAv8B,EAAA,GACA8/E,EAAgB/jD,GAAsBtE,EAAAuoD,GACtCF,IAAAD,GACAI,IACArgF,KAAAu7B,YAAAwkD,KAAAI,EAAA,GACAngF,KAAAu7B,YAAAwkD,KAAAI,EAAA,IAEAngF,KAAAu7B,YAAAwkD,KAAAK,EAAA,GACApgF,KAAAu7B,YAAAwkD,KAAAK,EAAA,GACAC,GAAA,GACOH,IAAsBnlD,GAAYE,cACzCj7B,KAAAu7B,YAAAwkD,KAAAK,EAAA,GACApgF,KAAAu7B,YAAAwkD,KAAAK,EAAA,GACAC,GAAA,GAEAA,GAAA,EAEAF,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAH,EAAAC,EAQA,OAJAL,GAAAQ,GAAAjgF,IAAAo4B,EAAAoE,KACA58B,KAAAu7B,YAAAwkD,KAAAI,EAAA,GACAngF,KAAAu7B,YAAAwkD,KAAAI,EAAA,IAEAJ,GAWAtC,EAAAz7E,UAAAs+E,uBAAA,SAAA3jD,EAAAnE,EAAA0V,EAAAtR,EAAA2jD,GACA,QAAAngF,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAqCjD,EAAAgX,IAAQhX,EAAA,CAC7C,IAAA+pB,EAAA+jB,EAAA9tC,GACAogF,EAAAxgF,KAAA4/E,sBAAAjjD,EAAAnE,EAAArO,EAAAyS,GAAA,MACA2jD,EAAA76E,KAAA86E,GACAhoD,EAAArO,EAEA,OAAAqO,GAMAilD,EAAAz7E,UAAAiiE,WAAA,SAAAhpB,EAAAwK,EAAAye,GACAlkE,KAAAygF,cAAAxlC,EAAAwK,GACA,IAGA9oB,EAAA6jD,EAAAD,EAAAG,EACAloD,EAJAjlB,EAAA0nC,EAAAlP,UACAnP,EAAAqe,EAAA7N,YACAuzC,EAAA3gF,KAAAu7B,YAAAl4B,OAGA,GAAAkQ,GAAgBmsB,GAAYO,cAAA,CAC5Bgb,EAAyE,EACzEte,EAAAse,EAAAzH,6BACAktC,EAAA,GACA,IAAA/wC,EAAAsL,EAAAgvB,WACAzxC,EAAA,EACA,QAAAp4B,EAAA,EAAAgX,EAAAu4B,EAAAtsC,OAAwCjD,EAAAgX,IAAQhX,EAAA,CAChD,IAAAwgF,EAAA,GACApoD,EAAAx4B,KAAAsgF,uBAAA3jD,EAAAnE,EAAAmX,EAAAvvC,GAAAw8B,EAAAgkD,GACAF,EAAAh7E,KAAAk7E,GAEA5gF,KAAAk+E,aAAAx4E,KAAA,CAA8Bo3E,GAAiBb,OAC/C0E,EAAAD,EAAAzlC,EAAAipB,EAAsDx0B,UACjDn8B,GAAkBmsB,GAAYI,SAAAvsB,GAAoBmsB,GAAYM,mBACnEugD,EAAA,GACA5jD,EAAAppB,GAAiCmsB,GAAYI,QACc,EAAA0T,6BAC3DyH,EAAAnO,qBACAtU,EAAAx4B,KAAAsgF,uBAAA3jD,EAAA,EAC2G,EAAA8W,UAC3G7W,EAAA2jD,GACAvgF,KAAAk+E,aAAAx4E,KAAA,CAA8Bo3E,GAAiBb,OAC/C0E,EAAAJ,EAAAtlC,EAAAipB,EAAqD10B,MAChDj8B,GAAkBmsB,GAAYE,aAAArsB,GAAwBmsB,GAAYK,aACvEpD,EAAAse,EAAAnO,qBACA0zC,EAAAxgF,KAAA4/E,sBACAjjD,EAAA,EAAAA,EAAAt5B,OAAAu5B,GAAA,MACA58B,KAAAk+E,aAAAx4E,KAAA,CAA8Bo3E,GAAiBb,OAC/C0E,EAAAH,EAAAvlC,EAAAipB,EAAoD50B,MAC/C/7B,GAAkBmsB,GAAYC,QACnChD,EAAAse,EAAAnO,qBACA9sC,KAAAu7B,YAAA71B,KAAAi3B,EAAA,GAAAA,EAAA,IACA6jD,EAAAxgF,KAAAu7B,YAAAl4B,OACArD,KAAAk+E,aAAAx4E,KAAA,CAA8Bo3E,GAAiBb,OAC/C0E,EAAAH,EAAAvlC,EAAAipB,KAEAlkE,KAAA6gF,YAAA5lC,EAAAwK,IAQAg4B,EAAAz7E,UAAAy+E,cAAA,SAAAxlC,EAAAwK,GACAzlD,KAAA+9E,2BAAA,CAAuCjB,GAAiBhB,eAAAr2B,EAAA,GACxDzlD,KAAAk+E,aAAAx4E,KAAA1F,KAAA+9E,4BACA/9E,KAAAg+E,2BAAA,CAAuClB,GAAiBhB,eAAAr2B,EAAA,GACxDzlD,KAAAq+E,yBAAA34E,KAAA1F,KAAAg+E,6BAMAP,EAAAz7E,UAAA8+E,OAAA,aAMArD,EAAAz7E,UAAA68E,MAAA,SAAA5gB,GACA,GAAAj+D,KAAA89E,WAAA,CACA,IAAAiD,EAAmBv5E,GAAcxH,KAAAo+E,mBAAA,OACjC4C,EAAA,IAAAhhF,KAAA26C,WACAsjB,EAAA/xB,UAAA60C,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACA/iB,EAAAxyB,OAAAzrC,KAAAsmE,eAEArI,EAAAkL,OACAnpE,KAAA89E,YACA7f,EAAA2E,aAAAp7D,MAAAy2D,EAA0CkE,KAS1Csb,EAAAz7E,UAAA88E,gBAAA,SAAA7gB,EAAAgjB,GACAhjB,EAAAwH,YAA4Ewb,EAAA,GAC5EhjB,EAAA2M,UAA0CqW,EAAA,GAC1ChjB,EAAAuM,QAA+CyW,EAAA,GAC/ChjB,EAAA0M,SAAiDsW,EAAA,GACjDhjB,EAAA4M,WAA2CoW,EAAA,GACnCpgE,KACRo9C,EAAAyM,eAAiDuW,EAAA,GACjDhjB,EAAAj9C,YAAmDigE,EAAA,MAQnDxD,EAAAz7E,UAAAk/E,iBAAA,SAAAlC,EAAAv5B,GACA,GAAAu5B,KAAA37E,OAAA,GACA,IAAA89E,EAAAnC,EAAA,GACA,MAAAmC,MAAAnC,EAAA37E,OAAA,GAEA,IAAA+9E,EAAA,CACAt9E,KAAkCk7E,EAAA,GAClCh7E,KAAkCg7E,EAAA,GAClC/6E,KAAkC+6E,EAAA,GAClC96E,KAAkC86E,EAAA,GAClC39E,MAAAokD,GAEA,IAAAzlD,KAAA49E,cAAAx3E,SAAAg7E,GAAA,CACAphF,KAAA49E,cAAAt3E,OAAA86E,GACA,QAAAv5E,EAAA,EAAAwnC,EAAA2vC,EAAA37E,OAAqDwE,EAAAwnC,IAAQxnC,EAAA,CAC7D,IAAAw5E,EAAiDrC,EAAAn3E,GACjDw5E,IACAA,EAAAh+E,OAAA,IACArD,KAAAs+E,sBAAA+C,EAAA,GACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAA,EAAA,KAEcjf,GAAS56D,WAAA4F,EAAAi0E,KAIvBrC,EAAA37E,OAAA,EACQi5B,GAAmB0iD,MAmB3BvB,EAAAz7E,UAAAs/E,QAAA,SACArjB,EACAv9B,EACA6gD,EACArD,EACAe,EACAuC,EACAC,GAGA,IAAAtZ,EACAnoE,KAAAgoE,mBAAkC19C,GAAMoW,EAAA1gC,KAAAo+E,oBACxCjW,EAAAnoE,KAAAgoE,mBAEAhoE,KAAAgoE,oBACAhoE,KAAAgoE,kBAAA,IAEAG,EAAyB1nC,GACzBzgC,KAAAu7B,YAAA,EAAAv7B,KAAAu7B,YAAAl4B,OAAA,EACAq9B,EAAA1gC,KAAAgoE,mBACMn+B,GAAqB7pC,KAAAo+E,mBAAA19C,IAE3B,IAIAghD,EACA3gD,EAAAC,EAAA2gD,EAAAC,EAAAC,EAAAC,EAAA9C,EAAA3c,EAkBsF5c,EACtFvhC,EAAAE,EAxBA29D,GAAwBtqE,EAAO8pE,GAC/BnhF,EAAA,EACAgX,EAAA8mE,EAAA76E,OACA3C,EAAA,EAGAshF,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAApiF,KAAAm+E,iBACAhY,EAAAnmE,KAAAsmE,cAEAxwC,EAA2D,CAC3DmoC,UACAtjB,WAAA36C,KAAA26C,WACAziB,WAAAl4B,KAAAk4B,WACAU,SAAAutC,GAKAkc,EAAAriF,KAAAk+E,iBAAAl+E,KAAA29E,SAAA,MAGA,MAAAv9E,EAAAgX,EAAA,CACA,IAAA6pE,EAAA/C,EAAA99E,GACAmT,EAA8C0tE,EAAA,GAC9C,OAAA1tE,GACA,KAAaupE,GAAiBhB,eAC9Br2B,EAAkGw7B,EAAA,GAClGc,GAAAR,EAAmDtrE,EAAMwvC,QAAAqQ,cACzD11D,EAAkC6gF,EAAA,QACvB7zE,IAAAq0E,GAA0C7iD,GACrD6iD,EAAAh8B,EAAAqQ,cAAApyB,eAGAtjC,EAFAA,EAAkC6gF,EAAA,KAIlC,MACA,KAAanE,GAAiBf,WAC9BiG,EAAAK,IACAriF,KAAA6+E,MAAA5gB,GACA+jB,EAAA,GAEAC,EAAAI,IACApkB,EAAAmL,SACA6Y,EAAA,GAEAD,GAAAC,IACAhkB,EAAAgL,YACA0Y,EAAAC,EAAAt2C,OAEAlrC,EACA,MACA,KAAa08E,GAAiB38C,OAC9Bz/B,EAAgCugF,EAAA,GAChC,IAAArqD,EAAAuxC,EAAAznE,GACAm2B,EAAAsxC,EAAAznE,EAAA,GACAo2B,EAAAqxC,EAAAznE,EAAA,GACAq2B,EAAAoxC,EAAAznE,EAAA,GACA4jB,EAAAwS,EAAAF,EACApS,EAAAuS,EAAAF,EACA31B,EAAAwB,KAAAwF,KAAAoc,IAAAE,KACAy5C,EAAA4K,OAAAjyC,EAAA11B,EAAA21B,GACAonC,EAAAiL,IAAAtyC,EAAAC,EAAA31B,EAAA,IAAAwB,KAAA+0B,IAAA,KACAr3B,EACA,MACA,KAAa08E,GAAiBd,WAC9B/d,EAAA8K,cACA3oE,EACA,MACA,KAAa08E,GAAiBb,OAC9Bv7E,EAAgCugF,EAAA,GAChCS,EAAAT,EAAA,GACA,IAAAhmC,EAAmFgmC,EAAA,GACnF/c,EAAA+c,EAAA,GACApuE,EAAA,GAAAouE,EAAA59E,OAAA49E,EAAA,QAAA7zE,EACA0oB,EAAAmlB,WACAnlB,EAAA2vB,UACArlD,KAAAgiF,IACAA,EAAAhiF,GAAA,IAEA,IAAA86C,EAAAknC,EAAAhiF,GACAyS,EACAA,EAAAs1D,EAAAznE,EAAAghF,EAAA,EAAAxmC,IAEAA,EAAA,GAAAitB,EAAAznE,GACAw6C,EAAA,GAAAitB,EAAAznE,EAAA,GACAw6C,EAAA73C,OAAA,GAEA6gE,EAAAhpB,EAAAplB,KACA11B,EACA,MACA,KAAa08E,GAAiBX,WAC9Bz7E,EAAgCugF,EAAA,GAChCS,EAAiCT,EAAA,GACjC5e,EACA4e,EAAA,GAEAlgD,EAAsCkgD,EAAA,GACtCjgD,EAAsCigD,EAAA,GACtCjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAAh8E,EAAyCg8E,EAAA,GACzCtjC,EAA0CsjC,EAAA,GAC1C3e,EAA0C2e,EAAA,GAC1C1e,EAA0C0e,EAAA,IAC1CqB,EAAkDrB,EAAA,IAClDroD,EAA2CqoD,EAAA,IAC3C5mD,EAAwC4mD,EAAA,IACxCr4D,GAAwCq4D,EAAA,IAExC7wE,QAAA,EAAAmyE,QAAA,EAAAC,QAAA,EAaA,IAZAvB,EAAA59E,OAAA,IACA+M,GAA+C6wE,EAAA,IAC/CsB,GAAgDtB,EAAA,IAChDuB,GAAkDvB,EAAA,MAElD7wE,GAAsB+vD,GACtBoiB,GAAAC,IAAA,GAGAF,IACA1pD,GAAAutC,GAEgBzlE,EAAAghF,EAAQhhF,GAAA,EACxBV,KAAA++E,aAAA9gB,EACAkK,EAAAznE,GAAAynE,EAAAznE,EAAA,GAAA2hE,EAAAthC,EAAAC,EACAg+C,EAAA/5E,EAAA04C,EAAA2kB,EAAAC,EAAA3pC,EAAAyB,EACA4kD,EAAAr2D,GAAAxY,GACAmyE,GAAmD,OACnDC,GAAqD,QAErDxiF,KAAAkhF,iBAAAlC,EAAAv5B,KACArlD,EACA,MACA,KAAa08E,GAAiBZ,WAC9B,IAAAhyD,GAAwC+2D,EAAA,GACxC92D,GAAsC82D,EAAA,GACtCwB,GAA2CxB,EAAA,GAC3CjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAA3+B,GAA2C2+B,EAAA,GAC3CyB,GAA0CzB,EAAA,GAC1CjG,GAA2CiG,EAAA,GAC3CnG,GAA2DmG,EAAA,GAC3D/e,GAA0C+e,EAAA,GAC1C0B,GAA4C1B,EAAA,IAC5C2B,GAA8C3B,EAAA,IAC9CzzE,GAAuCyzE,EAAA,IACvC4B,GAA0C5B,EAAA,IAC1CvT,GAA4CuT,EAAA,IAE5C6B,GAA2BlI,GAAgBzS,EAAAj+C,GAAAC,GAAA,GAC3C44D,GAAAjI,GAAAttE,IACA,GAAA80C,IAAAygC,IAAAD,GAAA,CAEA,IAAAE,GAA0C,KAC1ChY,GAAAgY,GAAAC,WAAAJ,IAAA7X,UACA+P,IAAA+H,GAAAC,IAAqD/F,GAAUhS,IAC/DkY,GAAwBrI,GACxB1S,EAAAj+C,GAAAC,GAAA,EAAA3c,GAAAstE,GAAAC,GAAAC,IACA,GAAAkI,GAAA,CACA,IAAAziF,QAAA,EAAA0iF,QAAA,EAAAC,QAAA,EAAA92B,QAAA,EAAA+2B,QAAA,EACA,GAAAV,GACA,IAAAliF,GAAA,EAAA0iF,GAAAD,GAAA7/E,OAA8C5C,GAAA0iF,KAAQ1iF,GACtD4iF,GAAAH,GAAAziF,IACA2iF,GAA4CC,GAAA,GAC5C/2B,GAAA02B,GAAAvmB,SAAA2mB,GAAAP,GAAA,GAAAF,IACA5hD,EAA8CsiD,GAAA,GAAAT,GAC9C5hD,EAAAyhD,GAAAn2B,GAAArnD,OAAA,MAAAw9E,IAAAG,GAAA1gB,GACAliE,KAAA++E,aAAA9gB,EACsColB,GAAA,GAAiCA,GAAA,GAAA/2B,GACvEvrB,EAAAC,EAAAg+C,EAAA1yB,GAAArnD,OAAA,MACsCo+E,GAAA,GAAA3V,IAAA,EAAAphB,GAAA1jC,MAClBu3C,GAAc,WAGlC,GAAAuiB,GACA,IAAAjiF,GAAA,EAAA0iF,GAAAD,GAAA7/E,OAA8C5C,GAAA0iF,KAAQ1iF,GACtD4iF,GAAAH,GAAAziF,IACA2iF,GAA4CC,GAAA,GAC5C/2B,GAAA02B,GAAAvmB,SAAA2mB,GAAAP,GAAAH,GAAA,IACA3hD,EAA8CsiD,GAAA,GAC9CriD,EAAAyhD,GAAAn2B,GAAArnD,OAAAi9D,GACAliE,KAAA++E,aAAA9gB,EACsColB,GAAA,GAAiCA,GAAA,GAAA/2B,GACvEvrB,EAAAC,EAAAg+C,EAAA1yB,GAAArnD,OAAA,MACsCo+E,GAAA,GAAA3V,IAAA,EAAAphB,GAAA1jC,MAClBu3C,GAAc,YAKlCngE,KAAAkhF,iBAAAlC,EAAAv5B,KACArlD,EACA,MACA,KAAa08E,GAAiBV,aAC9B,QAAAhvE,IAAAo0E,EAAA,CACA/7B,EAAoGw7B,EAAA,GACpG,IAAAj7E,GAAAw7E,EAAA/7B,GACA,GAAAz/C,GACA,OAAAA,KAGA5F,EACA,MACA,KAAa08E,GAAiBT,KAC9BgG,EACAL,IAEAhiF,KAAA6+E,MAAA5gB,KAEA79D,EACA,MACA,KAAa08E,GAAiBR,gBAY9B,IAXA57E,EAAgCugF,EAAA,GAChCS,EAAiCT,EAAA,GACjC/8D,EAAAikD,EAAAznE,GACA0jB,EAAA+jD,EAAAznE,EAAA,GACAmhF,EAAA39D,EAAA,KACA49D,EAAA19D,EAAA,KACAy9D,IAAAF,GAAAG,IAAAF,IACA3jB,EAAA4K,OAAA3kD,EAAAE,GACAu9D,EAAAE,EACAD,EAAAE,GAEAphF,GAAA,EAAsBA,EAAAghF,EAAQhhF,GAAA,EAC9BwjB,EAAAikD,EAAAznE,GACA0jB,EAAA+jD,EAAAznE,EAAA,GACAmhF,EAAA39D,EAAA,KACA49D,EAAA19D,EAAA,KACA1jB,GAAAghF,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACA3jB,EAAA6K,OAAA5kD,EAAAE,GACAu9D,EAAAE,EACAD,EAAAE,KAGA1hF,EACA,MACA,KAAa08E,GAAiBP,eAC9B2F,EAAAjB,EACAjhF,KAAA89E,WAAAmD,EAAA,GAEAe,IACAhiF,KAAA6+E,MAAA5gB,GACA+jB,EAAA,EACAC,IACAhkB,EAAAmL,SACA6Y,EAAA,IAIAhkB,EAAAuH,UAAgFyb,EAAA,KAChF7gF,EACA,MACA,KAAa08E,GAAiBN,iBAC9B2F,EAAAlB,EACAgB,IACAhkB,EAAAmL,SACA6Y,EAAA,GAEAjiF,KAAA8+E,gBAAA7gB,EAA4D,KAC5D79D,EACA,MACA,KAAa08E,GAAiBL,OAC9B4F,EACAJ,IAEAhkB,EAAAmL,WAEAhpE,EACA,MACA,UACAA,EACA,OAGA4hF,GACAhiF,KAAA6+E,MAAA5gB,GAEAgkB,GACAhkB,EAAAmL,UAaAqU,EAAAz7E,UAAAshF,OAAA,SAAArlB,EAAAv9B,EAAAylC,EAAAob,EAAAtC,GACAj/E,KAAAsmE,cAAAH,EACAnmE,KAAAshF,QAAArjB,EAAAv9B,EACA6gD,EAAAvhF,KAAAk+E,aAAAe,OAAA7xE,WAgBAqwE,EAAAz7E,UAAAuhF,mBAAA,SACAtlB,EACAv9B,EACAylC,EACAob,EACAiC,EACA/B,GAGA,OADAzhF,KAAAsmE,cAAAH,EACAnmE,KAAAshF,QAAArjB,EAAAv9B,EAAA6gD,EACAvhF,KAAAq+E,0BAAA,EAAAmF,EAAA/B,IAMAhE,EAAAz7E,UAAAyhF,gCAAA,WACA,IAIArjF,EAJAi+E,EAAAr+E,KAAAq+E,yBAEAA,EAAAvrC,UAGA,IACAmuC,EACA1tE,EAFA1R,EAAAw8E,EAAAh7E,OAGA6mB,GAAA,EACA,IAAA9pB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtB6gF,EAAA5C,EAAAj+E,GACAmT,EAA0C0tE,EAAA,GAC1C1tE,GAAkBupE,GAAiBV,aACnClyD,EAAA9pB,EACOmT,GAAkBupE,GAAiBhB,iBAC1CmF,EAAA,GAAA7gF,EACQ6pB,GAAejqB,KAAAq+E,yBAAAn0D,EAAA9pB,GACvB8pB,GAAA,IAQAuzD,EAAAz7E,UAAAujE,mBAAA,SAAAC,EAAAC,GACA,IAAA3vC,EAAA91B,KAAA81B,MACA,GAAA0vC,EAAA,CACA,IAAA0F,EAAA1F,EAAA2F,WACAr1C,EAAA0vC,UAAwBzB,GAAWmH,GACVxL,SAEzB5pC,EAAA0vC,eAAAp4D,EAEA,GAAAq4D,EAAA,CACA,IAAA2F,EAAA3F,EAAA0F,WACAr1C,EAAA2vC,YAA0B1B,GAAWqH,GACVpL,IAC3B,IAAAqL,EAAA5F,EAAA6F,aACAx1C,EAAA00C,aAAAp9D,IAAAi+D,EACAA,EAA6B1L,GAC7B,IAAA4L,EAAA9F,EAAA+F,cACA11C,EAAA20C,SAAAc,EACAA,EAAA/kE,QAAsCo5D,GACtC,IAAA6L,EAAAhG,EAAAiG,oBACA51C,EAAA40C,eAAAe,GACoC5L,GACpC,IAAA8L,EAAAlG,EAAAmG,cACA91C,EAAA60C,cAAAv9D,IAAAu+D,EACAA,EAA8B7L,GAC9B,IAAA+L,EAAApG,EAAAhoC,WACA3H,EAAA80C,eAAAx9D,IAAAy+D,EACAA,EAA2BzL,GAC3B,IAAA0L,EAAArG,EAAAsG,gBACAj2C,EAAA+0C,gBAAAz9D,IAAA0+D,EACAA,EAAgC/L,GAEhCjqC,EAAA80C,UAAA5qE,KAAA69E,eACA79E,KAAA69E,aAAA/nD,EAAA80C,UAEA5qE,KAAAi+E,mBAAA,WAGAnoD,EAAA2vC,iBAAAr4D,EACA0oB,EAAA00C,aAAAp9D,EACA0oB,EAAA20C,SAAA,KACA30C,EAAA40C,oBAAAt9D,EACA0oB,EAAA60C,cAAAv9D,EACA0oB,EAAA80C,eAAAx9D,EACA0oB,EAAA+0C,gBAAAz9D,GASAqwE,EAAAz7E,UAAA0hF,WAAA,SAAA5tD,EAAAmlB,GACA,IAAAuqB,EAAA1vC,EAAA0vC,UAEAmZ,EAAA,CAA2B7B,GAAiBP,eAAA/W,GAK5C,MAJA,kBAAAA,GAEAmZ,EAAAj5E,MAAA,GAEAi5E,GAMAlB,EAAAz7E,UAAA2hF,YAAA,SAAA7tD,GACA91B,KAAAk+E,aAAAx4E,KAAA1F,KAAA4jF,aAAA9tD,KAOA2nD,EAAAz7E,UAAA4hF,aAAA,SAAA9tD,GACA,OACMgnD,GAAiBN,iBACvB1mD,EAAA2vC,YAAA3vC,EAAA80C,UAAA5qE,KAAA26C,WAAA7kB,EAAA00C,QACA10C,EAAA60C,SAAA70C,EAAA+0C,WACA7qE,KAAAy/E,gBAAA3pD,EAAA20C,UAAA30C,EAAA40C,eAAA1qE,KAAA26C,aASA8iC,EAAAz7E,UAAA6hF,gBAAA,SAAA/tD,EAAA4tD,EAAAzoC,GACA,IAAAuqB,EAAA1vC,EAAA0vC,UACA,kBAAAA,GAAA1vC,EAAAguD,kBAAAte,SACAp4D,IAAAo4D,GACAxlE,KAAAk+E,aAAAx4E,KAAAg+E,EAAAnjF,KAAAP,KAAA81B,EAAAmlB,IAEAnlB,EAAAguD,iBAAAte,IAQAiY,EAAAz7E,UAAA+hF,kBAAA,SAAAjuD,EAAA6tD,GACA,IAAAle,EAAA3vC,EAAA2vC,YACA+E,EAAA10C,EAAA00C,QACAC,EAAA30C,EAAA20C,SACAC,EAAA50C,EAAA40C,eACAC,EAAA70C,EAAA60C,SACAC,EAAA90C,EAAA80C,UACAC,EAAA/0C,EAAA+0C,YACA/0C,EAAAkuD,oBAAAve,GACA3vC,EAAAmuD,gBAAAzZ,GACAC,GAAA30C,EAAAouD,kBAA+C55D,GAAMwL,EAAAouD,gBAAAzZ,IACrD30C,EAAAquD,uBAAAzZ,GACA50C,EAAAsuD,iBAAAzZ,GACA70C,EAAAuuD,kBAAAzZ,GACA90C,EAAAwuD,mBAAAzZ,UACAz9D,IAAAq4D,GACAke,EAAApjF,KAAAP,KAAA81B,GAEAA,EAAAkuD,mBAAAve,EACA3vC,EAAAmuD,eAAAzZ,EACA10C,EAAAouD,gBAAAzZ,EACA30C,EAAAquD,sBAAAzZ,EACA50C,EAAAsuD,gBAAAzZ,EACA70C,EAAAuuD,iBAAAzZ,EACA90C,EAAAwuD,kBAAAzZ,IAQA4S,EAAAz7E,UAAA6+E,YAAA,SAAA5lC,EAAAwK,GACAzlD,KAAA+9E,2BAAA,GAAA/9E,KAAAk+E,aAAA76E,OACArD,KAAA+9E,2BAAA,KACA/9E,KAAAg+E,2BAAA,GAAAh+E,KAAAq+E,yBAAAh7E,OACArD,KAAAg+E,2BAAA,KACA,IAAAuG,EAAA,CAAkCzH,GAAiBV,aAAA32B,GACnDzlD,KAAAk+E,aAAAx4E,KAAA6+E,GACAvkF,KAAAq+E,yBAAA34E,KAAA6+E,IAUA9G,EAAAz7E,UAAAg+E,qBAAA,WACA,IAAAhgF,KAAAi+E,qBACAj+E,KAAAi+E,mBAAgCriD,GAAK57B,KAAA09E,WACrC19E,KAAA69E,aAAA,IACA,IAAAj1D,EAAA5oB,KAAAk4B,YAAAl4B,KAAA69E,aAAA,KACQniD,GAAM17B,KAAAi+E,mBAAAr1D,EAAA5oB,KAAAi+E,oBAGd,OAAAj+E,KAAAi+E,oBAGAR,EAhhCgB,CAihCd1X,IAGaye,GAAA,GCxjCXC,GAAiB,SAAAhH,GACrB,SAAAiH,EAAAxrD,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GACAH,EAAAl9E,KAAAP,KAAAk5B,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GAMA59E,KAAA2kF,gBAAA,KAMA3kF,KAAA4kF,mBAAA,KAMA5kF,KAAA4mE,OAAA,KAMA5mE,KAAA6kF,cAAAz3E,EAMApN,KAAA8kF,cAAA13E,EAMApN,KAAA+kF,aAAA33E,EAMApN,KAAAglF,cAAA53E,EAMApN,KAAAilF,cAAA73E,EAMApN,KAAAklF,cAAA93E,EAMApN,KAAAmlF,qBAAA/3E,EAMApN,KAAA0uD,eAAAthD,EAMApN,KAAAolF,YAAAh4E,EAMApN,KAAAqlF,YAAAj4E,EA2HA,OAvHAqwE,IAAAiH,EAAAh4E,UAAA+wE,GACAiH,EAAA1iF,UAAAlB,OAAAY,OAAA+7E,KAAAz7E,WACA0iF,EAAA1iF,UAAA+I,YAAA25E,EAUAA,EAAA1iF,UAAAsjF,iBAAA,SAAA3oD,EAAAnE,EAAArO,EAAAyS,GACA,OAAA58B,KAAA4/E,sBAAAjjD,EAAAnE,EAAArO,EAAAyS,GAAA,OAMA8nD,EAAA1iF,UAAAkjE,UAAA,SAAAC,EAAA1f,GACA,GAAAzlD,KAAA4mE,OAAA,CAGA5mE,KAAAygF,cAAAtb,EAAA1f,GACA,IAAA9oB,EAAAwoC,EAAAr4B,qBACAlQ,EAAAuoC,EAAA/3B,YACAm4C,EAAAvlF,KAAAu7B,YAAAl4B,OACA08E,EAAA//E,KAAAslF,iBAAA3oD,EAAA,EAAAA,EAAAt5B,OAAAu5B,GACA58B,KAAAk+E,aAAAx4E,KAAA,CACMo3E,GAAiBX,WAAAoJ,EAAAxF,EAAA//E,KAAA4mE,OAEvB5mE,KAAA6kF,SAAA7kF,KAAA8kF,SAAA9kF,KAAA2kF,gBAAA3kF,KAAA+kF,QAAA/kF,KAAAglF,SACAhlF,KAAAilF,SAAAjlF,KAAAklF,SAAAllF,KAAAmlF,gBAAAnlF,KAAA0uD,UACA1uD,KAAAolF,OAAAplF,KAAA26C,WAAA36C,KAAAqlF,SAEArlF,KAAAq+E,yBAAA34E,KAAA,CACMo3E,GAAiBX,WAAAoJ,EAAAxF,EAAA//E,KAAA4kF,mBAEvB5kF,KAAA6kF,SAAA7kF,KAAA8kF,SAAA9kF,KAAA2kF,gBAAA3kF,KAAA+kF,QAAA/kF,KAAAglF,SACAhlF,KAAAilF,SAAAjlF,KAAAklF,SAAAllF,KAAAmlF,gBAAAnlF,KAAA0uD,UACA1uD,KAAAolF,OAAAplF,KAAAqlF,SAEArlF,KAAA6gF,YAAA1b,EAAA1f,KAMAi/B,EAAA1iF,UAAA8iE,eAAA,SAAAC,EAAAtf,GACA,GAAAzlD,KAAA4mE,OAAA,CAGA5mE,KAAAygF,cAAA1b,EAAAtf,GACA,IAAA9oB,EAAAooC,EAAAj4B,qBACAlQ,EAAAmoC,EAAA33B,YACAm4C,EAAAvlF,KAAAu7B,YAAAl4B,OACA08E,EAAA//E,KAAAslF,iBACA3oD,EAAA,EAAAA,EAAAt5B,OAAAu5B,GACA58B,KAAAk+E,aAAAx4E,KAAA,CACMo3E,GAAiBX,WAAAoJ,EAAAxF,EAAA//E,KAAA4mE,OAEvB5mE,KAAA6kF,SAAA7kF,KAAA8kF,SAAA9kF,KAAA2kF,gBAAA3kF,KAAA+kF,QAAA/kF,KAAAglF,SACAhlF,KAAAilF,SAAAjlF,KAAAklF,SAAAllF,KAAAmlF,gBAAAnlF,KAAA0uD,UACA1uD,KAAAolF,OAAAplF,KAAA26C,WAAA36C,KAAAqlF,SAEArlF,KAAAq+E,yBAAA34E,KAAA,CACMo3E,GAAiBX,WAAAoJ,EAAAxF,EAAA//E,KAAA4kF,mBAEvB5kF,KAAA6kF,SAAA7kF,KAAA8kF,SAAA9kF,KAAA2kF,gBAAA3kF,KAAA+kF,QAAA/kF,KAAAglF,SACAhlF,KAAAilF,SAAAjlF,KAAAklF,SAAAllF,KAAAmlF,gBAAAnlF,KAAA0uD,UACA1uD,KAAAolF,OAAAplF,KAAAqlF,SAEArlF,KAAA6gF,YAAA9b,EAAAtf,KAMAi/B,EAAA1iF,UAAA8+E,OAAA,WACA9gF,KAAAyjF,kCAEAzjF,KAAA6kF,cAAAz3E,EACApN,KAAA8kF,cAAA13E,EACApN,KAAA4kF,mBAAA,KACA5kF,KAAA4mE,OAAA,KACA5mE,KAAA+kF,aAAA33E,EACApN,KAAAolF,YAAAh4E,EACApN,KAAAglF,cAAA53E,EACApN,KAAAilF,cAAA73E,EACApN,KAAAklF,cAAA93E,EACApN,KAAAmlF,qBAAA/3E,EACApN,KAAA0uD,eAAAthD,EACApN,KAAAqlF,YAAAj4E,GAMAs3E,EAAA1iF,UAAA0jE,cAAA,SAAAC,EAAAqZ,GACA,IAAAl+C,EAAA6kC,EAAAsG,YACAluC,EAAA4nC,EAAAlf,UACA++B,EAAA7f,EAAA8f,qBAAA,GACApjB,EAAAsD,EAAAlJ,SAAA,GACAskB,EAAApb,EAAAyG,YACApsE,KAAA6kF,SAAA/jD,EAAA,GACA9gC,KAAA8kF,SAAAhkD,EAAA,GACA9gC,KAAA2kF,gBAA4E,EAC5E3kF,KAAA4kF,mBAAAY,EACAxlF,KAAA4mE,OAAAvE,EACAriE,KAAA+kF,QAAAhnD,EAAA,GACA/9B,KAAAglF,SAAArf,EAAAznB,aACAl+C,KAAAilF,SAAAlE,EAAA,GACA/gF,KAAAklF,SAAAnE,EAAA,GACA/gF,KAAAmlF,gBAAAxf,EAAA2G,oBACAtsE,KAAA0uD,UAAAiX,EAAArvB,cACAt2C,KAAAolF,OAAAzf,EAAA4G,WACAvsE,KAAAqlF,OAAAtnD,EAAA,IAGA2mD,EA3MqB,CA4MnBF,IAGakB,GAAA,GC/MXC,GAAsB,SAAAlI,GAC1B,SAAAmI,EAAA1sD,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GACAH,EAAAl9E,KAAAP,KAAAk5B,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GAsGA,OAnGAH,IAAAmI,EAAAl5E,UAAA+wE,GACAmI,EAAA5jF,UAAAlB,OAAAY,OAAA+7E,KAAAz7E,WACA4jF,EAAA5jF,UAAA+I,YAAA66E,EAUAA,EAAA5jF,UAAA6jF,qBAAA,SAAAlpD,EAAAnE,EAAArO,EAAAyS,GACA,IAAA2oD,EAAAvlF,KAAAu7B,YAAAl4B,OACA08E,EAAA//E,KAAA4/E,sBACAjjD,EAAAnE,EAAArO,EAAAyS,GAAA,MACAkpD,EAAA,CAAmChJ,GAAiBR,gBAAAiJ,EAAAxF,GAGpD,OAFA//E,KAAAk+E,aAAAx4E,KAAAogF,GACA9lF,KAAAq+E,yBAAA34E,KAAAogF,GACA37D,GAMAy7D,EAAA5jF,UAAA0iE,eAAA,SAAAC,EAAAlf,GACA,IAAA3vB,EAAA91B,KAAA81B,MACA2vC,EAAA3vC,EAAA2vC,YACAmF,EAAA90C,EAAA80C,UACA,QAAAx9D,IAAAq4D,QAAAr4D,IAAAw9D,EAAA,CAGA5qE,KAAA+jF,kBAAAjuD,EAAA91B,KAAA2jF,aACA3jF,KAAAygF,cAAA9b,EAAAlf,GACAzlD,KAAAq+E,yBAAA34E,KAAA,CACMo3E,GAAiBN,iBACvB1mD,EAAA2vC,YAAA3vC,EAAA80C,UAAA90C,EAAA00C,QAAA10C,EAAA60C,SACA70C,EAAA+0C,WAAA/0C,EAAA20C,SAAA30C,EAAA40C,gBACOkS,IACP,IAAAjgD,EAAAgoC,EAAA73B,qBACAlQ,EAAA+nC,EAAAv3B,YACAptC,KAAA6lF,qBAAAlpD,EAAA,EAAAA,EAAAt5B,OAAAu5B,GACA58B,KAAAq+E,yBAAA34E,KAAuCi3E,IACvC38E,KAAA6gF,YAAAlc,EAAAlf,KAMAmgC,EAAA5jF,UAAA4iE,oBAAA,SAAAC,EAAApf,GACA,IAAA3vB,EAAA91B,KAAA81B,MACA2vC,EAAA3vC,EAAA2vC,YACAmF,EAAA90C,EAAA80C,UACA,QAAAx9D,IAAAq4D,QAAAr4D,IAAAw9D,EAAA,CAGA5qE,KAAA+jF,kBAAAjuD,EAAA91B,KAAA2jF,aACA3jF,KAAAygF,cAAA5b,EAAApf,GACAzlD,KAAAq+E,yBAAA34E,KAAA,CACMo3E,GAAiBN,iBACvB1mD,EAAA2vC,YAAA3vC,EAAA80C,UAAA90C,EAAA00C,QAAA10C,EAAA60C,SACA70C,EAAA+0C,WAAA/0C,EAAA20C,SAAA30C,EAAA40C,gBACOkS,IAKP,IAJA,IAAA1uC,EAAA22B,EAAApxB,UACA9W,EAAAkoC,EAAA/3B,qBACAlQ,EAAAioC,EAAAz3B,YACA5U,EAAA,EACAp4B,EAAA,EAAAgX,EAAA82B,EAAA7qC,OAAqCjD,EAAAgX,IAAQhX,EAC7Co4B,EAAAx4B,KAAA6lF,qBAAAlpD,EAAAnE,EAAA0V,EAAA9tC,GAAAw8B,GAEA58B,KAAAq+E,yBAAA34E,KAAuCi3E,IACvC38E,KAAA6gF,YAAAhc,EAAApf,KAMAmgC,EAAA5jF,UAAA8+E,OAAA,WACA,IAAAhrD,EAAA91B,KAAA81B,WACA1oB,GAAA0oB,EAAAiwD,YAAAjwD,EAAAiwD,YAAA/lF,KAAAu7B,YAAAl4B,QACArD,KAAAk+E,aAAAx4E,KAA6Bi3E,IAE7B38E,KAAAyjF,kCACAzjF,KAAA81B,MAAA,MAMA8vD,EAAA5jF,UAAA2hF,YAAA,SAAA7tD,QACA1oB,GAAA0oB,EAAAiwD,YAAAjwD,EAAAiwD,YAAA/lF,KAAAu7B,YAAAl4B,SACArD,KAAAk+E,aAAAx4E,KAA6Bi3E,IAC7B7mD,EAAAiwD,WAAA/lF,KAAAu7B,YAAAl4B,QAEAyyB,EAAAiwD,WAAA,EACAtI,EAAAz7E,UAAA2hF,YAAApjF,KAAAP,KAAA81B,GACA91B,KAAAk+E,aAAAx4E,KAA2Bk3E,KAG3BgJ,EAxG0B,CAyGxBpB,IAGawB,GAAA,GCtGXC,GAAmB,SAAAxI,GACvB,SAAAyI,EAAAhtD,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GACAH,EAAAl9E,KAAAP,KAAAk5B,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GAiMA,OA9LAH,IAAAyI,EAAAx5E,UAAA+wE,GACAyI,EAAAlkF,UAAAlB,OAAAY,OAAA+7E,KAAAz7E,WACAkkF,EAAAlkF,UAAA+I,YAAAm7E,EAUAA,EAAAlkF,UAAAmkF,sBAAA,SAAAxpD,EAAAnE,EAAA0V,EAAAtR,GACA,IAAA9G,EAAA91B,KAAA81B,MACAqzC,OAAA/7D,IAAA0oB,EAAA0vC,UACA4D,OAAAh8D,GAAA0oB,EAAA2vC,YACA2gB,EAAAl4C,EAAA7qC,OACArD,KAAAk+E,aAAAx4E,KAA2Bk3E,IAC3B58E,KAAAq+E,yBAAA34E,KAAuCk3E,IACvC,QAAAx8E,EAAA,EAAmBA,EAAAgmF,IAAahmF,EAAA,CAChC,IAAA+pB,EAAA+jB,EAAA9tC,GACAmlF,EAAAvlF,KAAAu7B,YAAAl4B,OACA08E,EAAA//E,KAAA4/E,sBAAAjjD,EAAAnE,EAAArO,EAAAyS,GAAA,GAAAwsC,GACA0c,EAAA,CAAqChJ,GAAiBR,gBAAAiJ,EAAAxF,GACtD//E,KAAAk+E,aAAAx4E,KAAAogF,GACA9lF,KAAAq+E,yBAAA34E,KAAAogF,GACA1c,IAGAppE,KAAAk+E,aAAAx4E,KAA+Bm3E,IAC/B78E,KAAAq+E,yBAAA34E,KAA2Cm3E,KAE3CrkD,EAAArO,EAUA,OARAg/C,IACAnpE,KAAAk+E,aAAAx4E,KAA6Bg3E,IAC7B18E,KAAAq+E,yBAAA34E,KAAyCg3E,KAEzCtT,IACAppE,KAAAk+E,aAAAx4E,KAA6Bi3E,IAC7B38E,KAAAq+E,yBAAA34E,KAAyCi3E,KAEzCnkD,GAMA0tD,EAAAlkF,UAAAqiE,WAAA,SAAAC,EAAA7e,GACA,IAAA3vB,EAAA91B,KAAA81B,MACA0vC,EAAA1vC,EAAA0vC,UACAC,EAAA3vC,EAAA2vC,YACA,QAAAr4D,IAAAo4D,QAAAp4D,IAAAq4D,EAAA,CAGAzlE,KAAAqmF,qBAAA/hB,GACAtkE,KAAAygF,cAAAnc,EAAA7e,QACAr4C,IAAA0oB,EAAA0vC,WACAxlE,KAAAq+E,yBAAA34E,KAAA,CACQo3E,GAAiBP,eACjBxZ,GAASrD,WAGjBtyD,IAAA0oB,EAAA2vC,aACAzlE,KAAAq+E,yBAAA34E,KAAA,CACQo3E,GAAiBN,iBACzB1mD,EAAA2vC,YAAA3vC,EAAA80C,UAAA90C,EAAA00C,QAAA10C,EAAA60C,SACA70C,EAAA+0C,WAAA/0C,EAAA20C,SAAA30C,EAAA40C,iBAGA,IAAA/tC,EAAA2nC,EAAAx3B,qBACAlQ,EAAA0nC,EAAAl3B,YACAm4C,EAAAvlF,KAAAu7B,YAAAl4B,OACArD,KAAA4/E,sBACAjjD,EAAA,EAAAA,EAAAt5B,OAAAu5B,GAAA,MACA,IAAA0pD,EAAA,CAA6BxJ,GAAiB38C,OAAAolD,GAC9CvlF,KAAAk+E,aAAAx4E,KAA2Bk3E,GAAoB0J,GAC/CtmF,KAAAq+E,yBAAA34E,KAAuCk3E,GAAoB0J,GAC3DtmF,KAAAq+E,yBAAA34E,KAAuCg3E,SACvCtvE,IAAA0oB,EAAA0vC,WACAxlE,KAAAk+E,aAAAx4E,KAA6Bg3E,SAE7BtvE,IAAA0oB,EAAA2vC,cACAzlE,KAAAk+E,aAAAx4E,KAA6Bi3E,IAC7B38E,KAAAq+E,yBAAA34E,KAAyCi3E,KAEzC38E,KAAA6gF,YAAAvc,EAAA7e,KAMAygC,EAAAlkF,UAAAojE,YAAA,SAAAC,EAAA5f,GACA,IAAA3vB,EAAA91B,KAAA81B,MACA0vC,EAAA1vC,EAAA0vC,UACAC,EAAA3vC,EAAA2vC,YACA,QAAAr4D,IAAAo4D,QAAAp4D,IAAAq4D,EAAA,CAGAzlE,KAAAqmF,qBAAAhhB,GACArlE,KAAAygF,cAAApb,EAAA5f,QACAr4C,IAAA0oB,EAAA0vC,WACAxlE,KAAAq+E,yBAAA34E,KAAA,CACQo3E,GAAiBP,eACjBxZ,GAASrD,WAGjBtyD,IAAA0oB,EAAA2vC,aACAzlE,KAAAq+E,yBAAA34E,KAAA,CACQo3E,GAAiBN,iBACzB1mD,EAAA2vC,YAAA3vC,EAAA80C,UAAA90C,EAAA00C,QAAA10C,EAAA60C,SACA70C,EAAA+0C,WAAA/0C,EAAA20C,SAAA30C,EAAA40C,iBAGA,IAAAx8B,EAAAm3B,EAAA5xB,UACA9W,EAAA0oC,EAAA7xB,6BACA5W,EAAAyoC,EAAAj4B,YACAptC,KAAAmmF,sBAAAxpD,EAAA,EAAAuR,EAAAtR,GACA58B,KAAA6gF,YAAAxb,EAAA5f,KAMAygC,EAAAlkF,UAAAgjE,iBAAA,SAAAC,EAAAxf,GACA,IAAA3vB,EAAA91B,KAAA81B,MACA0vC,EAAA1vC,EAAA0vC,UACAC,EAAA3vC,EAAA2vC,YACA,QAAAr4D,IAAAo4D,QAAAp4D,IAAAq4D,EAAA,CAGAzlE,KAAAqmF,qBAAAphB,GACAjlE,KAAAygF,cAAAxb,EAAAxf,QACAr4C,IAAA0oB,EAAA0vC,WACAxlE,KAAAq+E,yBAAA34E,KAAA,CACQo3E,GAAiBP,eACjBxZ,GAASrD,WAGjBtyD,IAAA0oB,EAAA2vC,aACAzlE,KAAAq+E,yBAAA34E,KAAA,CACQo3E,GAAiBN,iBACzB1mD,EAAA2vC,YAAA3vC,EAAA80C,UAAA90C,EAAA00C,QAAA10C,EAAA60C,SACA70C,EAAA+0C,WAAA/0C,EAAA20C,SAAA30C,EAAA40C,iBAOA,IAJA,IAAA/6B,EAAAs1B,EAAAgF,WACAttC,EAAAsoC,EAAAzxB,6BACA5W,EAAAqoC,EAAA73B,YACA5U,EAAA,EACAp4B,EAAA,EAAAgX,EAAAu4B,EAAAtsC,OAAsCjD,EAAAgX,IAAQhX,EAC9Co4B,EAAAx4B,KAAAmmF,sBAAAxpD,EAAAnE,EAAAmX,EAAAvvC,GAAAw8B,GAEA58B,KAAA6gF,YAAA5b,EAAAxf,KAMAygC,EAAAlkF,UAAA8+E,OAAA,WACA9gF,KAAAyjF,kCACAzjF,KAAA81B,MAAA,KAKA,IAAAoD,EAAAl5B,KAAAk5B,UACA,OAAAA,EAEA,IADA,IAAAqC,EAAAv7B,KAAAu7B,YACAn7B,EAAA,EAAAgX,EAAAmkB,EAAAl4B,OAA8CjD,EAAAgX,IAAQhX,EACtDm7B,EAAAn7B,GAAyBgwC,GAAI7U,EAAAn7B,GAAA84B,IAS7BgtD,EAAAlkF,UAAAqkF,qBAAA,SAAAprC,GACA,IAAAnlB,EAAA91B,KAAA81B,MACA0vC,EAAA1vC,EAAA0vC,eACAp4D,IAAAo4D,GACAxlE,KAAA6jF,gBAAA/tD,EAAA91B,KAAA0jF,WAAAzoC,QAEA7tC,IAAA0oB,EAAA2vC,aACAzlE,KAAA+jF,kBAAAjuD,EAAA91B,KAAA2jF,cAIAuC,EAnMuB,CAoMrB1B,IAGa+B,GAAA,GCrMR,SAAAC,GAAAxL,EAAAr+C,EAAAnE,EAAArO,EAAAyS,GACP,IAKA6pD,EAAArmF,EAAAsmF,EAAAC,EAAA/vD,EAAAC,EAAA+vD,EAAAC,EAAAC,EAAAC,EALAC,EAAAxuD,EACAyuD,EAAAzuD,EACA0uD,EAAA,EACA1mF,EAAA,EACA0+B,EAAA1G,EAEA,IAAAp4B,EAAAo4B,EAAkBp4B,EAAA+pB,EAAS/pB,GAAAw8B,EAAA,CAC3B,IAAA9F,EAAA6F,EAAAv8B,GACA22B,EAAA4F,EAAAv8B,EAAA,QACAgN,IAAAwpB,IACAkwD,EAAAhwD,EAAAF,EACAmwD,EAAAhwD,EAAAF,EACA8vD,EAAAjkF,KAAAwF,KAAA4+E,IAAAC,UACA35E,IAAAw5E,IACApmF,GAAAkmF,EACAD,EAAA/jF,KAAA+jF,MAAAG,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACAF,EAAAzL,IACAx6E,EAAA0mF,IACAA,EAAA1mF,EACAwmF,EAAA9nD,EACA+nD,EAAA7mF,GAEAI,EAAA,EACA0+B,EAAA9+B,EAAAw8B,IAGA8pD,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEAnwD,EAAAE,EACAD,EAAAE,EAGA,OADAv2B,GAAAmmF,EACAnmF,EAAA0mF,EAAA,CAAAhoD,EAAA9+B,GAAA,CAAA4mF,EAAAC,GCtCe,IAAAE,GAAA,CACfxnD,MAAA,QACAynD,KAAA,QCGIC,GAAgB,SAAA5J,GACpB,SAAA6J,EAAApuD,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GACAH,EAAAl9E,KAAAP,KAAAk5B,EAAAwkD,EAAAxlD,EAAAyiB,EAAAgjC,EAAAC,GAMA59E,KAAA2kF,gBAMA3kF,KAAAunF,QAAA,KAMAvnF,KAAAunE,MAAA,GAMAvnE,KAAAwnE,aAAA,EAMAxnE,KAAAynE,aAAA,EAMAznE,KAAA0nE,yBAAAt6D,EAMApN,KAAA2nE,cAAA,EAMA3nE,KAAA6nE,eAAA,KAKA7nE,KAAAwnF,WAAA,GAMAxnF,KAAA8nE,iBAAA,KAKA9nE,KAAAynF,aAAA,GAMAznF,KAAA+nE,WAAkE,GAKlE/nE,KAAAijF,WAAA,GAMAjjF,KAAA0nF,SAAA,GAMA1nF,KAAA2nF,SAAA,GAMA3nF,KAAA4nF,WAAA,GAMA5nF,KAAA6nF,QAAA,GAEIxnB,GAAUd,QA2Yd,OAvYAke,IAAA6J,EAAA56E,UAAA+wE,GACA6J,EAAAtlF,UAAAlB,OAAAY,OAAA+7E,KAAAz7E,WACAslF,EAAAtlF,UAAA+I,YAAAu8E,EAKAA,EAAAtlF,UAAAsjE,SAAA,SAAArqB,EAAAwK,GACA,IAAA2kB,EAAApqE,KAAA6nE,eACAyC,EAAAtqE,KAAA8nE,iBACAgD,EAAA9qE,KAAA+nE,WACA,QAAA/nE,KAAAunE,OAAAuD,IAAAV,GAAAE,GAAA,CAIA,IAMAlqE,EAAAgX,EANA8S,EAAAlqB,KAAAu7B,YAAAl4B,OAEAykF,EAAA7sC,EAAAlP,UACApP,EAAA,KACAxS,EAAA,EACAyS,EAAA,EAGA,GAAAkuC,EAAAid,YAAgCZ,GAAaC,KAAA,CAC7C,IAAWxoD,GAAU5+B,KAAAggF,uBAAA/kC,EAAAvX,aACrB,OAEA,IAAAwK,EAGA,GAFAvR,EAAAse,EAAAnO,qBACAlQ,EAAAqe,EAAA7N,YACA06C,GAA0BpoD,GAAYE,YACtCsO,EAAA,CAAAvR,EAAAt5B,aACO,GAAAykF,GAA0BpoD,GAAYM,kBAC7CkO,EAAA+M,EAAAxH,eACO,GAAAq0C,GAA0BpoD,GAAYI,QAC7CoO,EAAA+M,EAAAxH,UAAAjtC,MAAA,UACO,GAAAshF,GAA0BpoD,GAAYO,cAAA,CAC7C,IAAA0P,EAAAsL,EAAAgvB,WAEA,IADA/7B,EAAA,GACA9tC,EAAA,EAAAgX,EAAAu4B,EAAAtsC,OAAsCjD,EAAAgX,IAAQhX,EAC9C8tC,EAAAxoC,KAAAiqC,EAAAvvC,GAAA,IAGAJ,KAAAygF,cAAAxlC,EAAAwK,GAIA,IAHA,IAEAuiC,EAFAhd,EAAAF,EAAAE,UACAid,EAAA,EAEApnF,EAAA,EAAAqnF,EAAAh6C,EAAA7qC,OAAuCxC,EAAAqnF,IAAQrnF,EAAA,CAC/C,QAAAuM,GAAA49D,EAAA,CACA,IAAA54D,EAAsBo0E,GAAa1b,EAAAkQ,SAAAr+C,EAAAsrD,EAAA/5C,EAAArtC,GAAA+7B,GACnCqrD,EAAA71E,EAAA,GACA41E,EAAA51E,EAAA,QAEA41E,EAAA95C,EAAArtC,GAEA,IAAAT,EAAA6nF,EAA4B7nF,EAAA4nF,EAAa5nF,GAAAw8B,EACzC58B,KAAAu7B,YAAA71B,KAAAi3B,EAAAv8B,GAAAu8B,EAAAv8B,EAAA,IAEA+pB,EAAAnqB,KAAAu7B,YAAAl4B,OACA4kF,EAAA/5C,EAAArtC,GACAb,KAAAmoF,WAAAj+D,EAAAC,EAAAnqB,KAAA2kF,iBACAz6D,EAAAC,EAEAnqB,KAAA6gF,YAAA5lC,EAAAwK,OAEK,CACL,IAAA6G,EAAAtsD,KAAAy8D,SAAAz8D,KAAAunE,MAAAvnE,KAAA0nF,SAAA1nF,KAAA2nF,SAAA3nF,KAAA4nF,YACAh/D,EAAA0jC,EAAA1jC,MAAA5oB,KAAA26C,WACA,OAAAmtC,GACA,KAAapoD,GAAYC,MACzB,KAAaD,GAAYK,YACzBpD,EAAAse,EAAAnO,qBACA3iB,EAAAwS,EAAAt5B,OACA,MACA,KAAaq8B,GAAYE,YACzBjD,EAAkF,EAAAitC,kBAClF,MACA,KAAalqC,GAAYS,OACzBxD,EAA8E,EAAA0Z,YAC9E,MACA,KAAa3W,GAAYM,kBACzBrD,EAAuF,EAAAotC,mBACvF5/C,EAAAwS,EAAAt5B,OACA,MACA,KAAaq8B,GAAYI,QAEzB,GADAnD,EAA+E,EAAA+W,wBAC/Eo3B,EAAAxoB,UAAA3lB,EAAA,GAAA38B,KAAAk4B,WAAAtP,EACA,OAEAgU,EAAA,EACA,MACA,KAAa8C,GAAYO,cACzB,IAAAmoD,EAAuF,EAAAje,wBAEvF,IADAxtC,EAAA,GACAv8B,EAAA,EAAAgX,EAAAgxE,EAAA/kF,OAAiDjD,EAAAgX,EAAQhX,GAAA,GACzD0qE,EAAAxoB,UAAA8lC,EAAAhoF,EAAA,GAAAJ,KAAAk4B,YAAAtP,IACA+T,EAAAj3B,KAAA0iF,EAAAhoF,GAAAgoF,EAAAhoF,EAAA,IAIA,GADA+pB,EAAAwS,EAAAt5B,OACA,GAAA8mB,EACA,OAEA,MACA,SAEAA,EAAAnqB,KAAA4/E,sBAAAjjD,EAAA,EAAAxS,EAAAyS,GAAA,OACAkuC,EAAAyX,gBAAAzX,EAAA0X,oBACAxiF,KAAAulE,mBAAAuF,EAAAyX,eAAAzX,EAAA0X,kBACA1X,EAAAyX,iBACAviF,KAAA6jF,gBAAA7jF,KAAA81B,MAAA91B,KAAA0jF,WAAAzoC,GACAj7C,KAAAq+E,yBAAA34E,KAAA1F,KAAA0jF,WAAA1jF,KAAA81B,MAAAmlB,KAEA6vB,EAAA0X,mBACAxiF,KAAA+jF,kBAAA/jF,KAAA81B,MAAA91B,KAAA2jF,aACA3jF,KAAAq+E,yBAAA34E,KAAA1F,KAAA4jF,aAAA5jF,KAAA81B,UAGA91B,KAAAygF,cAAAxlC,EAAAwK,GACAzlD,KAAAqoF,eAAA/7B,EAAApiC,EAAAC,GACAnqB,KAAA6gF,YAAA5lC,EAAAwK,MAWA6hC,EAAAtlF,UAAAy6D,SAAA,SAAAjvD,EAAAq1E,EAAAH,EAAAC,GACA,IAAAr2B,EACA3qD,EAAAghF,EAAAE,EAAAr1E,EAAAk1E,EAAA1iF,KAAA26C,WAEA,IAAS0lB,GAAUxB,YAAAl9D,GAAA,CACnB,IAAA2oE,EAAAqY,EAAA3iF,KAAAynF,aAAA9E,IAAA3iF,KAAA8nE,iBAAA,KACAsC,EAAAsY,EAAA1iF,KAAAwnF,WAAA9E,IAAA1iF,KAAA6nE,eAAA,KACAiD,EAAA9qE,KAAAijF,WAAAJ,IAAA7iF,KAAA+nE,WACAptB,EAAA36C,KAAA26C,WACAtgB,EAAAywC,EAAAzwC,MAAAsgB,EACA2tC,EAAkBtL,GAAUlS,EAAAE,WAAwB/K,IACpD2iB,EAAAD,GAAArY,EAAAM,UAAAN,EAAAM,UAAA,EAEA2d,EAAA/6E,EAAA+I,MAAA,MACAiyE,EAAAD,EAAAllF,OACAolF,EAAA,GACA7/D,EAAA8/D,GAAA5d,EAAAngB,KAAA49B,EAAAE,GACAE,EAAuB/mB,GAAiBkJ,EAAAngB,MACxC1lD,EAAA0jF,EAAAH,EACAI,EAAAhgE,EAAAg6D,EACA3kB,EAAoBzhB,GACpB95C,KAAAG,KAAA+lF,EAAAvuD,GACA33B,KAAAG,MAAAoC,EAAA29E,GAAAvoD,IACAiyB,EAAA2R,EAAAthB,OACM0jB,GAAU5uD,IAAA9P,EAAA2qD,GAChB,GAAAjyB,GACA4jC,EAAA5jC,WAEA4jC,EAAAtT,KAAAmgB,EAAAngB,KACAg4B,IACA1kB,EAAAwH,YAAA6E,EAAA7E,YACAxH,EAAA2M,UAAAgY,EACA3kB,EAAAuM,QAAmDF,EAAA,QACnDrM,EAAA0M,SAAqDL,EAAA,SACrDrM,EAAA4M,WAAAP,EAAAO,WACYhqD,IAAgBypD,EAAAG,SAAApnE,SAC5B46D,EAAAj9C,YAAAspD,EAAAG,UACAxM,EAAAyM,eAAAJ,EAAAI,iBAGAgY,IACAzkB,EAAAuH,UAAA4E,EAAA5E,WAEAvH,EAAAgN,aAAA,SACAhN,EAAA+M,UAAA,SACA,IAEA5qE,EAFAyoF,EAAA,GAAAP,EACApkE,EAAAokE,EAAAh8B,EAAA1jC,MAAAyR,EAAAwuD,EAAAjG,EAEA,GAAAD,EACA,IAAAviF,EAAA,EAAmBA,EAAAooF,IAAcpoF,EACjC69D,EAAAwK,WAAA8f,EAAAnoF,GAAA8jB,EAAA2kE,EAAAJ,EAAAroF,GAAA,IAAAwiF,EAAA+F,GAAAvoF,EAAAuoF,GAGA,GAAAjG,EACA,IAAAtiF,EAAA,EAAmBA,EAAAooF,IAAcpoF,EACjC69D,EAAAyK,SAAA6f,EAAAnoF,GAAA8jB,EAAA2kE,EAAAJ,EAAAroF,GAAA,IAAAwiF,EAAA+F,GAAAvoF,EAAAuoF,GAIA,OAAWtoB,GAAUp/D,IAAAU,IASrB2lF,EAAAtlF,UAAAqmF,eAAA,SAAA/7B,EAAApiC,EAAAC,GACA,IAAA2gD,EAAA9qE,KAAA+nE,WACAuC,EAAAtqE,KAAA8nE,iBACAntB,EAAA36C,KAAA26C,WACA2tC,EAAgBtL,GAAUlS,EAAAE,WAAwB/K,IAClDwiB,EAAmBzF,GAAUlS,EAAAG,cAC7B2X,EAAAtY,KAAAM,UAAAN,EAAAM,UAAA,EAEA7pC,EAAAunD,EAAAh8B,EAAA1jC,MAAA+xB,EAAA,MAAA2tC,GAAA1F,EACA5hD,EAAAyhD,EAAAn2B,EAAArnD,OAAA01C,EAAA,MAAA8nC,GAAAG,EACA5iF,KAAAk+E,aAAAx4E,KAAA,CAA4Bo3E,GAAiBX,WAAAjyD,EAAAC,EAC7CmiC,GAAAvrB,EAAA/gC,KAAAwnE,cAAA7sB,GAAA3Z,EAAAhhC,KAAAynE,cAAA9sB,EACA36C,KAAA2kF,gBAAAr4B,EAAArnD,OAAA,MAAAjF,KAAA0nE,oBAAA1nE,KAAA2nE,cACA,EAAArb,EAAA1jC,MACAkiD,EAAA16D,SAA2B+vD,GACnBA,GAAc2K,EAAA16D,QAAAkE,IAAA,SAAApS,GACtB,OAAAA,EAAAy4C,MAEAmwB,EAAAyX,iBAAAzX,EAAA0X,mBAEAxiF,KAAAq+E,yBAAA34E,KAAA,CAAwCo3E,GAAiBX,WAAAjyD,EAAAC,EACzDmiC,GAAAvrB,EAAA/gC,KAAAwnE,cAAA7sB,GAAA3Z,EAAAhhC,KAAAynE,cAAA9sB,EACA36C,KAAA2kF,gBAAAr4B,EAAArnD,OAAA,MAAAjF,KAAA0nE,oBAAA1nE,KAAA2nE,cACA,EAAAhtB,EAAA2R,EAAA1jC,MAAAkiD,EAAA16D,UACA06D,EAAAyX,iBAAAzX,EAAA0X,oBAUA8E,EAAAtlF,UAAAmmF,WAAA,SAAAj+D,EAAAC,EAAA60D,GACA,IAAA1U,EAAAtqE,KAAA8nE,iBACAgD,EAAA9qE,KAAA+nE,WACAqC,EAAApqE,KAAA6nE,eAEA8a,EAAA3iF,KAAA4nF,WACAtd,IACAqY,KAAA3iF,KAAAynF,eACAznF,KAAAynF,aAAA9E,GAAqF,CACrFld,YAAA6E,EAAA7E,YACA+E,QAAAF,EAAAE,QACAE,eAAAJ,EAAAI,eACAE,UAAAN,EAAAM,UACAD,SAAAL,EAAAK,SACAE,WAAAP,EAAAO,WACAJ,SAAAH,EAAAG,YAIA,IAAAoY,EAAA7iF,KAAA0nF,SACA1nF,KAAA0nF,YAAA1nF,KAAAijF,aACAjjF,KAAAijF,WAAAjjF,KAAA0nF,UAAmF,CACnF/8B,KAAAmgB,EAAAngB,KACAqgB,UAAAF,EAAAE,WAA0C/K,GAC1C5lC,MAAAywC,EAAAzwC,QAGA,IAAAqoD,EAAA1iF,KAAA2nF,SACAvd,IACAsY,KAAA1iF,KAAAwnF,aACAxnF,KAAAwnF,WAAA9E,GAA+E,CAC/Eld,UAAA4E,EAAA5E,aAKA,IAAA7qB,EAAA36C,KAAA26C,WACA8nC,EAAmBzF,GAAUlS,EAAAG,cAE7B/I,EAAAliE,KAAAynE,aAAA9sB,EACAntC,EAAAxN,KAAAunE,MACA5c,EAAAmgB,EAAAngB,KACA+iB,EAAA5C,EAAAzwC,MACAuoD,EAAAtY,IAAAM,UAAA8C,EAAA,IACA+a,EAAAzoF,KAAA6nF,QAAAl9B,GACA89B,IACAzoF,KAAA6nF,QAAAl9B,GAAA89B,EAAA,IAEAzoF,KAAAk+E,aAAAx4E,KAAA,CAA4Bo3E,GAAiBZ,WAC7ChyD,EAAAC,EAAAs4D,EAAAzD,EACAlU,EAAAxoB,SAAAogC,EAAA5X,EAAAkQ,SACA,SAAAxtE,GACA,IAAAob,EAAA6/D,EAAAj7E,GAIA,OAHAob,IACAA,EAAA6/D,EAAAj7E,GAAiCu0D,GAAgBpX,EAAAn9C,IAEjDob,EAAA8kD,EAAA/yB,GAEAunB,EAAAygB,EAAAC,EAAAjoC,EAAAntC,EAAAq1E,EAAA,IAEA7iF,KAAAq+E,yBAAA34E,KAAA,CAAwCo3E,GAAiBZ,WACzDhyD,EAAAC,EAAAs4D,EAAAzD,EACAlU,EAAAxoB,SAAAogC,EAAA5X,EAAAkQ,SACA,SAAAxtE,GACA,IAAAob,EAAA6/D,EAAAj7E,GAIA,OAHAob,IACAA,EAAA6/D,EAAAj7E,GAAiCu0D,GAAgBpX,EAAAn9C,IAEjDob,EAAA8kD,GAEAxL,EAAAygB,EAAAC,EAAAp1E,EAAAq1E,EAAA,EAAAloC,KAOA2sC,EAAAtlF,UAAA6jE,aAAA,SAAAC,EAAAkZ,GACA,IAAAlU,EAAAV,EAAAE,EACA,GAAAxE,EAEK,CACL9lE,KAAA2kF,gBAA8E,EAE9E,IAAAnY,EAAA1G,EAAAuD,UACAmD,GAGApC,EAAApqE,KAAA6nE,eACAuC,IACAA,EAAApqE,KAAA6nE,eAAwF,IAExFuC,EAAA5E,UAA8BzB,GAC9ByI,EAAArB,YAAsCzL,KAPtC0K,EAAApqE,KAAA6nE,eAAA,KAUA,IAAA6E,EAAA5G,EAAAwD,YACA,GAAAoD,EAEO,CACPpC,EAAAtqE,KAAA8nE,iBACAwC,IACAA,EAAAtqE,KAAA8nE,iBAA8F,IAE9F,IAAA2C,EAAAiC,EAAAlB,cACAd,EAAAgC,EAAAhB,oBACAd,EAAA8B,EAAAjvC,WACAotC,EAAA6B,EAAAX,gBACAzB,EAAAE,QAAAkC,EAAApB,cAA8D3L,GAC9D2K,EAAAG,aAAAjkE,QAA6Do5D,GAC7D0K,EAAAI,oBACAt9D,IAAAs9D,EAA2C7K,GAAqB6K,EAChEJ,EAAAK,SAAA+B,EAAAd,eAAgE9L,GAChEwK,EAAAM,eACAx9D,IAAAw9D,EAAsCxK,GAAgBwK,EACtDN,EAAAO,gBACAz9D,IAAAy9D,EAAuC9K,GAAiB8K,EACxDP,EAAA7E,YAAkC1B,GAClC2I,EAAAvB,YAAwCnL,SApBxCsK,EAAAtqE,KAAA8nE,iBAAA,KAuBAgD,EAAA9qE,KAAA+nE,WACA,IAAApd,EAAAmb,EAAAqH,WAAwC1N,GAClCgB,GAAS9V,GACf,IAAA+iB,EAAA5H,EAAAyG,WACAzB,EAAAxoB,SAAAwjB,EAAAgjB,cACAhe,EAAAngB,OACAmgB,EAAAkQ,SAAAlV,EAAAijB,cACAje,EAAAid,UAAAjiB,EAAAkjB,eACAle,EAAAE,UAAAlF,EAAA+H,eACA/C,EAAAG,aAAAnF,EAAAiI,mBAA8D7N,GAC9D4K,EAAAyX,eAAAzc,EAAAmjB,oBACAne,EAAA0X,iBAAA1c,EAAAojB,sBACApe,EAAA16D,QAAA01D,EAAAqjB,cAAoDhpB,GACpD2K,EAAAzwC,WAAAjtB,IAAAsgE,EAAA,EAAAA,EAEA,IAAAN,EAAAtH,EAAAuH,aACAC,EAAAxH,EAAAyH,aACAC,EAAA1H,EAAAwG,oBACAmB,EAAA3H,EAAAxvB,cACAt2C,KAAAunE,MAAAzB,EAAAyD,WAAA,GACAvpE,KAAAwnE,kBAAAp6D,IAAAggE,EAAA,EAAAA,EACAptE,KAAAynE,kBAAAr6D,IAAAkgE,EAAA,EAAAA,EACAttE,KAAA0nE,yBAAAt6D,IAAAogE,KACAxtE,KAAA2nE,mBAAAv6D,IAAAqgE,EAAA,EAAAA,EAEAztE,KAAA4nF,WAAAtd,GACA,iBAAAA,EAAA7E,YAAA6E,EAAA7E,YAAgFxvD,EAAMq0D,EAAA7E,cACtF6E,EAAAE,QAAAF,EAAAI,eAAA,IAAAJ,EAAAM,UACAN,EAAAK,SAAAL,EAAAO,WAAA,IAAAP,EAAAG,SAAAzgE,OAAA,IACA,GACAhK,KAAA0nF,SAAA5c,EAAAngB,KAAAmgB,EAAAzwC,OAAAywC,EAAAE,WAAA,KACAhrE,KAAA2nF,SAAAvd,EACA,iBAAAA,EAAA5E,UAAA4E,EAAA5E,UAAA,IAA+EvvD,EAAMm0D,EAAA5E,WACrF,QA1EAxlE,KAAAunE,MAAA,IA8EA+f,EAlfoB,CAmflB9C,IAUK,SAAAkE,GAAA/9B,EAAA49B,EAAAE,GAGP,IAFA,IAAAD,EAAAD,EAAAllF,OACAulB,EAAA,EACAxoB,EAAA,EAAiBA,EAAAooF,IAAcpoF,EAAA,CAC/B,IAAAgpF,EAAuBrnB,GAAgBpX,EAAA49B,EAAAnoF,IACvCwoB,EAAAlmB,KAAAC,IAAAimB,EAAAwgE,GACAX,EAAA/iF,KAAA0jF,GAEA,OAAAxgE,EAIe,IAAAygE,GAAA,GClgBfC,GAAA,CACAC,OAAYhD,GACZiD,QAAahF,GACbiF,MAAW/D,GACXgE,WAAgB1D,GAChBhzC,QAAauzC,GACboD,KAAUN,IAINO,GAAiB,SAAAC,GACrB,SAAAC,EACA5wD,EACAwkD,EACAxlD,EACAyiB,EACAgjC,EACAC,EACAmM,GAEAF,EAAAtpF,KAAAP,MAMAA,KAAAgqF,eAAApM,EAMA59E,KAAA2kF,gBAAA,KAMA3kF,KAAAiqF,WAAA/wD,EAMAl5B,KAAAkqF,WAAAxM,EAMA19E,KAAAmqF,UAAAxM,EAMA39E,KAAAwhD,YAAA7G,EAMA36C,KAAAoqF,YAAAlyD,EAMAl4B,KAAAqqF,cAAAN,EAMA/pF,KAAAsqF,iBAAA,GAMAtqF,KAAAuqF,qBAAgC/tC,GAAqB,KAMrDx8C,KAAAwqF,uBAAkC9oF,KAiSlC,OA9RAmoF,IAAAC,EAAAp9E,UAAAm9E,GACAC,EAAA9nF,UAAAlB,OAAAY,OAAAmoF,KAAA7nF,WACA8nF,EAAA9nF,UAAA+I,YAAA++E,EAKAA,EAAA9nF,UAAAs4E,aAAA,SAAAC,GACA,IAAAkQ,EAAA,KAUA,OATAzqF,KAAAgqF,iBACAzP,GACAkQ,EAAAzqF,KAAA2kF,gBAC0B8F,EAAA,OAE1BA,EAAAzqF,KAAA2kF,gBAA2CnpD,KAC3CivD,EAAA/kF,KAAA,KAGA+kF,GAOAX,EAAA9nF,UAAA2xE,KAAA,SAAA1V,EAAAv9B,GACA,IAAAgqD,EAAA1qF,KAAA2qF,cAAAjqD,GACAu9B,EAAAgL,YACAhL,EAAA4K,OAAA6hB,EAAA,GAAAA,EAAA,IACAzsB,EAAA6K,OAAA4hB,EAAA,GAAAA,EAAA,IACAzsB,EAAA6K,OAAA4hB,EAAA,GAAAA,EAAA,IACAzsB,EAAA6K,OAAA4hB,EAAA,GAAAA,EAAA,IACAzsB,EAAA0V,QAOAmW,EAAA9nF,UAAA4oF,WAAA,SAAAC,GACA,QAAAhtC,KAAA79C,KAAAsqF,iBAEA,IADA,IAAAQ,EAAA9qF,KAAAsqF,iBAAAzsC,GACAz9C,EAAA,EAAAgX,EAAAyzE,EAAAxnF,OAA0CjD,EAAAgX,IAAQhX,EAClD,GAAAyqF,EAAAzqF,KAAA0qF,EACA,SAIA,UAMAhB,EAAA9nF,UAAA8+E,OAAA,WACA,QAAAhO,KAAA9yE,KAAAsqF,iBAAA,CACA,IAAAO,EAAA7qF,KAAAsqF,iBAAAxX,GACA,QAAAiY,KAAAF,EACAA,EAAAE,GAAAjK,WAgBAgJ,EAAA9nF,UAAAsjD,2BAAA,SACAvlC,EACAmY,EACAU,EACAwsB,EACAm8B,EACA5uE,EACAq4E,GAGA5lC,EAAA1iD,KAAA2tC,MAAA+U,GACA,IAkBA6lC,EAlBAC,EAAA,EAAA9lC,EAAA,EACA1kB,EAAoBsJ,GAAgBhqC,KAAAwqF,uBACpCplC,EAAA,GAAAA,EAAA,GACA,EAAAltB,GAAA,EAAAA,GACAU,GACA7Y,EAAA,IAAAA,EAAA,IACAk+C,EAAAj+D,KAAAuqF,qBAEAtsB,EAAAthB,OAAA/zB,QAAAsiE,GAAAjtB,EAAAthB,OAAA13C,SAAAimF,GACAjtB,EAAAthB,OAAA/zB,MAAAsiE,EACAjtB,EAAAthB,OAAA13C,OAAAimF,GAEAjtB,EAAAmT,UAAA,IAAA8Z,UAOA99E,IAAApN,KAAAqqF,gBACAY,EAAkBzvD,KACZC,GAAgBwvD,EAAAlrE,GAChB2b,GAAMuvD,EAAA/yD,GAAAl4B,KAAAqqF,cAAAjlC,GAAA6lC,IAGZ,IACAE,EAOA9Q,EARA+Q,EAAAC,GAAAjmC,GAcA,SAAAo8B,EAAA/7B,GAEA,IADA,IAAAqvB,EAAA7W,EAAA8W,aAAA,IAAAmW,KAAArlF,KACAzF,EAAA,EAAqBA,EAAA8qF,EAAiB9qF,IACtC,QAAAyH,EAAA,EAAuBA,EAAAqjF,EAAiBrjF,IACxC,GAAAujF,EAAAhrF,GAAAyH,IACAitE,EAAA,GAAAjtE,EAAAqjF,EAAA9qF,GAAA,MACA,IAAA4F,OAAA,EAKA,QAJAmlF,GAAA9Q,GAA0DI,GAAUld,OAAA8c,GAAwBI,GAAUE,OACtG,IAAAwQ,EAAA/nF,QAAAqiD,MACAz/C,EAAA2M,EAAA8yC,IAEAz/C,QAGAi4D,EAAAmT,UAAA,IAAA8Z,MA1BAlrF,KAAAgqF,iBACAmB,EAAAnrF,KAAAgqF,eAAArkF,MAAA2O,IAAA,SAAAwqD,GACA,OAAAA,EAAAz9D,SAkCA,IAGAjB,EAAAyH,EAAAgjF,EAAAvH,EAAAt9E,EAHAszE,EAAAx4E,OAAA+X,KAAA7Y,KAAAsqF,kBAAAh2E,IAAAwZ,QAIA,IAHAwrD,EAAA7vE,KAAYigB,IAGZtpB,EAAAk5E,EAAAj2E,OAAA,EAA2BjD,GAAA,IAAQA,EAAA,CACnC,IAAAkrF,EAAAhS,EAAAl5E,GAAAoS,WAEA,IADAq4E,EAAA7qF,KAAAsqF,iBAAAgB,GACAzjF,EAAek1E,GAAK15E,OAAA,EAAYwE,GAAA,IAAQA,EAGxC,GAFAwyE,EAAqB0C,GAAKl1E,GAC1By7E,EAAAuH,EAAAxQ,QACAjtE,IAAAk2E,EACA,IAAA0H,GACA3Q,GAA6BI,GAAUld,OAAA8c,GAAwBI,GAAUE,MAUzE,GAFA30E,EAAAs9E,EAAAC,mBAAAtlB,EAAAv9B,EAAA9H,EACA2oD,EAAAC,EAAAyJ,GACAjlF,EACA,OAAAA,MAXyE,CACzE,IAAAykF,EAAAO,EAAAM,GACAb,EAGAA,EAAA/kF,KAAA49E,EAAA5iD,EAAAl6B,MAAA,IAFAwkF,EAAAM,GAAA,CAAAhI,EAAA5iD,EAAAl6B,MAAA,OAqBAsjF,EAAA9nF,UAAA2oF,cAAA,SAAAjqD,GACA,IAAAg9C,EAAA19E,KAAAkqF,WACApmF,EAAA45E,EAAA,GACA15E,EAAA05E,EAAA,GACAz5E,EAAAy5E,EAAA,GACAx5E,EAAAw5E,EAAA,GACAgN,EAAA,CAAA5mF,EAAAE,EAAAF,EAAAI,EAAAD,EAAAC,EAAAD,EAAAD,GAGA,OAFIy8B,GACJiqD,EAAA,MAAAhqD,EAAAgqD,GACAA,GAMAZ,EAAA9nF,UAAAo4E,UAAA,SAAAv8B,EAAAw8B,GACA,IAAAiR,OAAAl+E,IAAAywC,IAAArrC,WAAA,IACAq4E,EAAA7qF,KAAAsqF,iBAAAgB,QACAl+E,IAAAy9E,IACAA,EAAA,GACA7qF,KAAAsqF,iBAAAgB,GAAAT,GAEA,IAAAvH,EAAAuH,EAAAxQ,GACA,QAAAjtE,IAAAk2E,EAAA,CACA,IAAA/3E,EAAA+9E,GAAAjP,GACAiJ,EAAA,IAAA/3E,EAAAvL,KAAAiqF,WAAAjqF,KAAAkqF,WACAlqF,KAAAoqF,YAAApqF,KAAAwhD,YAAAxhD,KAAAmqF,UAAAnqF,KAAAgqF,gBACAa,EAAAxQ,GAAAiJ,EAEA,OAAAA,GAMAwG,EAAA9nF,UAAAupF,WAAA,WACA,OAAAvrF,KAAAsqF,kBAMAR,EAAA9nF,UAAAuyB,QAAA,WACA,OAAW9c,EAAOzX,KAAAsqF,mBAalBR,EAAA9nF,UAAAshF,OAAA,SACArlB,EACAv9B,EACAylC,EACAob,EACAtC,EACAuM,EACAC,GAIA,IAAAnS,EAAAx4E,OAAA+X,KAAA7Y,KAAAsqF,kBAAAh2E,IAAAwZ,QACAwrD,EAAA7vE,KAAYigB,IAIZu0C,EAAAoT,OACArxE,KAAA2zE,KAAA1V,EAAAv9B,GAEA,IACAtgC,EAAAgX,EAAAvP,EAAAwnC,EAAAw7C,EAAAvH,EADAoI,EAAAF,GAA0DzO,GAE1D,IAAA38E,EAAA,EAAAgX,EAAAkiE,EAAAj2E,OAA+BjD,EAAAgX,IAAQhX,EAAA,CACvC,IAAAkrF,EAAAhS,EAAAl5E,GAAAoS,WAEA,IADAq4E,EAAA7qF,KAAAsqF,iBAAAgB,GACAzjF,EAAA,EAAAwnC,EAAAq8C,EAAAroF,OAA0CwE,EAAAwnC,IAAQxnC,EAAA,CAClD,IAAAwyE,EAAAqR,EAAA7jF,GAEA,GADAy7E,EAAAuH,EAAAxQ,QACAjtE,IAAAk2E,EACA,IAAAmI,GACApR,GAA6BI,GAAUld,OAAA8c,GAAwBI,GAAUE,KAQzE2I,SAAArlB,EAAAv9B,EAAAylC,EAAAob,EAAAtC,OARyE,CACzE,IAAAwL,EAAAgB,EAAAH,GACAb,EAGAA,EAAA/kF,KAAA49E,EAAA5iD,EAAAl6B,MAAA,IAFAilF,EAAAH,GAAA,CAAAhI,EAAA5iD,EAAAl6B,MAAA,MAWAy3D,EAAAuT,WAGAsY,EA7WqB,CA8WnBtP,IAQFmR,GAAA,CACAC,EAAA,QAWA,SAAAC,GAAAjtE,EAAAsF,EAAAE,GACA,IAAAhkB,EACAshC,EAAAh/B,KAAA8H,MAAAoU,EAAAvb,OAAA,GACA,GAAA6gB,GAAAwd,EACA,IAAAthC,EAAAshC,EAAoBthC,EAAA8jB,EAAO9jB,IAC3Bwe,EAAAxe,GAAAgkB,IAAA,OAEG,GAAAF,EAAAwd,EACH,IAAAthC,EAAA8jB,EAAA,EAAmB9jB,EAAAshC,EAAYthC,IAC/Bwe,EAAAxe,GAAAgkB,IAAA,EAcO,SAAAinE,GAAA3pD,GACP,QAAAt0B,IAAAu+E,GAAAjqD,GACA,OAAAiqD,GAAAjqD,GAKA,IAFA,IAAAoqD,EAAA,EAAApqD,EAAA,EACAv8B,EAAA,IAAA0O,MAAAi4E,GACA1rF,EAAA,EAAiBA,EAAA0rF,EAAe1rF,IAChC+E,EAAA/E,GAAA,IAAAyT,MAAAi4E,GAGA,IAAA5nE,EAAAwd,EACAtd,EAAA,EACA2nE,EAAA,EAEA,MAAA7nE,GAAAE,EACAynE,GAAA1mF,EAAAu8B,EAAAxd,EAAAwd,EAAAtd,GACAynE,GAAA1mF,EAAAu8B,EAAAtd,EAAAsd,EAAAxd,GACA2nE,GAAA1mF,EAAAu8B,EAAAtd,EAAAsd,EAAAxd,GACA2nE,GAAA1mF,EAAAu8B,EAAAxd,EAAAwd,EAAAtd,GACAynE,GAAA1mF,EAAAu8B,EAAAxd,EAAAwd,EAAAtd,GACAynE,GAAA1mF,EAAAu8B,EAAAtd,EAAAsd,EAAAxd,GACA2nE,GAAA1mF,EAAAu8B,EAAAtd,EAAAsd,EAAAxd,GACA2nE,GAAA1mF,EAAAu8B,EAAAxd,EAAAwd,EAAAtd,GAEAA,IACA2nE,GAAA,IAAA3nE,EACA,GAAA2nE,EAAA7nE,GAAA,MACAA,GAAA,EACA6nE,GAAA,IAAA7nE,GAKA,OADAynE,GAAAjqD,GAAAv8B,EACAA,EAUO,SAAA6mF,GAAAhB,EAAA/sB,EAAArlC,EAAAqmD,GAGP,IAFA,IAAA3F,EAAAx4E,OAAA+X,KAAAmyE,GAAA12E,IAAAwZ,QAAArkB,KAA0DigB,IAC1Do/B,EAAA,GACA1+C,EAAA,EAAA6hF,EAAA3S,EAAAj2E,OAAiC+G,EAAA6hF,IAAQ7hF,EAEzC,IADA,IAAA8hF,EAAAlB,EAAA1R,EAAAlvE,GAAAoI,YACApS,EAAA,EAAAgX,EAAA80E,EAAA7oF,OAA2CjD,EAAAgX,GAAQ,CACnD,IAAAksE,EAAA4I,EAAA9rF,KACAsgC,EAAAwrD,EAAA9rF,KACAkjF,SAAArlB,EAAAv9B,EAAA9H,EAAAkwB,EAAAm2B,IAMe,IAAAkN,GAAA,GCvefC,GAAA,GASAC,GAAA,CACAr7C,MAAAs7C,GACA5C,WAAA6C,GACAv5C,QAAAw5C,GACAC,WAAAC,GACAC,gBAAAC,GACAC,aAAAC,GACAC,mBAAAC,GACAzD,OAAA0D,IASO,SAAAC,GAAAC,EAAAC,GACP,OAAAn0C,SAAkBhjC,EAAMk3E,GAAA,IAAAl0C,SAA2BhjC,EAAMm3E,GAAA,IASlD,SAAAC,GAAAn1D,EAAAyiB,GACP,IAAAzhB,EAAAo0D,GAAAp1D,EAAAyiB,GACA,OAAAzhB,IASO,SAAAo0D,GAAAp1D,EAAAyiB,GACP,OAAAyxC,GAAAl0D,EAAAyiB,EAUA,SAAAsyC,GAAAM,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAA+f,EAAAv1D,EAAAo5D,UACA5D,EAAAx1D,EAAAq5D,YACA,GAAA9D,GAAAC,EAAA,CACA,IAAA+nB,EAAAD,EAAAnT,UAAAnqE,EAAAquC,YAAgEm8B,GAAUt6C,QAC1EqtD,EAAAjoB,mBAAAC,EAAAC,GACA+nB,EAAAnpB,WAAAppB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,cAAA,IACA0I,EAAA1d,SAAArqB,EAAAwK,IAeO,SAAAgoC,GAAAF,EAAA9nC,EAAAx1C,EAAA67B,EAAAh+B,EAAAshE,GACP,IAAAtlB,GAAA,EACA6b,EAAA11D,EAAAwsD,WACA,GAAAkJ,EAAA,CACA,IAAA6M,EAAA7M,EAAA+nB,gBACAlb,GAAsB5V,GAAU/pC,QAAA2/C,GAAyB5V,GAAUvhD,MACnEsqD,EAAAgoB,oBAAA7/E,EAAAshE,IAEAoD,GAAwB5V,GAAUjqC,MAClCgzC,EAAAt/D,OAEAmsE,EAAA7M,EAAA+nB,gBACA/nB,EAAAioB,kBAAA9/E,EAAAshE,GACAtlB,GAAA,GAKA,OAFA+jC,GAAAN,EAAA9nC,EAAAx1C,EAAA67B,GAEAge,EAUA,SAAA+jC,GAAAN,EAAA9nC,EAAAx1C,EAAA67B,GACA,IAAAmP,EAAAhrC,EAAAu5D,qBAAAv5D,CAAAw1C,GACA,GAAAxK,EAAA,CAGA,IAAAhO,EAAAgO,EAAApP,sBAAAC,GACAo4B,EAAAj0D,EAAAu2C,cACA,GAAA0d,EACA4pB,GAAAP,EAAAtgD,EAAAh9B,EAAAw1C,OACG,CACH,IAAAsoC,EAAA1B,GAAAp/C,EAAAlB,WACAgiD,EAAAR,EAAAtgD,EAAAh9B,EAAAw1C,KAWA,SAAAqoC,GAAAP,EAAAtyC,EAAAhrC,EAAAw1C,GACA,GAAAxK,EAAAlP,WAA4BrM,GAAYQ,oBAAxC,CAOA,IAAAojD,EAAAiK,EAAAnT,UAAAnqE,EAAAquC,YAAwDm8B,GAAUC,SAClE4I,EAAArf,WAA2E,EAAAxe,EAAAx1C,EAAAu2C,oBAN3E,IADA,IAAAijB,EAAgF,EAAAukB,gBAChF5tF,EAAA,EAAAgX,EAAAqyD,EAAApmE,OAA2CjD,EAAAgX,IAAQhX,EACnD0tF,GAAAP,EAAA9jB,EAAArpE,GAAA6P,EAAAw1C,GAeA,SAAAunC,GAAAO,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IACArlD,EAAAgX,EADAqyD,EAAAxuB,EAAAyuB,qBAEA,IAAAtpE,EAAA,EAAAgX,EAAAqyD,EAAApmE,OAAqCjD,EAAAgX,IAAQhX,EAAA,CAC7C,IAAA2tF,EACA1B,GAAA5iB,EAAArpE,GAAA2rC,WACAgiD,EAAAR,EAAA9jB,EAAArpE,GAAA6P,EAAAw1C,IAWA,SAAA8mC,GAAAgB,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAAggB,EAAAx1D,EAAAq5D,YACA,GAAA7D,EAAA,CACA,IAAAwoB,EAAAV,EAAAnT,UAAAnqE,EAAAquC,YAAoEm8B,GAAU76C,aAC9EquD,EAAA1oB,mBAAA,KAAAE,GACAwoB,EAAAvpB,eAAAzpB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,cAAA,IACA0I,EAAA1d,SAAArqB,EAAAwK,IAWA,SAAAmnC,GAAAW,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAAggB,EAAAx1D,EAAAq5D,YACA,GAAA7D,EAAA,CACA,IAAAwoB,EAAAV,EAAAnT,UAAAnqE,EAAAquC,YAAoEm8B,GAAU76C,aAC9EquD,EAAA1oB,mBAAA,KAAAE,GACAwoB,EAAArpB,oBAAA3pB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,cAAA,IACA0I,EAAA1d,SAAArqB,EAAAwK,IAWA,SAAAqnC,GAAAS,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAA+f,EAAAv1D,EAAAo5D,UACA5D,EAAAx1D,EAAAq5D,YACA,GAAA7D,GAAAD,EAAA,CACA,IAAA0oB,EAAAX,EAAAnT,UAAAnqE,EAAAquC,YAAiEm8B,GAAU36C,SAC3EouD,EAAA3oB,mBAAAC,EAAAC,GACAyoB,EAAAlpB,iBAAA/pB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,cAAA,IACA0I,EAAA1d,SAAArqB,EAAAwK,IAWA,SAAA6mC,GAAAiB,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAAkgB,EAAA11D,EAAAwsD,WACA,GAAAkJ,EAAA,CACA,GAAAA,EAAA+nB,iBAAsC9wB,GAAU/pC,OAChD,OAEA,IAAAs7D,EAAAZ,EAAAnT,UAAAnqE,EAAAquC,YAA+Dm8B,GAAUld,OACzE4wB,EAAAzoB,cAAAC,EAAA4nB,EAAAjT,cAAA,IACA6T,EAAAjpB,UAAAjqB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,eAAA3U,IACAqd,EAAA1d,SAAArqB,EAAAwK,IAWA,SAAAinC,GAAAa,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAAkgB,EAAA11D,EAAAwsD,WACA,GAAAkJ,EAAA,CACA,GAAAA,EAAA+nB,iBAAsC9wB,GAAU/pC,OAChD,OAEA,IAAAs7D,EAAAZ,EAAAnT,UAAAnqE,EAAAquC,YAA+Dm8B,GAAUld,OACzE4wB,EAAAzoB,cAAAC,EAAA4nB,EAAAjT,cAAA,IACA6T,EAAArpB,eAAA7pB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,eAAA3U,IACAqd,EAAA1d,SAAArqB,EAAAwK,IAWA,SAAA+mC,GAAAe,EAAAtyC,EAAAhrC,EAAAw1C,GACA,IAAA+f,EAAAv1D,EAAAo5D,UACA5D,EAAAx1D,EAAAq5D,YACA,GAAA9D,GAAAC,EAAA,CACA,IAAAyoB,EAAAX,EAAAnT,UAAAnqE,EAAAquC,YAAiEm8B,GAAU36C,SAC3EouD,EAAA3oB,mBAAAC,EAAAC,GACAyoB,EAAA9oB,YAAAnqB,EAAAwK,GAEA,IAAAqgB,EAAA71D,EAAAs5D,UACA,GAAAzD,EAAA,CACA,IAAAkd,EAAAuK,EAAAnT,UAAAnqE,EAAAquC,YAA8Dm8B,GAAUE,MACxEqI,EAAAnd,aAAAC,EAAAynB,EAAAjT,cAAA,IACA0I,EAAA1d,SAAArqB,EAAAwK,ICnSA,IAAI2oC,GAAyB,SAAA3a,GAC7B,SAAA4a,EAAAC,GAEA7a,EAAAlzE,KAAAP,KAAAsuF,GAMAtuF,KAAAgqF,eAAAsE,EAAAC,eAAuDC,KAAK,OAAAphF,GAAA,KAM5DpN,KAAAyuF,QAAA,EAMAzuF,KAAA0uF,mBAAA,EAMA1uF,KAAA2uF,oBAAArjD,IAMAtrC,KAAA+2E,gBAA2Bv7C,KAM3Bx7B,KAAA4uF,qBAAA,KAMA5uF,KAAA6uF,aAAA,KAMA7uF,KAAA81E,oBAAA,EAKA91E,KAAAi+D,QAAmBzhB,KAEflpC,EAAO+sD,GAAYzlD,EAASE,MAAA9a,KAAA8uF,oBAAA9uF,MA6UhC,OAzUAyzE,IAAA4a,EAAA3hF,UAAA+mE,GACA4a,EAAArsF,UAAAlB,OAAAY,OAAA+xE,KAAAzxE,WACAqsF,EAAArsF,UAAA+I,YAAAsjF,EAKAA,EAAArsF,UAAAqX,gBAAA,WACIL,EAASqnD,GAAYzlD,EAASE,MAAA9a,KAAA8uF,oBAAA9uF,MAClCyzE,EAAAzxE,UAAAqX,gBAAA9Y,KAAAP,OAQAquF,EAAArsF,UAAA+zE,QAAA,SAAA9X,EAAA1+C,EAAAihC,GACA,IAAA3oB,EAAAtY,EAAAsY,OACA8iB,EAAAp7B,EAAAo7B,WACAmO,EAAAtI,EAAAvC,QACA1+B,EAAAupC,mBAAA,GACAJ,EAAAnpC,EAAAmpC,UACAniB,EAAAmiB,EAAAniB,WACA3N,EAAA8vB,EAAA9vB,SACA42C,EAAAjpC,EAAA7C,YACAqrD,EAA2E/uF,KAAAoyE,WAAAvoB,YAE3EnpB,EAAA1gC,KAAAkxE,aAAA3xD,EAAA,GAGAyvE,EAAAxuC,EAAA3oB,OACA48C,OAAArnE,IAAA4hF,EACAva,GACAz0E,KAAA2zE,KAAA1V,EAAA1+C,EAAiF,GAEjF,IAAAguE,EAAAvtF,KAAA6uF,aACA,GAAAtB,MAAAh5D,UAAA,CACAv0B,KAAAgqF,gBACAhqF,KAAAgqF,eAAAjnF,QAEA,IAGAksF,EAHAjxC,EAAqEh+C,KAAAoyE,WACrE8c,EAAA,EACAC,EAAA,EAEAC,EAAA,IAAA5uC,EAAA7C,QACA0xC,EAAArxC,EAAAvjC,YAAiD4X,GAAeG,QAChE,GAAA48D,GAAAC,EAAA,CACA,IAAAC,EAAArxB,EAAAthB,OAAA/zB,MACA2mE,EAAAtxB,EAAAthB,OAAA13C,OACA,GAAA2zB,EAAA,CACA,IAAA42D,EAAA9sF,KAAA2tC,MAAA3tC,KAAAwF,KAAAonF,IAAAC,MACAL,GAAAM,EAAAF,GAAA,EACAH,GAAAK,EAAAD,GAAA,EACAD,EAAAC,EAAAC,EAGAxvF,KAAAi+D,QAAAthB,OAAA/zB,MAAA0mE,EACAtvF,KAAAi+D,QAAAthB,OAAA13C,OAAAsqF,EACAN,EAAAjvF,KAAAi+D,aAEAgxB,EAAAhxB,EAGA,IAAAyE,EAAAusB,EAAAtsB,YACAysB,IAIAH,EAAAtsB,YAAAniB,EAAA7C,SAGAsxC,GAAAhxB,GACAgxB,EAAA/iD,UAAAgjD,EAAAC,GAGA,IAAA1nC,EAAAloC,EAAAkoC,UACAw3B,IAAAx3B,EAAoCtuB,GAAQC,YAAAquB,EAAyBtuB,GAAQE,cAC7EzQ,EAAArJ,EAAAwe,KAAA,GAAA4c,EACA11C,EAAAsa,EAAAwe,KAAA,GAAA4c,EAIA,GAHMqnB,GAAcitB,GAAAr2D,EACpBhQ,EAAA,EAAA3jB,EAAA,GACAsoF,EAAAjK,OAAA2L,EAAAvuD,EAAA9H,EAAAkwB,EAAAm2B,GACA8P,EAAAjf,YAAAvpC,EAAA/C,aACWxH,GAAcwzC,EAAA33C,GAAA,CACzB,IAGAoqC,EAHA5iC,EAAAxH,EAAA,GACA43C,EAAyBhyC,GAAQ+xC,GACjCigB,EAAA,EAEA,MAAApwD,EAAAmwC,EAAA,KACAigB,EACAxtB,EAAAwN,EAAAggB,EACA/uD,EAAA1gC,KAAAkxE,aAAA3xD,EAAA0iD,GACAsrB,EAAAjK,OAAA2L,EAAAvuD,EAAA9H,EAAAkwB,EAAAm2B,GACA5/C,GAAAowC,EAEAggB,EAAA,EACApwD,EAAAxH,EAAA,GACA,MAAAwH,EAAAmwC,EAAA,KACAigB,EACAxtB,EAAAwN,EAAAggB,EACA/uD,EAAA1gC,KAAAkxE,aAAA3xD,EAAA0iD,GACAsrB,EAAAjK,OAAA2L,EAAAvuD,EAAA9H,EAAAkwB,EAAAm2B,GACA5/C,GAAAowC,EASA,GANMzN,GAAcitB,EAAAr2D,EACpBhQ,EAAA,EAAA3jB,EAAA,GAEAoqF,GACArvF,KAAA2nD,oBAAAsnC,EAAA1vE,EAAAmhB,GAEAuuD,GAAAhxB,EAAA,CACA,GAAAmxB,EAAA,CACA,IAAAM,EAAAzxB,EAAA0E,YACA1E,EAAA0E,YAAAniB,EAAA7C,QACAsgB,EAAAmE,UAAA6sB,EAAAtyC,QAAAuyC,GAAAC,GACAlxB,EAAA0E,YAAA+sB,OAEAzxB,EAAAmE,UAAA6sB,EAAAtyC,QAAAuyC,GAAAC,GAEAF,EAAA/iD,WAAAgjD,GAAAC,GAGAC,IACAH,EAAAtsB,YAAAD,GAIA+R,GACAxW,EAAAuT,WAOA6c,EAAArsF,UAAAuvE,aAAA,SAAAhyD,EAAAihC,EAAAyd,GACA,IAAAv9B,EAAA1gC,KAAAkxE,aAAA3xD,EAAA,GACAvf,KAAAm0E,WAAAlW,EAAA1+C,EAAAmhB,GACA1gC,KAAA+1E,QAAA9X,EAAA1+C,EAAAihC,GACAxgD,KAAAk0E,YAAAjW,EAAA1+C,EAAAihC,EAAA9f,IAMA2tD,EAAArsF,UAAAsjD,2BAAA,SAAAvlC,EAAAR,EAAA6lC,EAAAzyC,EAAAy8D,GACA,GAAApvE,KAAA6uF,aAEK,CACL,IAAA32D,EAAA3Y,EAAAmpC,UAAAxwB,WACAU,EAAArZ,EAAAmpC,UAAA9vB,SACAolB,EAAqEh+C,KAAAoyE,WAErE5sB,EAAA,GACAx/C,EAAAhG,KAAA6uF,aAAAvpC,2BAAAvlC,EAAAmY,EAAAU,EAAAwsB,EAAA,GAKA,SAAAK,GACA,IAAA9jD,EAAoBsU,EAAMwvC,GAC1B,KAAA9jD,KAAA6jD,GAEA,OADAA,EAAA7jD,IAAA,EACAgR,EAAApS,KAAA6uE,EAAA3pB,EAAAzH,IAES,MACT,OAAAh4C,IAOAqoF,EAAArsF,UAAA8sF,oBAAA,SAAAx0E,GACA,IAAA0jC,EAAAh+C,KAAAoyE,WACAp0B,EAAAK,cAAAr+C,KAAA6uF,cACA7wC,EAAAxhC,WASA6xE,EAAArsF,UAAA2tF,wBAAA,SAAAr1E,GACAta,KAAAsyE,2BAMA+b,EAAArsF,UAAAsvE,aAAA,SAAA/xD,EAAAihC,GACA,IAAA8tC,EAAyEtuF,KAAAoyE,WACzE2c,EAA2ET,EAAAzkC,YAE3E+lC,EAAArwE,EAAAkoC,UAAyCtuB,GAAQC,WACjDy2D,EAAAtwE,EAAAkoC,UAA2CtuB,GAAQE,aACnDy2D,EAAAxB,EAAAyB,0BACAC,EAAA1B,EAAA2B,4BAEA,IAAAjwF,KAAAyuF,SAAAqB,GAAAF,IACAI,GAAAH,EACA,SAGA,IAAAK,EAAA3wE,EAAAsY,OACA6wB,EAAAnpC,EAAAmpC,UACAniB,EAAAmiB,EAAAniB,WACArO,EAAAwwB,EAAAxwB,WACAyiB,EAAAp7B,EAAAo7B,WACAw1C,EAAA7B,EAAA7xE,cACA2zE,EAAA9B,EAAA+B,kBACAC,EAAAhC,EAAAiC,sBAEAnjF,IAAAkjF,IACAA,EAA+BpD,IAG/B,IAAAr1D,EAAiB6D,GAAMw0D,EACvBE,EAAAl4D,GACAs3C,EAAA9mB,EAAAniB,WAAA7C,YAEA,GAAAqrD,EAAAjf,YAAApnB,EAAAniB,WAAA/C,aACSxH,GAAcwzC,EAAAjwD,EAAAsY,QAAA,CAMvB,IAAA43C,EAAuBhyC,GAAQ+xC,GAC/BoK,EAAAl3E,KAAAC,IAA4B86B,GAAQ5F,GAAA,EAAA43C,GACpC53C,EAAA,GAAA23C,EAAA,GAAAoK,EACA/hD,EAAA,GAAA23C,EAAA,GAAAoK,EAGA,IAAA55E,KAAAyuF,QACAzuF,KAAA2uF,qBAAAz2D,GACAl4B,KAAA0uF,mBAAAyB,GACAnwF,KAAA4uF,sBAAA0B,GACQt0D,GAAch8B,KAAA+2E,gBAAAl/C,GAEtB,OADA73B,KAAA81E,oBAAA,GACA,EAGA91E,KAAA6uF,aAAA,KAEA7uF,KAAAyuF,QAAA,EAEA,IAAAlB,EAAA,IAA0BpB,GACpBmB,GAAkBp1D,EAAAyiB,GAAA9iB,EAAAK,EACxByiB,EAAAo0C,EAAAyB,cAAAxwF,KAAAgqF,eAAAsE,EAAA+B,mBACAtB,EAAA0B,aAAA54D,EAAAK,EAAAqO,GAKA,IAAAshB,EAAA,SAAApC,GACA,IAAAirC,EACAC,EAAAlrC,EAAAmrC,oBAAAtC,EAAAsC,mBAIA,GAHAD,IACAD,EAAAC,EAAAlrC,EAAAvtB,IAEAw4D,EAAA,CACA,IAAAG,EAAA7wF,KAAAytF,cACAhoC,EAAAvtB,EAAAyiB,EAAA+1C,EAAAnD,GACAvtF,KAAAyuF,OAAAzuF,KAAAyuF,QAAAoC,IAEKjvF,KAAA5B,MACL,GAAAswF,EAAA,CAEA,IAAA9qC,EAAA,GACAupC,EAAA+B,uBAAAj5D,EAIA,SAAA4tB,GACAD,EAAA9/C,KAAA+/C,KAEAD,EAAA/7C,KAAA6mF,GACA,QAAAlwF,EAAA,EAAAgX,EAAAouC,EAAAniD,OAA2CjD,EAAAgX,IAAQhX,EACnDynD,EAAArC,EAAAplD,SAGA2uF,EAAA+B,uBAAAj5D,EAAAgwB,GAWA,OATA0lC,EAAAzM,SAEA9gF,KAAA2uF,oBAAAz2D,EACAl4B,KAAA0uF,kBAAAyB,EACAnwF,KAAA4uF,qBAAA0B,EACAtwF,KAAA+2E,gBAAAl/C,EACA73B,KAAA6uF,aAAAtB,EAEAvtF,KAAA81E,oBAAA,GACA,GAWAuY,EAAArsF,UAAAyrF,cAAA,SAAAhoC,EAAAvtB,EAAAyiB,EAAA+1C,EAAAnD,GACA,IAAAmD,EACA,SAEA,IAAA5mC,GAAA,EACA,GAAAj2C,MAAA6I,QAAAg0E,GACA,QAAAtwF,EAAA,EAAAgX,EAAAs5E,EAAArtF,OAAyCjD,EAAAgX,IAAQhX,EACjD0pD,EAAkB2jC,GAClBF,EAAA9nC,EAAAirC,EAAAtwF,GACUitF,GAAyBn1D,EAAAyiB,GACnC36C,KAAA2vF,wBAAA3vF,OAAA8pD,OAGAA,EAAgB2jC,GAChBF,EAAA9nC,EAAAirC,EACQrD,GAAyBn1D,EAAAyiB,GACjC36C,KAAA2vF,wBAAA3vF,MAEA,OAAA8pD,GAGAukC,EAvY6B,CAwY3Bja,IAQFga,GAAyB,oBAAApwC,GACzB,OAAAA,EAAAjS,YAA6BuxB,GAASI,QAUtC0wB,GAAyB,mBAAAhY,EAAAp4B,GACzB,WAAaowC,GAA6E,IAI3E,IAAA2C,GAAA,GCraAC,GAAA,CACfzzB,MAAA,QACA0zB,OAAA,SACAvzB,OAAA,UCaAwzB,GAAA,CACA7uB,MAAA,CAAYoY,GAAU36C,QAAU26C,GAAUt6C,OACtCs6C,GAAU76C,YAAc66C,GAAUld,MAAQkd,GAAUE,MACxDwW,OAAA,CAAa1W,GAAU36C,QAAU26C,GAAU76C,cAO3CwxD,GAAA,CACA/uB,MAAA,CAAYoY,GAAUC,SACtByW,OAAA,CAAa1W,GAAUld,MAAQkd,GAAUE,KAAOF,GAAUC,SAC1D2W,OAAYtU,IASRuU,GAA6B,SAAA3a,GACjC,SAAA4a,EAAAvzC,GAEA24B,EAAAp2E,KAAAP,KAAAg+C,GAAA,GAMAh+C,KAAAgqF,eAAAhsC,EAAAuwC,eAAiDC,KAAK,OAAAphF,GAAA,KAMtDpN,KAAAyuF,QAAA,EAMAzuF,KAAAwxF,uBAMAxxF,KAAAyxF,cAAyB/vF,KAEzB,IAAAgwF,EAAA1zC,EAAAm4B,gBAGAn2E,KAAAq3E,WAAAqa,IAAqCV,GAAoBtzB,OAAA,IAEzDg0B,IAAuBV,GAAoBtzB,SAC3C19D,KAAAi+D,QAAqBzhB,MAIjBlpC,EAAO+sD,GAAYzlD,EAASE,MAAA9a,KAAA8uF,oBAAA9uF,MAuYhC,OAnYA22E,IAAA4a,EAAA7kF,UAAAiqE,GACA4a,EAAAvvF,UAAAlB,OAAAY,OAAAi1E,KAAA30E,WACAuvF,EAAAvvF,UAAA+I,YAAAwmF,EAKAA,EAAAvvF,UAAAqX,gBAAA,WACIL,EAASqnD,GAAYzlD,EAASE,MAAA9a,KAAA8uF,oBAAA9uF,MAClC22E,EAAA30E,UAAAqX,gBAAA9Y,KAAAP,OAMAuxF,EAAAvvF,UAAAoxE,QAAA,SAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACA,IAAA5Q,EAAAghD,EAAA30E,UAAAoxE,QAAA7yE,KAAAP,KAAAoK,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GAOA,OANA5Q,EAAAI,aAA4BrD,GAASG,SACrC7yB,KAAA2xF,mBAAoF,EAAAh3C,EAAApU,GACpFvmC,KAAAi+D,SACAj+D,KAAA4xF,iBAAoF,EAAAj3C,EAAApU,IAGpF5Q,GAMA47D,EAAAvvF,UAAA83E,aAAA,SAAAnkD,GACA,IAAAihD,EAAqE52E,KAAAoyE,WACrE,OAAiE,EAAA3V,SAAAma,IAMjE2a,EAAAvvF,UAAAsvE,aAAA,SAAA/xD,EAAAihC,GACA,IAAAxC,EAAmEh+C,KAAAoyE,WACnEyf,EAAA7zC,EAAAvhC,cAKA,OAJAzc,KAAAwxF,wBAAAK,IACA7xF,KAAAi3E,cAAA5zE,OAAA,GAEArD,KAAAwxF,uBAAAK,EACAlb,EAAA30E,UAAAsvE,aAAA/wE,KAAAP,KAAAuf,EAAAihC,IASA+wC,EAAAvvF,UAAA2vF,mBAAA,SAAAh8D,EAAAglB,EAAApU,GACA,IAAAurD,EAAA9xF,KAEAg+C,EAAmEh+C,KAAAoyE,WACnE2f,EAAA/zC,EAAAvhC,cACAu1E,EAAyEh0C,EAAAuyC,kBAAA,KAEzE0B,EAAAt8D,EAAAu8D,eAAAl0C,GACA,GAAAi0C,EAAApB,OAAAoB,EAAAjb,kBAAA+a,GACAE,EAAAE,qBAAAH,EADA,CAyEA,IApEA,IAAA36E,EAAyE2mC,EAAA6L,YACzEuoC,EAAA/6E,EAAAg7E,cACAluD,EAAA9sB,EAAAygE,yBAAAvxC,GACArO,EAAAiM,EAAA6R,cAAArgB,EAAAu8C,UAAA,IACAiH,EAAAxjD,EAAAkC,OAEAy6D,EAAA,SAAAhxF,EAAAixF,GACA,IAAAC,EAAA78D,EAAAy9C,QAAAz9C,EAAA88D,SAAAnxF,IACA,GAAAkxF,EAAAz8D,YAAmCrD,GAASG,OAA5C,CAIA,IAAA6/D,EAAAF,EAAAtgB,UACAygB,EAAAP,EAAA3Y,mBAAAiZ,GACAE,EAAyBl0D,GAAey6C,EAAAwZ,GACxCE,EAA2B/1D,GAAM61D,EAAAC,GAAA,KACzBl3D,GAAMk3D,EAAA50C,EAAAqyC,kBAAAn4D,EAAA45D,EAAA3a,WACd2b,EAAAN,EAAAr4C,gBACA44C,GAAA,EACW1qD,GAAoB9B,EAAAusD,KAC/BC,GAAA,EACAP,EAAAQ,cAAAzsD,IAEA0rD,EAAApB,OAAA,EACA,IAAAtD,EAAA,IAA4BpB,GAAiB,EAAAyG,EAAA16D,EAC7CyiB,EAAAtjC,EAAAm5E,cAAAsB,EAAA9H,eAAAhsC,EAAAqyC,mBACAvkD,EAA6BuhD,GAAyBn1D,EAAAyiB,GAMtDkN,EAAA,SAAApC,GACA,IAAAirC,EACAC,EAAAlrC,EAAAmrC,oBAAA5yC,EAAA4yC,mBAIA,GAHAD,IACAD,EAAAC,EAAAlrC,EAAAvtB,IAEAw4D,EAAA,CACA,IAAAG,EAAA7wF,KAAAytF,cAAAhoC,EAAA3Z,EAAA4kD,EAAAnD,GACAvtF,KAAAyuF,OAAAzuF,KAAAyuF,QAAAoC,EACAoB,EAAApB,MAAAoB,EAAApB,WAIArrC,EAAAgtC,EAAAS,cACAjB,OAAAC,EAAAE,qBACA3sC,EAAA/7C,KAAAuoF,GAEA,QAAA5xF,EAAA,EAAAgX,EAAAouC,EAAAniD,OAA2CjD,EAAAgX,IAAQhX,EAAA,CACnD,IAAAqlD,EAAAD,EAAAplD,GACA2yF,IACAD,EAAAnvD,YAA2CnB,GAAKH,cAEhDywD,EAAAzuD,eAAAsuD,GAEAG,EAAA1uD,UAAAouD,EAAA9uD,cAEA+hB,EAAAqQ,cAAAp1B,UAAAoyD,EAAAvsD,IAEAssD,IAA+Bj0D,GAAUi0D,EAAAptC,EAAAqQ,cAAApyB,cACzCmkB,EAAAtnD,KAAAuxF,EAAArsC,GAGA8nC,EAAAzM,SACA0R,EAAAU,eAAAl1C,EAAAroB,EAAAu8C,UAAA1/D,WAAA+6E,KAGAjsF,EAAA,EAAAixF,EAAA58D,EAAA88D,SAAApvF,OAA8C/B,EAAAixF,IAAQjxF,EAAAgxF,EAAAhxF,EAAAixF,GACtDN,EAAAjb,iBAAA+a,EACAE,EAAAE,oBAAAH,IAMAT,EAAAvvF,UAAAsjD,2BAAA,SAAAvlC,EAAAR,EAAA6lC,EAAAzyC,EAAAy8D,GACA,IAAAl3C,EAAA3Y,EAAAmpC,UAAAxwB,WACAU,EAAArZ,EAAAmpC,UAAA9vB,SACAwsB,OAAAh4C,GAAAg4C,EAAA,EAAAA,EACA,IAMAytC,EAAAhpE,EACAzpB,EAAAgX,EAPA4mC,EAAAh+C,KAAAoyE,WAEA5sB,EAAA,GAEAyxB,EAAqFj3E,KAAA,cAIrF,IAAAI,EAAA,EAAAgX,EAAA6/D,EAAA5zE,OAA0CjD,EAAAgX,IAAQhX,EAAA,CAClD,IAAAu1B,EAAAshD,EAAA72E,GAEA,GADAyyF,EAAuBn3D,GAAM/F,EAAAkC,OAAAutB,EAAAltB,EAAA26D,GAClB/2D,GAAkB+2D,EAAA9yE,GAG7B,QAAAze,EAAA,EAAAixF,EAAA58D,EAAA88D,SAAApvF,OAAgD/B,EAAAixF,IAAQjxF,EAAA,CACxD,IAAAkxF,EAAA78D,EAAAy9C,QAAAz9C,EAAA88D,SAAAnxF,IACA,GAAAkxF,EAAAz8D,YAAqCrD,GAASG,OAA9C,CAGA,IAAA06D,EAAuDiF,EAAAW,eAAAn1C,EACvDroB,EAAAu8C,UAAA1/D,YACAqX,KAAA0jE,EAAAjoC,2BAAAvlC,EAAAmY,EAAAU,EAAAwsB,EAAA,GAKA,SAAAK,GACA,IAAA9jD,EAAsBsU,EAAMwvC,GAC5B,KAAA9jD,KAAA6jD,GAEA,OADAA,EAAA7jD,IAAA,EACAgR,EAAApS,KAAA6uE,EAAA3pB,EAAAzH,IAEW,QAGX,OAAAn0B,GASA0nE,EAAAvvF,UAAAoxF,oBAAA,SAAAz9D,EAAApW,GACA,IAAAy+B,EAAAh+C,KAAAoyE,WACA/6D,EAAyE2mC,EAAA6L,YACzE1lB,EAAA9sB,EAAAg7E,cACAngB,EAAAv8C,EAAAu8C,UACAnrB,EAAA5iB,EAAA6R,cAAAk8B,EAAA,IACAxpB,EAAAnpC,EAAAmpC,UACA/N,EAAAp7B,EAAAo7B,WACA04C,EAAA3qC,EAAAxwB,WAAAyiB,EACAw+B,EAAAh1C,EAAAs1C,mBAAAvH,EAAAlyE,KAAAm3E,WACAr/C,EAAA4wB,EAAA5wB,OACAipD,EAAiBzjD,GAAU67C,GAC3Bp7C,EAAAxe,EAAAwe,KACAkkC,EAAAv/D,KAAA2tC,MAAAsK,EAAA5c,EAAA,MACAmkC,EAAAx/D,KAAA2tC,MAAAsK,EAAA5c,EAAA,MACA,OAAWiM,GAAgBhqC,KAAAyxF,cAC3BxvB,EAAAC,EACAnb,EAAAssC,EAAAtsC,EAAAssC,EACA3qC,EAAA9vB,UACAmoD,EAAA,GAAAjpD,EAAA,IAAAivB,GACAjvB,EAAA,GAAAipD,EAAA,IAAAh6B,IAMAwqC,EAAAvvF,UAAA8sF,oBAAA,SAAAx0E,GACA,IAAA0jC,EAAAh+C,KAAAoyE,WACAp0B,EAAAK,mBAAAjxC,IAAApN,KAAAwxF,wBACAxzC,EAAAxhC,WASA+0E,EAAAvvF,UAAA2tF,wBAAA,SAAAr1E,GACAta,KAAAsyE,2BAMAif,EAAAvvF,UAAAkyE,YAAA,SAAAjW,EAAA1+C,EAAAihC,GACA,IAAAxC,EAAmEh+C,KAAAoyE,WACnEsf,EAAA1zC,EAAAm4B,gBACA,GAAAub,GAAsBV,GAAoBzzB,MAAA,CAC1C,IAMA0E,EAAAC,EANA8oB,EAAAhtC,EAAAuwC,eAAA,GAAsD,KACtDl3E,EAA2E2mC,EAAA6L,YAC3E6hC,EAAA0F,GAAAM,GACA/2C,EAAAp7B,EAAAo7B,WACA/hB,EAAArZ,EAAAmpC,UAAA9vB,SACAmF,EAAAxe,EAAAwe,KAEAnF,IACAqpC,EAAAv/D,KAAA2tC,MAAAsK,EAAA5c,EAAA,MACAmkC,EAAAx/D,KAAA2tC,MAAAsK,EAAA5c,EAAA,MACQikC,GAAc/D,GAAArlC,EAAAqpC,EAAAC,IAEtB8oB,GACAhrF,KAAAgqF,eAAAjnF,QAQA,IANA,IAAA0kD,EAAAloC,EAAAkoC,UACAw3B,IAAAx3B,EAAoCtuB,GAAQC,YAAAquB,EAAyBtuB,GAAQE,cAC7E24C,EAAAhyE,KAAAi3E,cACA9yC,EAAA9sB,EAAAygE,yBAAAv4D,EAAAmpC,UAAAniB,YACA+sD,EAAA,GACAha,EAAA,GACAl5E,EAAA4xE,EAAA3uE,OAAA,EAAoCjD,GAAA,IAAQA,EAAA,CAC5C,IAAAu1B,EAAyEq8C,EAAA5xE,GACzE,GAAAu1B,EAAAI,YAA+BrD,GAASK,MAMxC,IAHA,IAAAm/C,EAAAv8C,EAAAu8C,UACAqhB,EAAApvD,EAAAs1C,mBAAAvH,EAAAlyE,KAAAm3E,WAAA,GAAAxhD,EAAAkC,OAAA,GACA6I,OAAAtzB,EACA9L,EAAA,EAAAixF,EAAA58D,EAAA88D,SAAApvF,OAAkD/B,EAAAixF,IAAQjxF,EAAA,CAC1D,IAAAkxF,EAAA78D,EAAAy9C,QAAAz9C,EAAA88D,SAAAnxF,IACA,GAAAkxF,EAAAz8D,YAAuCrD,GAASG,OAAhD,CAGA,IAAA06D,EAAyDiF,EAAAW,eAAAn1C,EAAAk0B,EAAA1/D,YACzD,GAAA+6E,KAAA3C,WAAAc,GAAA,CAKAhrD,IACAA,EAAA1gC,KAAAkxE,aAAA3xD,EAAAg0E,IAEA,IAAAvgB,EAAAwf,EAAAtgB,UAAA,GACAshB,EAAAjG,EAAA5C,cAAAjqD,GACAu9B,EAAAoT,OACApT,EAAA0E,YAAAniB,EAAA7C,QAGA,QAAA91C,EAAA,EAAAwnC,EAAAikD,EAAAjwF,OAA4CwE,EAAAwnC,IAAQxnC,EAAA,CACpD,IAAA8rE,EAAA2f,EAAAzrF,GACAmrE,EAAAsG,EAAAzxE,KACAo2D,EAAAgL,YAEAhL,EAAA4K,OAAA2qB,EAAA,GAAAA,EAAA,IACAv1B,EAAA6K,OAAA0qB,EAAA,GAAAA,EAAA,IACAv1B,EAAA6K,OAAA0qB,EAAA,GAAAA,EAAA,IACAv1B,EAAA6K,OAAA0qB,EAAA,GAAAA,EAAA,IAEAv1B,EAAA4K,OAAA8K,EAAA,GAAAA,EAAA,IACA1V,EAAA6K,OAAA6K,EAAA,GAAAA,EAAA,IACA1V,EAAA6K,OAAA6K,EAAA,GAAAA,EAAA,IACA1V,EAAA6K,OAAA6K,EAAA,GAAAA,EAAA,IACA1V,EAAA0V,QAGA4Z,EAAAjK,OAAArlB,EAAAv9B,EAAA9H,EAAA,GAA6DqmD,EAAAyM,EAAAV,GAC7D/sB,EAAAuT,UACA8hB,EAAA5tF,KAAA8tF,GACAla,EAAA5zE,KAAAstE,MAGAgY,GACQgB,GAAehB,EAAA/sB,EAAArlC,EAAAqmD,GAEvBrmD,GACQopC,GAAc/D,EAAArlC,EACM,EAAiC,GAG7D+9C,EAAA30E,UAAAkyE,YAAA3zE,KAAAP,KAAAi+D,EAAA1+C,EAAAihC,IAUA+wC,EAAAvvF,UAAAyrF,cAAA,SAAAhoC,EAAA3Z,EAAA4kD,EAAAnD,GACA,IAAAmD,EACA,SAEA,IAAA5mC,GAAA,EACA,GAAAj2C,MAAA6I,QAAAg0E,GACA,QAAAtwF,EAAA,EAAAgX,EAAAs5E,EAAArtF,OAAyCjD,EAAAgX,IAAQhX,EACjD0pD,EAAkB2jC,GAClBF,EAAA9nC,EAAAirC,EAAAtwF,GAAA0rC,EACA9rC,KAAA2vF,wBAAA3vF,OAAA8pD,OAGAA,EAAgB2jC,GAChBF,EAAA9nC,EAAAirC,EAAA5kD,EACA9rC,KAAA2vF,wBAAA3vF,MAEA,OAAA8pD,GASAynC,EAAAvvF,UAAA4vF,iBAAA,SAAAj8D,EAAAglB,EAAApU,GACA,IAAAyX,EAAmEh+C,KAAAoyE,WACnE6f,EAAAt8D,EAAAu8D,eAAAl0C,GACA+zC,EAAA/zC,EAAAvhC,cACAouE,EAAAqG,GAAAlzC,EAAAm4B,iBACA,GAAA0U,GAAAoH,EAAAwB,uBAAA1B,EAAA,CACAE,EAAAwB,qBAAA1B,EACA,IAAA7f,EAAAv8C,EAAA+9D,iBACAtpF,EAAA8nE,EAAA,GACA76D,EAA2E2mC,EAAA6L,YAC3E1lB,EAAA9sB,EAAAygE,yBAAAvxC,GACArO,EAAAiM,EAAA6R,cAAA5rC,GACA6zD,EAAAtoC,EAAA5U,WAAAi9B,GACAjgB,EAAA1mB,EAAA2hE,iBAAA5uE,EAAAuwC,EAAApU,GACA03B,EAAAthB,OAAA/zB,MAAAmV,EAAA,GACAkgC,EAAAthB,OAAA13C,OAAA84B,EAAA,GAEA,IADA,IAAAo7C,EAAAh1C,EAAAs1C,mBAAAvH,EAAAlyE,KAAAm3E,WACA/2E,EAAA,EAAAgX,EAAAue,EAAA88D,SAAApvF,OAAgDjD,EAAAgX,IAAQhX,EAAA,CACxD,IAAAoyF,EAAA78D,EAAAy9C,QAAAz9C,EAAA88D,SAAAryF,IACA,GAAAoyF,EAAAz8D,YAAqCrD,GAASG,OAA9C,CAGA,IAAA8gE,EAAAh5C,EAAAziB,EACAwI,EAAwBoI,GAAc9oC,KAAAyxF,eAC9B3nD,GAAcpJ,EAAAizD,MACd5pD,GAAkBrJ,GAAAy4C,EAAA,IAAAA,EAAA,IAC1B,IAAAoU,EAAuDiF,EAAAW,eAAAn1C,EACvDroB,EAAAu8C,UAAA1/D,YACA+6E,EAAAjK,OAAArlB,EAAAv9B,EAAA,MAAoD,EAAAmqD,OAKpD0G,EA9aiC,CA+a/BrX,IAQFoX,GAA6B,oBAAAtzC,GAC7B,OAAAA,EAAAjS,YAA6BuxB,GAASG,aAUtC6zB,GAA6B,mBAAAlb,EAAAp4B,GAC7B,WAAaszC,GAAqF,IAInF,IAAAsC,GAAA,GC9bXC,GAAG,SAAA9yC,GACP,SAAA+yC,EAAAhnF,GACAA,EAAciK,EAAM,GAAGjK,GACvBA,EAAAo2C,WACAp2C,EAAAo2C,SAAyByM,MAEzB7iD,EAAAq2C,eACAr2C,EAAAq2C,aAA6BsY,MAG7B1a,EAAAxgD,KAAAP,KAAA8M,GAkBA,OAfAi0C,IAAA+yC,EAAApnF,UAAAq0C,GACA+yC,EAAA9xF,UAAAlB,OAAAY,OAAAq/C,KAAA/+C,WACA8xF,EAAA9xF,UAAA+I,YAAA+oF,EAEAA,EAAA9xF,UAAAwhD,eAAA,WACA,IAAA0gB,EAAA,IAAuByN,GAAiB3xE,MAOxC,OANAkkE,EAAA8K,uBAAA,CACMqH,GACA6D,GACA6W,GACA6C,KAEN1vB,GAGA4vB,EA5BO,CA6BLlqC,IAGamqC,GAAA,GCzEXC,GAAU,SAAAlnF,GAMd9M,KAAAglF,SAAAl4E,EAAA6wC,QAMA39C,KAAAmlF,gBAAAr4E,EAAAw1E,eAMAtiF,KAAA0uD,UAAA5hD,EAAA8rB,SAMA54B,KAAAolF,OAAAt4E,EAAAutB,OASA25D,GAAUhyF,UAAA+oC,MAAA,WACV,WAAaipD,GAAU,CACvBr2C,QAAA39C,KAAAk+C,aACA7jB,MAAAr6B,KAAAusE,WACA3zC,SAAA54B,KAAAs2C,cACAgsC,eAAAtiF,KAAAssE,uBASA0nB,GAAUhyF,UAAAk8C,WAAA,WACV,OAAAl+C,KAAAglF,UAQAgP,GAAUhyF,UAAAsqE,kBAAA,WACV,OAAAtsE,KAAAmlF,iBAQA6O,GAAUhyF,UAAAs0C,YAAA,WACV,OAAAt2C,KAAA0uD,WAQAslC,GAAUhyF,UAAAuqE,SAAA,WACV,OAAAvsE,KAAAolF,QASA4O,GAAUhyF,UAAAiyF,eAAA,WACV,UASAD,GAAUhyF,UAAAiqE,UAAA,WACV,OAASl2D,KASTi+E,GAAUhyF,UAAAy6D,SAAA,SAAA9hB,GACV,OAAS5kC,KAQTi+E,GAAUhyF,UAAAyjF,qBAAA,SAAA9qC,GACV,OAAS5kC,KAOTi+E,GAAUhyF,UAAA0rF,cAAA,WACV,OAAS33E,KAOTi+E,GAAUhyF,UAAAkyF,aAAA,WACV,OAASn+E,KAOTi+E,GAAUhyF,UAAAmyF,yBAAA,WACV,OAASp+E,KAQTi+E,GAAUhyF,UAAAoqE,UAAA,WACV,OAASr2D,KAQTi+E,GAAUhyF,UAAAykD,QAAA,WACV,OAAS1wC,KASTi+E,GAAUhyF,UAAA48C,WAAA,SAAAjB,GACV39C,KAAAglF,SAAArnC,GASAq2C,GAAUhyF,UAAAoyF,kBAAA,SAAA9R,GACVtiF,KAAAmlF,gBAAA7C,GASA0R,GAAUhyF,UAAA60C,YAAA,SAAAje,GACV54B,KAAA0uD,UAAA91B,GAQAo7D,GAAUhyF,UAAAqyF,SAAA,SAAAh6D,GACVr6B,KAAAolF,OAAA/qD,GASA25D,GAAUhyF,UAAAsyF,eAAA,SAAArV,KASV+U,GAAUhyF,UAAA4rF,kBAAA,SAAA9/E,EAAAshE,GACV,OAASr5D,KAOTi+E,GAAUhyF,UAAAqE,KAAA,WACR0P,KASFi+E,GAAUhyF,UAAA2rF,oBAAA,SAAA7/E,EAAAshE,GACRr5D,KAGa,IAAAw+E,GAAA,GC9MXC,GAAY,SAAAC,GAChB,SAAAC,EAAA5nF,GAIA,IAAAw1E,OAAAl1E,IAAAN,EAAAw1E,gBACAx1E,EAAAw1E,eAEAmS,EAAAl0F,KAAAP,KAAA,CACA29C,QAAA,EACA2kC,iBACA1pD,cAAAxrB,IAAAN,EAAA8rB,SAAA9rB,EAAA8rB,SAAA,EACAyB,MAAA,IAOAr6B,KAAA20F,WAAA,KAMA30F,KAAAi9D,QAAA,KAMAj9D,KAAA40F,oBAAA,KAMA50F,KAAA6+E,WAAAzxE,IAAAN,EAAAq8D,KAAAr8D,EAAAq8D,KAAA,KAMAnpE,KAAA60F,QAAA,MAMA70F,KAAA0wD,QAAA5jD,EAAAgoF,OAMA90F,KAAA+0F,aAAqC3nF,IAAAN,EAAA40B,OACrC50B,EAAA40B,OAAA50B,EAAAkoF,QAMAh1F,KAAAi1F,SAAAnoF,EAAAooF,QAMAl1F,KAAA2wD,YAAAvjD,IAAAN,EAAAitB,MAAAjtB,EAAAitB,MAAA,EAMA/5B,KAAAm1F,aAAA/nF,IAAAN,EAAAs8D,OAAAt8D,EAAAs8D,OAAA,KAMAppE,KAAA06D,QAAA,KAMA16D,KAAAo1F,MAAA,KAMAp1F,KAAAq1F,WAAA,KAMAr1F,KAAAs1F,uBAAA,KAMAt1F,KAAAu1F,cAAAzoF,EAAA0oF,aAEAx1F,KAAAu1D,QAAAv1D,KAAAu1F,eA0aA,OAtaAd,IAAAC,EAAAhoF,UAAA+nF,GACAC,EAAA1yF,UAAAlB,OAAAY,OAAA+yF,KAAAzyF,WACA0yF,EAAA1yF,UAAA+I,YAAA2pF,EAOAA,EAAA1yF,UAAA+oC,MAAA,WACA,IAAA96B,EAAA,IAAAykF,EAAA,CACAvrB,KAAAnpE,KAAAqpE,UAAArpE,KAAAqpE,UAAAt+B,aAAA39B,EACA0nF,OAAA90F,KAAAy1F,YACA/zD,OAAA1hC,KAAA01F,YACAR,QAAAl1F,KAAA21F,aACA57D,MAAA/5B,KAAAgxD,WACAoY,OAAAppE,KAAAspE,YAAAtpE,KAAAspE,YAAAv+B,aAAA39B,EACAwrB,SAAA54B,KAAAs2C,cACAgsC,eAAAtiF,KAAAssE,oBACAkpB,aAAAx1F,KAAAu1F,gBAIA,OAFAtlF,EAAA2uC,WAAA5+C,KAAAk+C,cACAjuC,EAAAokF,SAAAr0F,KAAAusE,YACAt8D,GAOAykF,EAAA1yF,UAAAiqE,UAAA,WACA,OAAAjsE,KAAA06D,SAQAg6B,EAAA1yF,UAAAgvD,SAAA,WACA,OAAAhxD,KAAA2wD,QAQA+jC,EAAA1yF,UAAAqnE,QAAA,WACA,OAAArpE,KAAA6+E,OAMA6V,EAAA1yF,UAAAyjF,qBAAA,SAAA9qC,GACA,OAAA36C,KAAA40F,qBAOAF,EAAA1yF,UAAAy6D,SAAA,SAAA9hB,GACA,OAAA36C,KAAAi9D,SAMAy3B,EAAA1yF,UAAAkyF,aAAA,WACA,OAAAl0F,KAAAq1F,YAMAX,EAAA1yF,UAAAmyF,yBAAA,WACA,OAAAn0F,KAAAs1F,wBAMAZ,EAAA1yF,UAAA0rF,cAAA,WACA,OAAW9wB,GAAU/pC,QAOrB6hE,EAAA1yF,UAAAoqE,UAAA,WACA,OAAApsE,KAAA60F,SAQAH,EAAA1yF,UAAAyzF,UAAA,WACA,OAAAz1F,KAAA0wD,SAQAgkC,EAAA1yF,UAAA0zF,UAAA,WACA,OAAA11F,KAAA+0F,SAQAL,EAAA1yF,UAAA2zF,WAAA,WACA,OAAA31F,KAAAi1F,UAOAP,EAAA1yF,UAAAykD,QAAA,WACA,OAAAzmD,KAAAo1F,OAQAV,EAAA1yF,UAAAsnE,UAAA,WACA,OAAAtpE,KAAAm1F,SAMAT,EAAA1yF,UAAA4rF,kBAAA,SAAA9/E,EAAAshE,KAOAslB,EAAA1yF,UAAAqE,KAAA,aAKAquF,EAAA1yF,UAAA2rF,oBAAA,SAAA7/E,EAAAshE,KAMAslB,EAAA1yF,UAAAuzD,QAAA,SAAAigC,GACA,IAAAnpB,EAMA5G,EALA+E,EAAA,GACAG,EAAA,GACAE,EAAA,EACAJ,EAAA,KACAC,EAAA,EAEAkY,EAAA,EAEA5iF,KAAAm1F,UACA1vB,EAAAzlE,KAAAm1F,QAAAhqB,WACA,OAAA1F,IACAA,EAAsBzF,IAEtByF,EAAoB1B,GAAW0B,GAC/Bmd,EAAA5iF,KAAAm1F,QAAA13D,gBACArwB,IAAAw1E,IACAA,EAAsBxiB,IAEtBqK,EAAAzqE,KAAAm1F,QAAA3pB,cACAd,EAAA1qE,KAAAm1F,QAAAzpB,oBACW7qD,KACX4pD,EAAA,KACAC,EAAA,GAEAC,EAAA3qE,KAAAm1F,QAAAvpB,mBACAx+D,IAAAu9D,IACAA,EAAmB7K,IAEnB0K,EAAAxqE,KAAAm1F,QAAA7pB,kBACAl+D,IAAAo9D,IACAA,EAAkB7K,IAElBkL,EAAA7qE,KAAAm1F,QAAAppB,qBACA3+D,IAAAy9D,IACAA,EAAqB9K,KAIrB,IAAAhiC,EAAA,GAAA/9B,KAAA+0F,QAAAnS,GAAA,EAGAgT,EAAA,CACAnwB,cACAmd,cACA7kD,OACAysC,UACAC,WACAC,iBACAC,WACAE,cAGA,QAAAz9D,IAAAooF,EAAA,CAEA,IAAAv3B,EAAoBzhB,GAAqBze,KACzC/9B,KAAAi9D,QAAAgB,EAAAthB,OAGA5e,EAAA/9B,KAAAi9D,QAAAr0C,MACAyjD,EAAAtuC,EAEA/9B,KAAA61F,MAAAD,EAAA33B,EAAA,KAEAj+D,KAAA81F,0BAAAF,OACK,CAEL73D,EAAAr7B,KAAA2tC,MAAAtS,GAEA,IACAg4D,EADAC,GAAAh2F,KAAA6+E,MAEAmX,IAEAD,EACA/1F,KAAAi2F,wBAAAr0F,KAAA5B,KAAA41F,IAGA,IAAA51C,EAAAhgD,KAAAk2F,cACAC,EAAAX,EAAApnC,IACApO,EAAAjiB,IAAA/9B,KAAA61F,MAAAj0F,KAAA5B,KAAA41F,GACAG,GAEA/1F,KAAAi9D,QAAAk5B,EAAA9zB,MACAriE,KAAA60F,QAAA,CAAAsB,EAAAl0B,QAAAk0B,EAAAj0B,SACAmK,EAAA8pB,EAAA9zB,MAAAz5C,MAEAotE,GACAh2F,KAAA40F,oBAAAuB,EAAAC,SACAp2F,KAAAs1F,uBACA,CAAAa,EAAAC,SAAAxtE,MAAAutE,EAAAC,SAAAnxF,UAEAjF,KAAA40F,oBAAA50F,KAAAi9D,QACAj9D,KAAAs1F,uBAAA,CAAAjpB,MAIArsE,KAAA06D,QAAA,CAAA38B,EAAA,EAAAA,EAAA,GACA/9B,KAAAo1F,MAAA,CAAAr3D,KACA/9B,KAAAq1F,WAAA,CAAAhpB,MAUAqoB,EAAA1yF,UAAA6zF,MAAA,SAAAD,EAAA33B,EAAA/5C,EAAAE,GACA,IAAAhkB,EAAAi2F,EAAAC,EAEAr4B,EAAA2E,aAAA,aAGA3E,EAAA/xB,UAAAhoB,EAAAE,GAEA65C,EAAAgL,YAEA,IAAA6rB,EAAA90F,KAAA0wD,QACA,GAAAokC,IAAA/wF,IACAk6D,EAAAiL,IACA0sB,EAAA73D,KAAA,EAAA63D,EAAA73D,KAAA,EACA/9B,KAAA+0F,QAAA,IAAAryF,KAAA+0B,IAAA,OACK,CACL,IAAAy9D,OAAA9nF,IAAApN,KAAAi1F,SAAAj1F,KAAAi1F,SACAj1F,KAAA+0F,QAIA,IAHAG,IAAAl1F,KAAA+0F,UACAD,GAAA,GAEA10F,EAAA,EAAiBA,GAAA00F,EAAa10F,IAC9Bi2F,EAAA,EAAAj2F,EAAAsC,KAAA+0B,GAAAq9D,EAAApyF,KAAA+0B,GAAA,EAAAz3B,KAAA2wD,OACA2lC,EAAAl2F,EAAA,MAAAJ,KAAA+0F,QAAAG,EACAj3B,EAAA6K,OAAA8sB,EAAA73D,KAAA,EAAAu4D,EAAA5zF,KAAAu3B,IAAAo8D,GACAT,EAAA73D,KAAA,EAAAu4D,EAAA5zF,KAAAy3B,IAAAk8D,IAKA,GAAAr2F,KAAA6+E,MAAA,CACA,IAAA7b,EAAAhjE,KAAA6+E,MAAA1T,WACA,OAAAnI,IACAA,EAAgBtD,IAEhBzB,EAAAuH,UAA0BzB,GAAWf,GACrC/E,EAAAkL,OAEAnpE,KAAAm1F,UACAl3B,EAAAwH,YAAAmwB,EAAAnwB,YACAxH,EAAA2M,UAAAgrB,EAAAhT,YACAgT,EAAAnrB,WACAxM,EAAAj9C,YAAA40E,EAAAnrB,UACAxM,EAAAyM,eAAAkrB,EAAAlrB,gBAEAzM,EAAAuM,QAAiDorB,EAAA,QACjD33B,EAAA0M,SAAmDirB,EAAA,SACnD33B,EAAA4M,WAAA+qB,EAAA/qB,WACA5M,EAAAmL,UAEAnL,EAAA8K,aAOA2rB,EAAA1yF,UAAA8zF,0BAAA,SAAAF,GAEA,GADA51F,KAAAs1F,uBAAA,CAAAM,EAAA73D,KAAA63D,EAAA73D,MACA/9B,KAAA6+E,MACA7+E,KAAA40F,oBAAA50F,KAAAi9D,YADA,CAOA,IAAAgB,EAAkBzhB,GAAqBo5C,EAAA73D,KAAA63D,EAAA73D,MACvC/9B,KAAA40F,oBAAA32B,EAAAthB,OAEA38C,KAAAi2F,wBAAAL,EAAA33B,EAAA,OAUAy2B,EAAA1yF,UAAAi0F,wBAAA,SAAAL,EAAA33B,EAAA/5C,EAAAE,GAEA65C,EAAA2E,aAAA,aAGA3E,EAAA/xB,UAAAhoB,EAAAE,GAEA65C,EAAAgL,YAEA,IAAA6rB,EAAA90F,KAAA0wD,QACA,GAAAokC,IAAA/wF,IACAk6D,EAAAiL,IACA0sB,EAAA73D,KAAA,EAAA63D,EAAA73D,KAAA,EACA/9B,KAAA+0F,QAAA,IAAAryF,KAAA+0B,IAAA,OACK,CACL,IAKAr3B,EAAAk2F,EAAAD,EALAnB,OAAA9nF,IAAApN,KAAAi1F,SAAAj1F,KAAAi1F,SACAj1F,KAAA+0F,QAKA,IAJAG,IAAAl1F,KAAA+0F,UACAD,GAAA,GAGA10F,EAAA,EAAiBA,GAAA00F,EAAa10F,IAC9Bi2F,EAAA,EAAAj2F,EAAAsC,KAAA+0B,GAAAq9D,EAAApyF,KAAA+0B,GAAA,EAAAz3B,KAAA2wD,OACA2lC,EAAAl2F,EAAA,MAAAJ,KAAA+0F,QAAAG,EACAj3B,EAAA6K,OAAA8sB,EAAA73D,KAAA,EAAAu4D,EAAA5zF,KAAAu3B,IAAAo8D,GACAT,EAAA73D,KAAA,EAAAu4D,EAAA5zF,KAAAy3B,IAAAk8D,IAIAp4B,EAAAuH,UAAwBzC,GAASrD,IACjCzB,EAAAkL,OACAnpE,KAAAm1F,UACAl3B,EAAAwH,YAAAmwB,EAAAnwB,YACAxH,EAAA2M,UAAAgrB,EAAAhT,YACAgT,EAAAnrB,WACAxM,EAAAj9C,YAAA40E,EAAAnrB,UACAxM,EAAAyM,eAAAkrB,EAAAlrB,gBAEAzM,EAAAmL,UAEAnL,EAAA8K,aAMA2rB,EAAA1yF,UAAAk0F,YAAA,WACA,IAAAK,EAAAv2F,KAAAm1F,QACAn1F,KAAAm1F,QAAAe,cAAA,IACAM,EAAAx2F,KAAA6+E,MACA7+E,KAAA6+E,MAAAqX,cAAA,IAEAO,GAAAz2F,KAAA20F,YACA4B,GAAAv2F,KAAA20F,WAAA,IACA6B,GAAAx2F,KAAA20F,WAAA,IACA30F,KAAA+0F,SAAA/0F,KAAA20F,WAAA,IACA30F,KAAAi1F,UAAAj1F,KAAA20F,WAAA,IACA30F,KAAA2wD,QAAA3wD,KAAA20F,WAAA,IACA30F,KAAA0wD,SAAA1wD,KAAA20F,WAAA,GAEA,GAAA8B,EAAA,CACA,IAAAC,EAAA,IAAAH,EAAAC,QACAppF,IAAApN,KAAA+0F,QAAA/0F,KAAA+0F,QAAAviF,WAAA,WACApF,IAAApN,KAAAi1F,SAAAj1F,KAAAi1F,SAAAziF,WAAA,WACApF,IAAApN,KAAA2wD,OAAA3wD,KAAA2wD,OAAAn+C,WAAA,WACApF,IAAApN,KAAA0wD,QAAA1wD,KAAA0wD,QAAAl+C,WAAA,KACAxS,KAAA20F,WAAA,CAAA+B,EAAAH,EAAAC,EACAx2F,KAAA+0F,QAAA/0F,KAAAi1F,SAAAj1F,KAAA2wD,OAAA3wD,KAAA0wD,SAGA,OAA6B1wD,KAAA20F,WAAA,IAG7BD,EAphBgB,CAqhBdH,IAGaoC,GAAA,GCrjBfC,GAAA,SAAAlC,GACA,SAAAkC,EAAAx4E,GAEA,IAAAtR,EAAAsR,GAAoD,GAEpDs2E,EAAAn0F,KAAAP,KAAA,CACA80F,OAAA/wF,IACAolE,KAAAr8D,EAAAq8D,KACAznC,OAAA50B,EAAA40B,OACA0nC,OAAAt8D,EAAAs8D,OACAosB,aAAA1oF,EAAA0oF,eAsCA,OAjCAd,IAAAkC,EAAAlqF,UAAAgoF,GACAkC,EAAA50F,UAAAlB,OAAAY,OAAAgzF,KAAA1yF,WACA40F,EAAA50F,UAAA+I,YAAA6rF,EAQAA,EAAA50F,UAAA+oC,MAAA,WACA,IAAA96B,EAAA,IAAA2mF,EAAA,CACAztB,KAAAnpE,KAAAqpE,UAAArpE,KAAAqpE,UAAAt+B,aAAA39B,EACAg8D,OAAAppE,KAAAspE,YAAAtpE,KAAAspE,YAAAv+B,aAAA39B,EACAs0B,OAAA1hC,KAAA01F,YACAF,aAAAx1F,KAAAu1F,gBAIA,OAFAtlF,EAAA2uC,WAAA5+C,KAAAk+C,cACAjuC,EAAAokF,SAAAr0F,KAAAusE,YACAt8D,GASA2mF,EAAA50F,UAAA60F,UAAA,SAAAn1D,GACA1hC,KAAA+0F,QAAArzD,EACA1hC,KAAAu1D,QAAAv1D,KAAAu1F,gBAGAqB,EAhDA,CAiDED,IAGaG,GAAA,GCvDfC,GAAA,SAAA34E,GAEA,IAAAtR,EAAAsR,GAAA,GAMApe,KAAAg3F,YAAA5pF,IAAAN,EAAAk2D,MAAAl2D,EAAAk2D,MAAA,KAMAhjE,KAAAi3F,eAAA7pF,GAQA2pF,GAAA/0F,UAAA+oC,MAAA,WACA,IAAAi4B,EAAAhjE,KAAAmrE,WACA,WAAA4rB,GAAA,CACA/zB,MAAAnvD,MAAA6I,QAAAsmD,KAAAx8D,QAAAw8D,QAAA51D,KASA2pF,GAAA/0F,UAAAmpE,SAAA,WACA,OAAAnrE,KAAAg3F,QASAD,GAAA/0F,UAAAk1F,SAAA,SAAAl0B,GACAhjE,KAAAg3F,OAAAh0B,EACAhjE,KAAAi3F,eAAA7pF,GAMA2pF,GAAA/0F,UAAAk0F,YAAA,WACA,QAAA9oF,IAAApN,KAAAi3F,UAAA,CACA,IAAAj0B,EAAAhjE,KAAAg3F,OACAh0B,EACAnvD,MAAA6I,QAAAsmD,IAAA,iBAAAA,EACAhjE,KAAAi3F,UAAA,IAA+Bl0B,GAAuD,GAEtF/iE,KAAAi3F,UAAyBhhF,EAAMjW,KAAAg3F,QAG/Bh3F,KAAAi3F,UAAA,KAIA,OAAAj3F,KAAAi3F,WAGe,IAAAE,GAAA,GC3DfC,GAAA,SAAAh5E,GAEA,IAAAtR,EAAAsR,GAAA,GAMApe,KAAAg3F,YAAA5pF,IAAAN,EAAAk2D,MAAAl2D,EAAAk2D,MAAA,KAMAhjE,KAAAq3F,SAAAvqF,EAAA09D,QAMAxqE,KAAAs3F,eAAAlqF,IAAAN,EAAA29D,SAAA39D,EAAA29D,SAAA,KAMAzqE,KAAAu3F,gBAAAzqF,EAAA49D,eAMA1qE,KAAAw3F,UAAA1qF,EAAA69D,SAMA3qE,KAAAy3F,YAAA3qF,EAAA+9D,WAMA7qE,KAAAqlF,OAAAv4E,EAAA8b,MAMA5oB,KAAAi3F,eAAA7pF,GAQAgqF,GAAAp1F,UAAA+oC,MAAA,WACA,IAAAi4B,EAAAhjE,KAAAmrE,WACA,WAAAisB,GAAA,CACAp0B,MAAAnvD,MAAA6I,QAAAsmD,KAAAx8D,QAAAw8D,QAAA51D,EACAo9D,QAAAxqE,KAAAsrE,aACAb,SAAAzqE,KAAAwrE,cAAAxrE,KAAAwrE,cAAAhlE,aAAA4G,EACAs9D,eAAA1qE,KAAA0rE,oBACAf,SAAA3qE,KAAA4rE,cACAf,WAAA7qE,KAAA+rE,gBACAnjD,MAAA5oB,KAAAy9B,cASA25D,GAAAp1F,UAAAmpE,SAAA,WACA,OAAAnrE,KAAAg3F,QAQAI,GAAAp1F,UAAAspE,WAAA,WACA,OAAAtrE,KAAAq3F,UAQAD,GAAAp1F,UAAAwpE,YAAA,WACA,OAAAxrE,KAAAs3F,WAQAF,GAAAp1F,UAAA0pE,kBAAA,WACA,OAAA1rE,KAAAu3F,iBAQAH,GAAAp1F,UAAA4pE,YAAA,WACA,OAAA5rE,KAAAw3F,WAQAJ,GAAAp1F,UAAA+pE,cAAA,WACA,OAAA/rE,KAAAy3F,aAQAL,GAAAp1F,UAAAy7B,SAAA,WACA,OAAAz9B,KAAAqlF,QASA+R,GAAAp1F,UAAAk1F,SAAA,SAAAl0B,GACAhjE,KAAAg3F,OAAAh0B,EACAhjE,KAAAi3F,eAAA7pF,GASAgqF,GAAAp1F,UAAA01F,WAAA,SAAAltB,GACAxqE,KAAAq3F,SAAA7sB,EACAxqE,KAAAi3F,eAAA7pF,GAeAgqF,GAAAp1F,UAAAgf,YAAA,SAAAypD,GACAzqE,KAAAs3F,UAAA7sB,EACAzqE,KAAAi3F,eAAA7pF,GASAgqF,GAAAp1F,UAAA21F,kBAAA,SAAAjtB,GACA1qE,KAAAu3F,gBAAA7sB,EACA1qE,KAAAi3F,eAAA7pF,GASAgqF,GAAAp1F,UAAA41F,YAAA,SAAAjtB,GACA3qE,KAAAw3F,UAAA7sB,EACA3qE,KAAAi3F,eAAA7pF,GASAgqF,GAAAp1F,UAAA61F,cAAA,SAAAhtB,GACA7qE,KAAAy3F,YAAA5sB,EACA7qE,KAAAi3F,eAAA7pF,GASAgqF,GAAAp1F,UAAA81F,SAAA,SAAAlvE,GACA5oB,KAAAqlF,OAAAz8D,EACA5oB,KAAAi3F,eAAA7pF,GAMAgqF,GAAAp1F,UAAAk0F,YAAA,WA2BA,YA1BA9oF,IAAApN,KAAAi3F,YACAj3F,KAAAi3F,UAAA,IACAj3F,KAAAg3F,OACA,kBAAAh3F,KAAAg3F,OACAh3F,KAAAi3F,WAAAj3F,KAAAg3F,OAEAh3F,KAAAi3F,WAA0BhhF,EAAMjW,KAAAg3F,QAGhCh3F,KAAAi3F,WAAA,IAEAj3F,KAAAi3F,WAAA,UACA7pF,IAAApN,KAAAq3F,SACAr3F,KAAAq3F,SAAA7kF,WAAA,UACAxS,KAAAs3F,UACAt3F,KAAAs3F,UAAA9kF,WAAA,eACApF,IAAApN,KAAAu3F,gBACAv3F,KAAAu3F,gBAAA,eACAnqF,IAAApN,KAAAw3F,UACAx3F,KAAAw3F,UAAA,eACApqF,IAAApN,KAAAy3F,YACAz3F,KAAAy3F,YAAAjlF,WAAA,eACApF,IAAApN,KAAAqlF,OACArlF,KAAAqlF,OAAA7yE,WAAA,MAGAxS,KAAAi3F,WAGe,IAAAc,GAAA,GCnIfC,GAAA,SAAA55E,GAEA,IAAAtR,EAAAsR,GAAA,GAMApe,KAAAo1D,UAAA,KAMAp1D,KAAAi4F,kBAAAC,QAEA9qF,IAAAN,EAAAmuC,UACAj7C,KAAAm4F,YAAArrF,EAAAmuC,UAOAj7C,KAAA6+E,WAAAzxE,IAAAN,EAAAq8D,KAAAr8D,EAAAq8D,KAAA,KAMAnpE,KAAA4mE,YAAAx5D,IAAAN,EAAAu1D,MAAAv1D,EAAAu1D,MAAA,KAMAriE,KAAAujD,eAAAn2C,IAAAN,EAAAo3D,SAAAp3D,EAAAo3D,SAAA,KAMAlkE,KAAAm1F,aAAA/nF,IAAAN,EAAAs8D,OAAAt8D,EAAAs8D,OAAA,KAMAppE,KAAAunE,WAAAn6D,IAAAN,EAAAU,KAAAV,EAAAU,KAAA,KAMAxN,KAAAo4F,QAAAtrF,EAAA+wC,QAkMO,SAAAw6C,GAAAvtF,GACP,IAAA6lF,EAEA,uBAAA7lF,EACA6lF,EAAA7lF,MACG,CAIH,IAAA4lF,EACA,GAAA78E,MAAA6I,QAAA5R,GACA4lF,EAAA5lF,MACK,CACCkoB,GAA2B,sBAAAsrB,UACjC,IACA,IAAAruC,EAAmC,EACnCygF,EAAA,CAAAzgF,GAEA0gF,EAAA,WACA,OAAAD,GAGA,OAAAC,EA/MAqH,GAAAh2F,UAAA+oC,MAAA,WACA,IAAAkQ,EAAAj7C,KAAA81D,cAIA,OAHA7a,GAAA,kBAAAA,IACAA,EAAgE,EAAAlQ,SAEhE,IAAAitD,GAAA,CACA/8C,WACAkuB,KAAAnpE,KAAAqpE,UAAArpE,KAAAqpE,UAAAt+B,aAAA39B,EACAi1D,MAAAriE,KAAAy8D,WAAAz8D,KAAAy8D,WAAA1xB,aAAA39B,EACAg8D,OAAAppE,KAAAspE,YAAAtpE,KAAAspE,YAAAv+B,aAAA39B,EACAI,KAAAxN,KAAAupE,UAAAvpE,KAAAupE,UAAAx+B,aAAA39B,EACAywC,OAAA79C,KAAAs+C,eAUA05C,GAAAh2F,UAAAwkD,YAAA,WACA,OAAAxmD,KAAAujD,WASAy0C,GAAAh2F,UAAAs2F,YAAA,SAAAp0B,GACAlkE,KAAAujD,UAAA2gB,GAUA8zB,GAAAh2F,UAAA8zD,YAAA,WACA,OAAA91D,KAAAo1D,WASA4iC,GAAAh2F,UAAAwnE,oBAAA,WACA,OAAAxpE,KAAAi4F,mBAQAD,GAAAh2F,UAAAqnE,QAAA,WACA,OAAArpE,KAAA6+E,OAQAmZ,GAAAh2F,UAAAu2F,QAAA,SAAApvB,GACAnpE,KAAA6+E,MAAA1V,GAQA6uB,GAAAh2F,UAAAy6D,SAAA,WACA,OAAAz8D,KAAA4mE,QAQAoxB,GAAAh2F,UAAAw2F,SAAA,SAAAn2B,GACAriE,KAAA4mE,OAAAvE,GAQA21B,GAAAh2F,UAAAsnE,UAAA,WACA,OAAAtpE,KAAAm1F,SAQA6C,GAAAh2F,UAAAy2F,UAAA,SAAArvB,GACAppE,KAAAm1F,QAAA/rB,GAQA4uB,GAAAh2F,UAAAunE,QAAA,WACA,OAAAvpE,KAAAunE,OAQAywB,GAAAh2F,UAAA02F,QAAA,SAAAlrF,GACAxN,KAAAunE,MAAA/5D,GAQAwqF,GAAAh2F,UAAAs8C,UAAA,WACA,OAAAt+C,KAAAo4F,SAWAJ,GAAAh2F,UAAAm2F,YAAA,SAAAl9C,GACA,oBAAAA,EACAj7C,KAAAi4F,kBAAAh9C,EACG,kBAAAA,EACHj7C,KAAAi4F,kBAAA,SAAAxyC,GACA,OACyDA,EAAAxkD,IAAAg6C,IAGtDA,OAEA7tC,IAAA6tC,IACHj7C,KAAAi4F,kBAAA,WACA,WAHAj4F,KAAAi4F,kBAAAC,GAQAl4F,KAAAo1D,UAAAna,GASA+8C,GAAAh2F,UAAA88C,UAAA,SAAAjB,GACA79C,KAAAo4F,QAAAv6C,GAyCA,IAAA86C,GAAA,KAQO,SAAAC,GAAAnzC,EAAAvtB,GAMP,IAAAygE,GAAA,CACA,IAAAxvB,EAAA,IAAmBguB,GAAI,CACvBn0B,MAAA,0BAEAoG,EAAA,IAAqB2uB,GAAM,CAC3B/0B,MAAA,UACAp6C,MAAA,OAEA+vE,GAAA,CACA,IAAAX,GAAA,CACA31B,MAAA,IAAmBy0B,GAAW,CAC9B3tB,OACAC,SACA1nC,OAAA,IAEAynC,OACAC,YAIA,OAAAuvB,GAgFA,SAAAT,GAAAzyC,GACA,OAAAA,EAAAqQ,cAGe,IAAA+iC,GAAA,GCpeXC,GAAQ,CACZC,aAAA,eAaIC,GAAW,SAAAjuC,GACf,SAAAkuC,EAAA76E,GACA,IAAAtR,EAAAsR,GACuC,GAEvCohC,EAAsBzoC,EAAM,GAAGjK,UAE/B0yC,EAAAvvC,aACAuvC,EAAA05C,oBACA15C,EAAAswC,4BACAtwC,EAAAwwC,uBACAjlC,EAAAxqD,KAAAP,KAAAw/C,GAMAx/C,KAAAm5F,gBAAA/rF,IAAAN,EAAA29E,WAAA39E,EAAA29E,UAMAzqF,KAAAqqF,mBAAAj9E,IAAAN,EAAAosF,aACApsF,EAAAosF,aAAA,IAOAl5F,KAAAo5F,OAAA,KAOAp5F,KAAAq5F,oBAAAjsF,EAEApN,KAAAokE,SAAAt3D,EAAAmD,OAMAjQ,KAAAs5F,2BAAAlsF,IAAAN,EAAAgjF,sBACAhjF,EAAAgjF,qBAMA9vF,KAAAu5F,6BAAAnsF,IAAAN,EAAAkjF,wBACAljF,EAAAkjF,uBAMAhwF,KAAAw5F,YAAA1sF,EAAA4kF,YAA6C/zB,GAAgBD,OAO7D19D,KAAAuT,KAAgB+pD,GAASI,OA2GzB,OAvGA3S,IAAAkuC,EAAAvsF,UAAAq+C,GACAkuC,EAAAj3F,UAAAlB,OAAAY,OAAAqpD,KAAA/oD,WACAi3F,EAAAj3F,UAAA+I,YAAAkuF,EAKAA,EAAAj3F,UAAAusF,aAAA,WACA,OAAAvuF,KAAAm5F,YAMAF,EAAAj3F,UAAAy3F,aAAA,SAAAhP,GACAzqF,KAAAm5F,WAAA1O,GAMAwO,EAAAj3F,UAAAquF,gBAAA,WACA,OAAArwF,KAAAqqF,eAOA4O,EAAAj3F,UAAAuuF,eAAA,WACA,OACmEvwF,KAAAiB,IAAc63F,GAAQC,eAWzFE,EAAAj3F,UAAA03F,SAAA,WACA,OAAA15F,KAAAo5F,QAQAH,EAAAj3F,UAAA4uF,iBAAA,WACA,OAAA5wF,KAAAq5F,gBAOAJ,EAAAj3F,UAAA+tF,wBAAA,WACA,OAAA/vF,KAAAs5F,uBAOAL,EAAAj3F,UAAAiuF,0BAAA,WACA,OAAAjwF,KAAAu5F,yBAOAN,EAAAj3F,UAAA23F,eAAA,SAAA3H,GACAhyF,KAAAyR,IAAaqnF,GAAQC,aAAA/G,IAarBiH,EAAAj3F,UAAAoiE,SAAA,SAAAn0D,GACAjQ,KAAAo5F,YAAAhsF,IAAA6C,IAAgD2oF,GAChD54F,KAAAq5F,eAAA,OAAAppF,OACA7C,EAAkBirF,GAAer4F,KAAAo5F,QACjCp5F,KAAAwc,WAMAy8E,EAAAj3F,UAAAm0E,cAAA,WACA,OAAAn2E,KAAAw5F,aAGAP,EA9Ke,CA+KbztC,IASFwtC,GAAWh3F,UAAA6nD,UAGI,IAAA+vC,GAAA,GC9PAC,GAAA,CACfC,aAAA,cACAC,KAAA,OACApf,KAAA,OACAqf,IAAA,OCqCO,SAAAC,GAAAC,EAAA13F,EAAA23F,EAAAC,GACP,gBAOAviE,EAAAK,EAAAqO,GACA,IAAA8zD,EAAA,IAAAC,eACAD,EAAAE,KAAA,MACA,oBAAAL,IAAAriE,EAAAK,EAAAqO,GAAA2zD,GACA,GACA13F,EAAAupC,WAA8B8tD,GAAUC,eACxCO,EAAAG,aAAA,eAMAH,EAAAI,OAAA,SAAAngF,GAEA,IAAA+/E,EAAAK,QAAAL,EAAAK,QAAA,KAAAL,EAAAK,OAAA,KACA,IAEArjF,EAFA9D,EAAA/Q,EAAAupC,UAGAx4B,GAAsBsmF,GAAUE,MAAAxmF,GAAiBsmF,GAAUlf,KAC3DtjE,EAAAgjF,EAAAM,aACWpnF,GAAkBsmF,GAAUG,KACvC3iF,EAAAgjF,EAAAO,YACAvjF,IACAA,GAAA,IAAAwjF,WAAAC,gBAAAT,EAAAM,aAAA,qBAEWpnF,GAAkBsmF,GAAUC,eACvCziF,EAA4CgjF,EAAA,UAE5ChjF,EACA8iF,EAAA55F,KAAAP,KAAAwC,EAAAu4F,aAAA1jF,EACA,CAAe2jF,kBAAAz0D,IACf/jC,EAAAy4F,eAAA5jF,GAAA7U,EAAA04F,iBAEAd,EAAA75F,KAAAP,WAGAo6F,EAAA75F,KAAAP,OAEO4B,KAAA5B,MAIPq6F,EAAAc,QAAA,WACAf,EAAA75F,KAAAP,OACO4B,KAAA5B,MACPq6F,EAAAe,QAeO,SAASC,GAAGnB,EAAA13F,GACnB,OAAAy3F,GAAAC,EAAA13F,EAOA,SAAAgjD,EAAA81C,GACA,IAAAC,EAAsC,KACtC,oBAAAA,EAAAC,aACqD,EAAAA,YAAAh2C,IAErB/rC,GCrHzB,SAASgiF,GAAG5jE,EAAAK,GACnB,SAAAn0B,mBCoCA,IAAI23F,GAAM,SAAA1+E,GACV,SAAA2+E,EAAA7uF,GAEAkQ,EAAAzc,KAAAP,MAMAA,KAAA00C,YAAuBtN,GAAat6B,EAAAy5B,YAMpCvmC,KAAA47F,cAAAC,GAAA/uF,EAAAqgD,cAMAntD,KAAA87F,8BAAA1uF,IAAAN,EAAAivF,yBACAjvF,EAAAivF,wBAOA/7F,KAAA8pD,SAAA,EAMA9pD,KAAA89C,YAAA1wC,IAAAN,EAAAgpB,MACAhpB,EAAAgpB,MAAsBmpB,GAAWE,MAMjCn/C,KAAAg8F,YAAA5uF,IAAAN,EAAAmvF,OAAAnvF,EAAAmvF,MAsFA,OAlFAj/E,IAAA2+E,EAAAjvF,UAAAsQ,GACA2+E,EAAA35F,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACA25F,EAAA35F,UAAA+I,YAAA4wF,EAMAA,EAAA35F,UAAAkrD,gBAAA,WACA,OAAAltD,KAAA47F,eAMAD,EAAA35F,UAAAorD,2BAAA,WACA,OAAAptD,KAAA87F,0BAQAH,EAAA35F,UAAAm4C,cAAA,WACA,OAAAn6C,KAAA00C,aAOAinD,EAAA35F,UAAAo4C,eAAA,WACA,OAAWrkC,KAQX4lF,EAAA35F,UAAA+zB,SAAA,WACA,OAAA/1B,KAAA89C,QAMA69C,EAAA35F,UAAA8tE,SAAA,WACA,OAAA9vE,KAAAg8F,QAOAL,EAAA35F,UAAAk6F,QAAA,WACAl8F,KAAAwc,WAUAm/E,EAAA35F,UAAAm6F,gBAAA,SAAAhvC,GACAntD,KAAA47F,cAAAC,GAAA1uC,GACAntD,KAAAwc,WAQAm/E,EAAA35F,UAAA21E,SAAA,SAAA7hD,GACA91B,KAAA89C,OAAAhoB,EACA91B,KAAAwc,WAGAm/E,EAhIU,CAiIR/9E,GAQF,SAAAi+E,GAAAO,GACA,OAAAA,EAGAvoF,MAAA6I,QAAA0/E,GACA,SAAA78E,GACA,OAAA68E,GAIA,oBAAAA,EACAA,EAGA,SAAA78E,GACA,OAAA68E,IAbA,KAkBe,IAAAC,GAAA,GCvMAC,GAAA,CAMfC,WAAA,aAOAC,cAAA,gBAOA1hF,MAAA,QAQA2hF,cAAA,iBCXIC,GAAK,SAAAC,GAKT38F,KAAA48F,OAAgBpO,KAAKmO,OAAAvvF,GAQrBpN,KAAA68F,OAAA,IASAH,GAAK16F,UAAAsE,OAAA,SAAAuxB,EAAAx2B,GAEL,IAAA4B,EAAA,CACAa,KAAA+zB,EAAA,GACA7zB,KAAA6zB,EAAA,GACA5zB,KAAA4zB,EAAA,GACA3zB,KAAA2zB,EAAA,GACAx2B,SAGArB,KAAA48F,OAAAt2F,OAAArD,GACAjD,KAAA68F,OAAc5mF,EAAM5U,IAAA4B,GASpBy5F,GAAK16F,UAAAqE,KAAA,SAAAy2F,EAAAtlF,GAEL,IADA,IAAAtU,EAAA,IAAA2Q,MAAA2D,EAAAnU,QACAjD,EAAA,EAAAC,EAAAmX,EAAAnU,OAAoCjD,EAAAC,EAAOD,IAAA,CAC3C,IAAAy3B,EAAAilE,EAAA18F,GACAiB,EAAAmW,EAAApX,GAGA6C,EAAA,CACAa,KAAA+zB,EAAA,GACA7zB,KAAA6zB,EAAA,GACA5zB,KAAA4zB,EAAA,GACA3zB,KAAA2zB,EAAA,GACAx2B,SAEA6B,EAAA9C,GAAA6C,EACAjD,KAAA68F,OAAgB5mF,EAAM5U,IAAA4B,EAEtBjD,KAAA48F,OAAAv2F,KAAAnD,IASAw5F,GAAK16F,UAAA4E,OAAA,SAAAvF,GACL,IAAAm3E,EAAYviE,EAAM5U,GAIlB4B,EAAAjD,KAAA68F,OAAArkB,GAEA,cADAx4E,KAAA68F,OAAArkB,GACA,OAAAx4E,KAAA48F,OAAAh2F,OAAA3D,IASAy5F,GAAK16F,UAAA6uD,OAAA,SAAAh5B,EAAAx2B,GACL,IAAA4B,EAAAjD,KAAA68F,OAAyB5mF,EAAM5U,IAC/B0E,EAAA,CAAA9C,EAAAa,KAAAb,EAAAe,KAAAf,EAAAgB,KAAAhB,EAAAiB,MACO44B,GAAM/2B,EAAA8xB,KACb73B,KAAA4G,OAAAvF,GACArB,KAAAsG,OAAAuxB,EAAAx2B,KASAq7F,GAAK16F,UAAA+6F,OAAA,WACL,IAAA75F,EAAAlD,KAAA48F,OAAAj3F,MACA,OAAAzC,EAAAoR,IAAA,SAAArR,GACA,OAAAA,EAAA5B,SAUAq7F,GAAK16F,UAAAg7F,YAAA,SAAAnlE,GAEL,IAAA9xB,EAAA,CACAjC,KAAA+zB,EAAA,GACA7zB,KAAA6zB,EAAA,GACA5zB,KAAA4zB,EAAA,GACA3zB,KAAA2zB,EAAA,IAEA30B,EAAAlD,KAAA48F,OAAA92F,OAAAC,GACA,OAAA7C,EAAAoR,IAAA,SAAArR,GACA,OAAAA,EAAA5B,SAcAq7F,GAAK16F,UAAA4M,QAAA,SAAA+D,EAAAwF,GACL,OAAAnY,KAAAi9F,SAAAj9F,KAAA+8F,SAAApqF,EAAAwF,IAYAukF,GAAK16F,UAAAk7F,gBAAA,SAAArlE,EAAAllB,EAAAwF,GACL,OAAAnY,KAAAi9F,SAAAj9F,KAAAg9F,YAAAnlE,GAAAllB,EAAAwF,IAYAukF,GAAK16F,UAAAi7F,SAAA,SAAAzlF,EAAA7E,EAAAwF,GAEL,IADA,IAAAnS,EACA5F,EAAA,EAAAC,EAAAmX,EAAAnU,OAAoCjD,EAAAC,EAAOD,IAE3C,GADA4F,EAAA2M,EAAApS,KAAA4X,EAAAX,EAAApX,IACA4F,EACA,OAAAA,EAGA,OAAAA,GAOA02F,GAAK16F,UAAAuyB,QAAA,WACL,OAAS9c,EAAOzX,KAAA68F,SAOhBH,GAAK16F,UAAAe,MAAA,WACL/C,KAAA48F,OAAA75F,QACA/C,KAAA68F,OAAA,IAQAH,GAAK16F,UAAA0hC,UAAA,SAAA/H,GACL,IAAA91B,EAAA7F,KAAA48F,OAAAt1F,SACA,OAAS+0B,GAAcx2B,EAAA/B,KAAA+B,EAAA7B,KAAA6B,EAAA5B,KAAA4B,EAAA3B,KAAAy3B,IAOvB+gE,GAAK16F,UAAAm7F,OAAA,SAAA/6F,GAEL,QAAAhC,KADAJ,KAAA48F,OAAAv2F,KAAAjE,EAAAw6F,OAAAj3F,OACAvD,EAAAy6F,OACA78F,KAAA68F,OAAAz8F,GAAAgC,EAAAy6F,OAAAz8F,IAKe,IAAAg9F,GAAA,GCrMRC,GAAA,SAAA3jF,GACP,SAAA2jF,EAAA9pF,EAAA+pF,GAEA5jF,EAAAnZ,KAAAP,KAAAuT,GAOAvT,KAAAylD,QAAA63C,EAQA,OAJA5jF,IAAA2jF,EAAA3wF,UAAAgN,GACA2jF,EAAAr7F,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACAq7F,EAAAr7F,UAAA+I,YAAAsyF,EAEAA,EAlBO,CAmBLvjF,GAsGEyjF,GAAY,SAAA5B,GAChB,SAAA6B,EAAAp/E,GAEA,IAAAtR,EAAAsR,GAAA,GAEAu9E,EAAAp7F,KAAAP,KAAA,CACAmtD,aAAArgD,EAAAqgD,aACA5mB,gBAAAn5B,EACA0oB,MAAampB,GAAWE,MACxB88C,WAAA7uF,IAAAN,EAAAmvF,OAAAnvF,EAAAmvF,QAOAj8F,KAAAg9D,QAAmBvjD,EAMnBzZ,KAAAy9F,QAAA3wF,EAAAtK,OAMAxC,KAAAmqF,eAAA/8E,GAAAN,EAAA6wE,UAAA7wE,EAAA6wE,SAMA39E,KAAA09F,KAAA5wF,EAAAotF,SAEA9sF,IAAAN,EAAA6wF,OACA39F,KAAAg9D,QAAAlwD,EAAA6wF,YACKvwF,IAAApN,KAAA09F,OACC1qE,GAAMhzB,KAAAy9F,QAAA,GAEZz9F,KAAAg9D,QAAqBq+B,GAAGr7F,KAAA09F,KAA8D19F,KAAA,UAOtFA,KAAA49F,eAAAxwF,IAAAN,EAAA+wF,SAAA/wF,EAAA+wF,SAAyEpC,GAEzE,IA+CAqC,EAAAt4C,EA/CAu4C,OACA3wF,IAAAN,EAAAixF,iBAAAjxF,EAAAixF,gBAMA/9F,KAAAg+F,eAAAD,EAAA,IAAgDX,GAAK,KAMrDp9F,KAAAi+F,oBAAA,IAAmCb,GAMnCp9F,KAAAk+F,sBAAA,GAOAl+F,KAAAm+F,SAAA,GAOAn+F,KAAAo+F,cAAA,GAMAp+F,KAAAq+F,mBAAA,GAMAr+F,KAAAs+F,oBAAA,KAGAzqF,MAAA6I,QAAA5P,EAAA04C,UACAA,EAAA14C,EAAA04C,SACK14C,EAAA04C,WACLs4C,EAAAhxF,EAAA04C,SACAA,EAAAs4C,EAAAj/E,YAEAk/E,QAAA3wF,IAAA0wF,IACAA,EAAA,IAAuB1+E,EAAUomC,SAEjCp4C,IAAAo4C,GACAxlD,KAAAu+F,oBAAA/4C,QAEAp4C,IAAA0wF,GACA99F,KAAAw+F,wBAAAV,GAmtBA,OA9sBAnC,IAAA6B,EAAA9wF,UAAAivF,GACA6B,EAAAx7F,UAAAlB,OAAAY,OAAAi6F,KAAA35F,WACAw7F,EAAAx7F,UAAA+I,YAAAyyF,EAWAA,EAAAx7F,UAAAy8F,WAAA,SAAAh5C,GACAzlD,KAAA0+F,mBAAAj5C,GACAzlD,KAAAwc,WASAghF,EAAAx7F,UAAA08F,mBAAA,SAAAj5C,GACA,IAAAk5C,EAAqB1oF,EAAMwvC,GAE3B,GAAAzlD,KAAA4+F,YAAAD,EAAAl5C,GAAA,CAIAzlD,KAAA6+F,mBAAAF,EAAAl5C,GAEA,IAAAxK,EAAAwK,EAAAqQ,cACA,GAAA7a,EAAA,CACA,IAAApjB,EAAAojB,EAAAvX,YACA1jC,KAAAg+F,gBACAh+F,KAAAg+F,eAAA13F,OAAAuxB,EAAA4tB,QAGAzlD,KAAAk+F,sBAAAS,GAAAl5C,EAGAzlD,KAAAqa,cACA,IAAAgjF,GAA4Bf,GAAeC,WAAA92C,MAS3C+3C,EAAAx7F,UAAA68F,mBAAA,SAAAF,EAAAl5C,GACAzlD,KAAAq+F,mBAAAM,GAAA,CACMrrF,EAAMmyC,EAAU7qC,EAASC,OAC/B7a,KAAA8+F,qBAAA9+F,MACMsT,EAAMmyC,EAAU5uC,EAAeC,eACrC9W,KAAA8+F,qBAAA9+F,QAYAw9F,EAAAx7F,UAAA48F,YAAA,SAAAD,EAAAl5C,GACA,IAAAs5C,GAAA,EACA/+C,EAAAyF,EAAAhB,QAYA,YAXAr3C,IAAA4yC,EACAA,EAAAxtC,aAAAxS,KAAAm+F,SAGAY,GAAA,EAFA/+F,KAAAm+F,SAAAn+C,EAAAxtC,YAAAizC,GAKMzyB,KAAM2rE,KAAA3+F,KAAAo+F,eACZ,IACAp+F,KAAAo+F,cAAAO,GAAAl5C,GAEAs5C,GASAvB,EAAAx7F,UAAAw5F,YAAA,SAAAh2C,GACAxlD,KAAAu+F,oBAAA/4C,GACAxlD,KAAAwc,WASAghF,EAAAx7F,UAAAu8F,oBAAA,SAAA/4C,GAKA,IAJA,IAAAs3C,EAAA,GACAkC,EAAA,GACAC,EAAA,GAEA7+F,EAAA,EAAAiD,EAAAmiD,EAAAniD,OAA6CjD,EAAAiD,EAAYjD,IAAA,CACzD,IAAAqlD,EAAAD,EAAAplD,GACAu+F,EAAuB1oF,EAAMwvC,GAC7BzlD,KAAA4+F,YAAAD,EAAAl5C,IACAu5C,EAAAt5F,KAAA+/C,GAIA,QAAAz3B,EAAA,EAAAkxE,EAAAF,EAAA37F,OAAoD2qB,EAAAkxE,EAAgBlxE,IAAA,CACpE,IAAAmxE,EAAAH,EAAAhxE,GACAoxE,EAAyBnpF,EAAMkpF,GAC/Bn/F,KAAA6+F,mBAAAO,EAAAD,GAEA,IAAAlkD,EAAAkkD,EAAArpC,cACA,GAAA7a,EAAA,CACA,IAAApjB,EAAAojB,EAAAvX,YACAo5D,EAAAp3F,KAAAmyB,GACAonE,EAAAv5F,KAAAy5F,QAEAn/F,KAAAk+F,sBAAAkB,GAAAD,EAGAn/F,KAAAg+F,gBACAh+F,KAAAg+F,eAAA33F,KAAAy2F,EAAAmC,GAGA,QAAAI,EAAA,EAAAC,EAAAN,EAAA37F,OAAoDg8F,EAAAC,EAAgBD,IACpEr/F,KAAAqa,cAAA,IAAAgjF,GAA+Cf,GAAeC,WAAAyC,EAAAK,MAS9D7B,EAAAx7F,UAAAw8F,wBAAA,SAAAV,GACA,IAAAyB,GAAA,EACIjsF,EAAMtT,KAAOs8F,GAAeC,WAIhC,SAAA1kF,GACA0nF,IACAA,GAAA,EACAzB,EAAAp4F,KAAAmS,EAAA4tC,SACA85C,GAAA,KAGIjsF,EAAMtT,KAAOs8F,GAAeG,cAIhC,SAAA5kF,GACA0nF,IACAA,GAAA,EACAzB,EAAAl3F,OAAAiR,EAAA4tC,SACA85C,GAAA,KAGIjsF,EAAMwqF,EAAapnF,EAAmBC,IAI1C,SAAAkB,GACA0nF,IACAA,GAAA,EACAv/F,KAAAy+F,WAAqE5mF,EAAA,SACrE0nF,GAAA,IAEOv/F,MACHsT,EAAMwqF,EAAapnF,EAAmBE,OAI1C,SAAAiB,GACA0nF,IACAA,GAAA,EACAv/F,KAAAw/F,cAAwE3nF,EAAA,SACxE0nF,GAAA,IAEOv/F,MACPA,KAAAs+F,oBAAAR,GASAN,EAAAx7F,UAAAe,MAAA,SAAA08F,GACA,GAAAA,EAAA,CACA,QAAAC,KAAA1/F,KAAAq+F,mBAAA,CACA,IAAAxlF,EAAA7Y,KAAAq+F,mBAAAqB,GACA7mF,EAAAjK,QAAqBoJ,GAErBhY,KAAAs+F,sBACAt+F,KAAAq+F,mBAAA,GACAr+F,KAAAm+F,SAAA,GACAn+F,KAAAo+F,cAAA,SAGA,GAAAp+F,KAAAg+F,eAEA,QAAAh+C,KADAhgD,KAAAg+F,eAAApvF,QAAA5O,KAAA2/F,sBAAA3/F,MACAA,KAAAk+F,sBACAl+F,KAAA2/F,sBAAA3/F,KAAAk+F,sBAAAl+C,IAIAhgD,KAAAs+F,qBACAt+F,KAAAs+F,oBAAAv7F,QAGA/C,KAAAg+F,gBACAh+F,KAAAg+F,eAAAj7F,QAEA/C,KAAAi+F,oBAAAl7F,QACA/C,KAAAk+F,sBAAA,GAEA,IAAA0B,EAAA,IAAAvC,GAA2Cf,GAAexhF,OAC1D9a,KAAAqa,cAAAulF,GACA5/F,KAAAwc,WAgBAghF,EAAAx7F,UAAA69F,eAAA,SAAAltF,GACA,GAAA3S,KAAAg+F,eACA,OAAAh+F,KAAAg+F,eAAApvF,QAAA+D,GACK3S,KAAAs+F,qBACLt+F,KAAAs+F,oBAAA1vF,QAAA+D,IAiBA6qF,EAAAx7F,UAAA89F,iCAAA,SAAA//E,EAAApN,GACA,IAAAklB,EAAA,CAAA9X,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OAAA/f,KAAA8wF,uBAAAj5D,EAAA,SAAA4tB,GACA,IAAAxK,EAAAwK,EAAAqQ,cACA,OAAA7a,EAAA1P,qBAAAxrB,GACApN,EAAA8yC,QAEA,KAyBA+3C,EAAAx7F,UAAA8uF,uBAAA,SAAAj5D,EAAAllB,GACA,GAAA3S,KAAAg+F,eACA,OAAAh+F,KAAAg+F,eAAAd,gBAAArlE,EAAAllB,GACK3S,KAAAs+F,qBACLt+F,KAAAs+F,oBAAA1vF,QAAA+D,IAoBA6qF,EAAAx7F,UAAA+9F,iCAAA,SAAAloE,EAAAllB,GACA,OAAA3S,KAAA8wF,uBAAAj5D,EAKA,SAAA4tB,GACA,IAAAxK,EAAAwK,EAAAqQ,cACA,GAAA7a,EAAAhP,iBAAApU,GAAA,CACA,IAAA7xB,EAAA2M,EAAA8yC,GACA,GAAAz/C,EACA,OAAAA,MAcAw3F,EAAAx7F,UAAAg+F,sBAAA,WACA,OAAAhgG,KAAAs+F,qBASAd,EAAAx7F,UAAAixF,YAAA,WACA,IAAAztC,EASA,OARAxlD,KAAAs+F,oBACA94C,EAAAxlD,KAAAs+F,oBAAAz/E,WACK7e,KAAAg+F,iBACLx4C,EAAAxlD,KAAAg+F,eAAAjB,SACWtlF,EAAOzX,KAAAk+F,wBACV95F,GAAMohD,EAAWjuC,EAASvX,KAAAk+F,yBAGlC,GAYAV,EAAAx7F,UAAAi+F,wBAAA,SAAAlgF,GACA,IAAAylC,EAAA,GAIA,OAHAxlD,KAAA8/F,iCAAA//E,EAAA,SAAA0lC,GACAD,EAAA9/C,KAAA+/C,KAEAD,GAeAg4C,EAAAx7F,UAAAk+F,oBAAA,SAAAroE,GACA,OAAA73B,KAAAg+F,eAAAhB,YAAAnlE,IAgBA2lE,EAAAx7F,UAAAm+F,8BAAA,SAAApgF,EAAAqgF,GAQA,IAAAl8E,EAAAnE,EAAA,GACAqE,EAAArE,EAAA,GACAsgF,EAAA,KACAp1D,EAAA,CAAAK,SACAJ,EAAAnnC,IACA8zB,EAAA,EAAA9zB,kBACA00C,EAAA2nD,GAA2C7mF,EAyB3C,OAxBAvZ,KAAAg+F,eAAAd,gBAAArlE,EAIA,SAAA4tB,GACA,GAAAhN,EAAAgN,GAAA,CACA,IAAAxK,EAAAwK,EAAAqQ,cACAwqC,EAAAp1D,EAGA,GAFAA,EAAA+P,EAAAjQ,eACA9mB,EAAAE,EAAA6mB,EAAAC,GACAA,EAAAo1D,EAAA,CACAD,EAAA56C,EAKA,IAAA86C,EAAA79F,KAAAwF,KAAAgjC,GACArT,EAAA,GAAA3T,EAAAq8E,EACA1oE,EAAA,GAAAzT,EAAAm8E,EACA1oE,EAAA,GAAA3T,EAAAq8E,EACA1oE,EAAA,GAAAzT,EAAAm8E,MAIAF,GAcA7C,EAAAx7F,UAAA0hC,UAAA,SAAA/H,GACA,OAAA37B,KAAAg+F,eAAAt6D,UAAA/H,IAaA6hE,EAAAx7F,UAAAw+F,eAAA,SAAAxgD,GACA,IAAAyF,EAAAzlD,KAAAm+F,SAAAn+C,EAAAxtC,YACA,YAAApF,IAAAq4C,IAAA,MAUA+3C,EAAAx7F,UAAAy+F,UAAA,WACA,OAAAzgG,KAAAy9F,SAOAD,EAAAx7F,UAAAwuF,YAAA,WACA,OAAAxwF,KAAAmqF,WAUAqT,EAAAx7F,UAAA0+F,OAAA,WACA,OAAA1gG,KAAA09F,MAQAF,EAAAx7F,UAAA88F,qBAAA,SAAAxkF,GACA,IAAAmrC,EAA6DnrC,EAAA,OAC7DqkF,EAAqB1oF,EAAMwvC,GAC3BxK,EAAAwK,EAAAqQ,cACA,GAAA7a,EAOK,CACL,IAAApjB,EAAAojB,EAAAvX,YACAi7D,KAAA3+F,KAAAk+F,8BACAl+F,KAAAk+F,sBAAAS,GACA3+F,KAAAg+F,gBACAh+F,KAAAg+F,eAAA13F,OAAAuxB,EAAA4tB,IAGAzlD,KAAAg+F,gBACAh+F,KAAAg+F,eAAAntC,OAAAh5B,EAAA4tB,QAfAk5C,KAAA3+F,KAAAk+F,wBACAl+F,KAAAg+F,gBACAh+F,KAAAg+F,eAAAp3F,OAAA6+C,GAEAzlD,KAAAk+F,sBAAAS,GAAAl5C,GAeA,IAAAzF,EAAAyF,EAAAhB,QACA,QAAAr3C,IAAA4yC,EAAA,CACA,IAAA2gD,EAAA3gD,EAAAxtC,WACAmsF,KAAA3+F,KAAAo+F,sBACAp+F,KAAAo+F,cAAAO,GACA3+F,KAAAm+F,SAAAwC,GAAAl7C,GAEAzlD,KAAAm+F,SAAAwC,KAAAl7C,IACAzlD,KAAA4gG,mBAAAn7C,GACAzlD,KAAAm+F,SAAAwC,GAAAl7C,QAIAk5C,KAAA3+F,KAAAo+F,gBACAp+F,KAAA4gG,mBAAAn7C,GACAzlD,KAAAo+F,cAAAO,GAAAl5C,GAGAzlD,KAAAwc,UACAxc,KAAAqa,cAAA,IAAAgjF,GACMf,GAAeE,cAAA/2C,KASrB+3C,EAAAx7F,UAAA+tE,WAAA,SAAAtqB,GACA,IAAAzF,EAAAyF,EAAAhB,QACA,YAAAr3C,IAAA4yC,EACAA,KAAAhgD,KAAAm+F,SAEaloF,EAAMwvC,KAAAzlD,KAAAo+F,eAOnBZ,EAAAx7F,UAAAuyB,QAAA,WACA,OAAAv0B,KAAAg+F,eAAAzpE,WAA4C9c,EAAOzX,KAAAk+F,wBASnDV,EAAAx7F,UAAAyuF,aAAA,SAAA54D,EAAAK,EAAAqO,GACA,IAAAurD,EAAA9xF,KAEA6gG,EAAA7gG,KAAAi+F,oBACA6C,EAAA9gG,KAAA49F,UAAA/lE,EAAAK,GACAl4B,KAAA8pD,SAAA,EAkBA,IAjBA,IAAAwoC,EAAA,SAAAlyF,EAAAgX,GACA,IAAA2pF,EAAAD,EAAA1gG,GACA4gG,EAAAH,EAAA3D,gBAAA6D,EAKA,SAAAj/F,GACA,OAAiBk6B,GAAcl6B,EAAA+1B,OAAAkpE,KAE/BC,IACAlP,EAAA90B,QAAAz8D,KAAAuxF,EAAAiP,EAAA7oE,EAAAqO,GACAs6D,EAAAv6F,OAAAy6F,EAAA,CAAiDlpE,OAAAkpE,EAAAv6F,UACjDsrF,EAAAhoC,QAAAgoC,EAAA90B,UAA4CvjD,IAI5CrZ,EAAA,EAAAgX,EAAA0pF,EAAAz9F,OAA8CjD,EAAAgX,IAAQhX,EAAAkyF,EAAAlyF,EAAAgX,IAStDomF,EAAAx7F,UAAAi/F,mBAAA,SAAAppE,GACA,IACA/sB,EADA+1F,EAAA7gG,KAAAi+F,oBAEA4C,EAAA3D,gBAAArlE,EAAA,SAAA/1B,GACA,GAAUg7B,GAAMh7B,EAAA+1B,UAEhB,OADA/sB,EAAAhJ,GACA,IAGAgJ,GACA+1F,EAAAj6F,OAAAkE,IAYA0yF,EAAAx7F,UAAAw9F,cAAA,SAAA/5C,GACA,IAAAk5C,EAAqB1oF,EAAMwvC,GAC3Bk5C,KAAA3+F,KAAAk+F,6BACAl+F,KAAAk+F,sBAAAS,GAEA3+F,KAAAg+F,gBACAh+F,KAAAg+F,eAAAp3F,OAAA6+C,GAGAzlD,KAAA2/F,sBAAAl6C,GACAzlD,KAAAwc,WASAghF,EAAAx7F,UAAA29F,sBAAA,SAAAl6C,GACA,IAAAk5C,EAAqB1oF,EAAMwvC,GAC3BzlD,KAAAq+F,mBAAAM,GAAA/vF,QAAgDoJ,UAChDhY,KAAAq+F,mBAAAM,GACA,IAAA3+C,EAAAyF,EAAAhB,aACAr3C,IAAA4yC,SACAhgD,KAAAm+F,SAAAn+C,EAAAxtC,mBAEAxS,KAAAo+F,cAAAO,GAEA3+F,KAAAqa,cAAA,IAAAgjF,GACMf,GAAeG,cAAAh3C,KAWrB+3C,EAAAx7F,UAAA4+F,mBAAA,SAAAn7C,GACA,IAAAy7C,GAAA,EACA,QAAAlhD,KAAAhgD,KAAAm+F,SACA,GAAAn+F,KAAAm+F,SAAAn+C,KAAAyF,EAAA,QACAzlD,KAAAm+F,SAAAn+C,GACAkhD,GAAA,EACA,MAGA,OAAAA,GAUA1D,EAAAx7F,UAAAm/F,UAAA,SAAAxD,GACA39F,KAAAg9D,QAAA2gC,GAGAH,EAl0BgB,CAm0BdnB,IAGa+E,GAAA,GCj+Bf,MAAA/hD,GAAA,CACAgiD,IAAA,CACA50C,MAAA,KACA60C,OAAA,KACAC,QAAA,IAEAC,MAAA,CACA/0C,MAAA,OACA60C,OAAA,gHACAC,QAAA,IAEAE,KAAA,CACAh1C,MAAA,OACA60C,OAAA,iFACAC,QAAA,IAEAG,SAAA,CACAj1C,MAAA,KACA60C,OAAA,sEACAC,QAAA,IAEAI,OAAA,CACAl1C,MAAA,OACA60C,OAAA,uEACAC,QAAA,IAEAK,QAAA,CACAn1C,MAAA,SACA60C,OAAA,8BACAC,QAAA,KAMO,SAAAM,GAAAlgG,GACP,MAAAkX,EAAA/X,OAAA+X,KAAAwmC,IACA0/C,EAAAlmF,EAAAiR,SAAAnoB,GACA,IAAAo9F,EACA,UAAAptF,cAA4BhQ,SAE5B,OAAAo9F,EAiBO,SAAS+C,GAAGriD,GACnB3+C,OAAA+X,KAAA4mC,GAAA7wC,QAAAjN,IACA,MAAAq8C,EAAAyB,EAAA99C,GACAb,OAAAkW,OAAAqoC,GAAA19C,GAAAq8C,KAUO,SAAS+jD,GAAGpgG,EAAA,KAAAqgG,GAAA,GACnB,OAAArgG,GAAAkgG,GAAAlgG,GACA09C,GAAA19C,GAEAqgG,EAGAlhG,OAAA+X,KAAAwmC,IAAA/qC,IAAA3S,IACA,OACAhB,KAAAgB,KACA09C,GAAA19C,MALA09C,GCzEe,IAAA4iD,GAAA,CACfC,QAAA,UACAC,2BAAA,0BCkCIC,GAAS,SAAAr3C,GACb,SAAAs3C,EAAAjkF,GACA,IAAAtR,EAAAsR,GAAA,GAEAohC,EAAsBzoC,EAAM,GAAGjK,UAE/B0yC,EAAAyzB,eACAzzB,EAAAg4B,uBACAzsB,EAAAxqD,KAAAP,KAAAw/C,GAEAx/C,KAAAsiG,gBAAAl1F,IAAAN,EAAAmmE,QAAAnmE,EAAAmmE,QAAA,GACAjzE,KAAAuiG,+BAAAn1F,IAAAN,EAAA0qE,wBACA1qE,EAAA0qE,wBAOAx3E,KAAAuT,KAAgB+pD,GAASE,KAgDzB,OA5CAzS,IAAAs3C,EAAA31F,UAAAq+C,GACAs3C,EAAArgG,UAAAlB,OAAAY,OAAAqpD,KAAA/oD,WACAqgG,EAAArgG,UAAA+I,YAAAs3F,EAQAA,EAAArgG,UAAA01E,WAAA,WACA,OAA6B13E,KAAAiB,IAAcghG,GAAYC,UASvDG,EAAArgG,UAAAsgG,WAAA,SAAArvB,GACAjzE,KAAAyR,IAAawwF,GAAYC,QAAAjvB,IASzBovB,EAAArgG,UAAAy1E,0BAAA,WACA,OAA8Bz3E,KAAAiB,IAAcghG,GAAYE,6BASxDE,EAAArgG,UAAAugG,0BAAA,SAAA/qB,GACAx3E,KAAAyR,IAAawwF,GAAYE,2BAAA3qB,IAGzB6qB,EAnEa,CAoEX72C,IASF42C,GAASpgG,UAAA6nD,UAGM,IAAA24C,GAAA,GC/CXC,GAAI,SAAApmF,GACR,SAAAqmF,EAAAxwB,EAAAp8C,EAAA1X,GACA/B,EAAA9b,KAAAP,MAEA,IAAA8M,EAAAsR,GAAA,GAKApe,KAAAkyE,YAMAlyE,KAAA81B,QAQA91B,KAAA2iG,YAAA,KAQA3iG,KAAA2B,IAAA,GAMA3B,KAAA4iG,iBAAAx1F,IAAAN,EAAA+sE,WAAA,IAAA/sE,EAAA+sE,WAOA75E,KAAA6iG,kBAAA,GA4KA,OAxKAxmF,IAAAqmF,EAAAh2F,UAAA2P,GACAqmF,EAAA1gG,UAAAlB,OAAAY,OAAA2a,KAAAra,WACA0gG,EAAA1gG,UAAA+I,YAAA23F,EAKAA,EAAA1gG,UAAAwa,QAAA,WACAxc,KAAAqa,cAAuBO,EAASC,SAMhC6nF,EAAA1gG,UAAAszB,OAAA,WACA,OAAAt1B,KAAA2B,IAAA,IAAA3B,KAAAkyE,WASAwwB,EAAA1gG,UAAA41E,eAAA,WACA,IAAA53E,KAAA2iG,YAEA,OAAA3iG,KAEA,IAAA21B,EAAA31B,KAAA2iG,YAMA,GACA,GAAAhtE,EAAAI,YAA6BrD,GAASG,OACtC,OAAA8C,EAEAA,IAAAgtE,kBACKhtE,GAGL,OAAA31B,MAOA0iG,EAAA1gG,UAAA8gG,oBAAA,WACA,GAAA9iG,KAAA2iG,YAAA,CAIA,IAAAhtE,EAAA31B,KAAA2iG,YACA1jF,EAA+B,KAE/B,GACA,GAAA0W,EAAAI,YAA6BrD,GAASG,OAAA,CAItC8C,EAAAgtE,YAAA,KACA,MACOhtE,EAAAI,YAA6BrD,GAASE,QAG7C3T,EAAA0W,EACOA,EAAAI,YAA6BrD,GAASC,KAG7C1T,EAAA0jF,YAAAhtE,EAAAgtE,YAEA1jF,EAAA0W,EAEAA,EAAA1W,EAAA0jF,kBACKhtE,KAQL+sE,EAAA1gG,UAAA03E,aAAA,WACA,OAAA15E,KAAAkyE,WAMAwwB,EAAA1gG,UAAA+zB,SAAA,WACA,OAAA/1B,KAAA81B,OAWA4sE,EAAA1gG,UAAA21E,SAAA,SAAA7hD,GACA91B,KAAA81B,QACA91B,KAAAwc,WAUAkmF,EAAA1gG,UAAAqE,KAAA,aAQAq8F,EAAA1gG,UAAA02E,SAAA,SAAA14B,EAAAyI,GACA,IAAAzoD,KAAA4iG,YACA,SAGA,IAAA1jE,EAAAl/B,KAAA6iG,kBAAA7iD,GACA,GAAA9gB,GAGK,QAAAA,EACL,cAHAA,EAAAupB,EACAzoD,KAAA6iG,kBAAA7iD,GAAA9gB,EAKA,IAAA/G,EAAAswB,EAAAvpB,EAAA,OACA,OAAA/G,GAAAn4B,KAAA4iG,YACA,EAEWtoE,GAAMnC,EAAAn4B,KAAA4iG,cAUjBF,EAAA1gG,UAAAy2E,aAAA,SAAAz4B,GACA,QAAAhgD,KAAA4iG,cAGA,IAAA5iG,KAAA6iG,kBAAA7iD,IAOA0iD,EAAA1gG,UAAAi4E,cAAA,SAAAj6B,GACAhgD,KAAA4iG,cACA5iG,KAAA6iG,kBAAA7iD,IAAA,IAIA0iD,EAxNQ,CAyNN/nF,GAGaooF,GAAA,GC9RXC,GAAS,SAAAN,GACb,SAAAO,EAAA/wB,EAAAp8C,EAAA3gB,EAAAk5D,EAAA60B,EAAA9kF,GAEAskF,EAAAniG,KAAAP,KAAAkyE,EAAAp8C,EAAA1X,GAMApe,KAAAmjG,aAAA90B,EAQAruE,KAAAojG,KAAAjuF,EAMAnV,KAAA4mE,OAAA,IAAA6iB,MACA,OAAApb,IACAruE,KAAA4mE,OAAAyH,eAOAruE,KAAAqjG,mBAAA,KAMArjG,KAAAsjG,kBAAAJ,EAuGA,OAnGAR,IAAAO,EAAAv2F,UAAAg2F,GACAO,EAAAjhG,UAAAlB,OAAAY,OAAAghG,KAAA1gG,WACAihG,EAAAjhG,UAAA+I,YAAAk4F,EAKAA,EAAAjhG,UAAAqX,gBAAA,WACArZ,KAAA81B,OAAsBpD,GAASE,UAC/B5yB,KAAAujG,iBACAvjG,KAAA4mE,OAAA48B,MAEAxjG,KAAA2iG,aACA3iG,KAAA2iG,YAAAvpF,UAEApZ,KAAA81B,MAAiBpD,GAASK,MAC1B/yB,KAAAwc,UACAkmF,EAAA1gG,UAAAqX,gBAAA9Y,KAAAP,OAQAijG,EAAAjhG,UAAAy6D,SAAA,WACA,OAAAz8D,KAAA4mE,QAMAq8B,EAAAjhG,UAAAszB,OAAA,WACA,OAAAt1B,KAAAojG,MAQAH,EAAAjhG,UAAAyhG,kBAAA,WACAzjG,KAAA81B,MAAiBpD,GAASrX,MAC1Brb,KAAAujG,iBACAvjG,KAAA4mE,OAAA48B,KACAxjG,KAAAwc,WAQAymF,EAAAjhG,UAAA0hG,iBAAA,WACA,IAAArhC,EAA4CriE,KAAA,OAC5CqiE,EAAAshC,cAAAthC,EAAAuhC,cACA5jG,KAAA81B,MAAmBpD,GAASG,OAE5B7yB,KAAA81B,MAAmBpD,GAASI,MAE5B9yB,KAAAujG,iBACAvjG,KAAAwc,WAOAymF,EAAAjhG,UAAAqE,KAAA,WACArG,KAAA81B,OAAsBpD,GAASrX,QAC/Brb,KAAA81B,MAAmBpD,GAASC,KAC5B3yB,KAAA4mE,OAAA,IAAA6iB,MACA,OAAAzpF,KAAAmjG,eACAnjG,KAAA4mE,OAAAyH,YAAAruE,KAAAmjG,eAGAnjG,KAAA81B,OAAsBpD,GAASC,OAC/B3yB,KAAA81B,MAAmBpD,GAASE,QAC5B5yB,KAAAwc,UACAxc,KAAAqjG,mBAAA,CACQtqF,EAAU/Y,KAAA4mE,OAAchsD,EAASS,MACzCrb,KAAAyjG,kBAAAzjG,MACQ+Y,EAAU/Y,KAAA4mE,OAAchsD,EAASY,KACzCxb,KAAA0jG,iBAAA1jG,OAEAA,KAAAsjG,kBAAAtjG,UAAAojG,QASAH,EAAAjhG,UAAAuhG,eAAA,WACAvjG,KAAAqjG,mBAAAz0F,QAAoCoJ,GACpChY,KAAAqjG,mBAAA,MAGAJ,EA7Ia,CA8IXF,IAOF,SAAAS,KACA,IAAA5wF,EAAY4pC,GAAqB,KAGjC,OAFA5pC,EAAA4yD,UAAA,gBACA5yD,EAAAixF,SAAA,SACAjxF,EAAA+pC,OAGe,IAAAmnD,GAAA,GClJR,SAASC,GAAc35F,EAAA8Z,EAAAE,EAAA4/E,GAC9B,YAAA52F,IAAA42F,GACAA,EAAA,GAAA55F,EACA45F,EAAA,GAAA9/E,EACA8/E,EAAA,GAAA5/E,EACA4/E,GAEA,CAAA55F,EAAA8Z,EAAAE,GAWO,SAAA6/E,GAAA75F,EAAA8Z,EAAAE,GACP,OAAAha,EAAA,IAAA8Z,EAAA,IAAAE,EASO,SAAS8/E,GAAMhyB,GACtB,OAAA+xB,GAAA/xB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IASO,SAAAiyB,GAAAxiG,GACP,OAAAA,EAAA4U,MAAA,KAAAjC,IAAAwZ,QAQO,SAAAs2E,GAAAlyB,GACP,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAkCO,SAAAmyB,GAAAnyB,EAAA/tC,GACP,IAAA/5B,EAAA8nE,EAAA,GACAhuD,EAAAguD,EAAA,GACA9tD,EAAA8tD,EAAA,GAEA,GAAA/tC,EAAA8V,aAAA7vC,KAAA+5B,EAAA0V,aACA,SAEA,IACAo4B,EADAp6C,EAAAsM,EAAAT,YAOA,OAFAuuC,EAHAp6C,EAGAsM,EAAAgvC,0BAAAt7C,EAAAztB,GAFA+5B,EAAAmgE,iBAAAl6F,IAIA6nE,GAGAA,EAAA9mC,WAAAjnB,EAAAE,GClHA,IAAImgF,GAAS,SAAAlmC,GACb,SAAAmmC,EAAAlmC,GAEAD,EAAA99D,KAAAP,KAAAs+D,GAyCA,OArCAD,IAAAmmC,EAAA93F,UAAA2xD,GACAmmC,EAAAxiG,UAAAlB,OAAAY,OAAA28D,KAAAr8D,WACAwiG,EAAAxiG,UAAA+I,YAAAy5F,EAKAA,EAAAxiG,UAAA4wE,YAAA,SAAA7pB,GACA,MAAA/oD,KAAA4+D,iBAAA,CACA,IAAAjpC,EAAA31B,KAAAm/D,WACA2T,EAAAn9C,EAAAu8C,UAAA,GAAA1/D,WACA,GAAAsgE,KAAA/pB,KAAA+pB,GAAA/tE,SAAA4wB,EAAAu8C,WACA,MAEAlyE,KAAAyF,MAAA2T,YAQAorF,EAAAxiG,UAAAyiG,mBAAA,WACA,OAAAzkG,KAAAk0B,WAAA,CAGA,IAAAvyB,EAAA3B,KAAAq/D,eACA6S,EAAoBiyB,GAAOxiG,GAC3ByI,EAAA8nE,EAAA,GACAlyE,KAAA4O,QAAA,SAAA+mB,GACAA,EAAAu8C,UAAA,KAAA9nE,IACApK,KAAA4G,OAAoBs9F,GAAMvuE,EAAAu8C,YAC1Bv8C,EAAAvc,YAEKpZ,QAGLwkG,EA5Ca,CA6CXhlC,IAGaklC,GAAA,GCjCR,SAAAC,GAAAx4D,EAAAy4D,EACPrtD,EAAAE,GAEA,IAAAH,EAAqB3O,GAAS4O,EAAAqtD,EAAAz4D,GAG9BqL,EAAyBpU,GAAkBwhE,EAAAntD,EAAAF,GAE3CstD,EAAAD,EAAAhhE,wBACAx2B,IAAAy3F,IACArtD,GAAAqtD,GAEA,IAAAC,EAAA34D,EAAAvI,wBACAx2B,IAAA03F,IACAttD,GAAAstD,GAOA,IAAAC,EAAA54D,EAAAzI,YACA,IAAAqhE,GAAuBjpE,GAAkBipE,EAAAztD,GAAA,CACzC,IAAA0tD,EAA6B5hE,GAAkB+I,EAAAqL,EAAAF,GAC/CE,EACAytD,SAAAD,MAAA,IACAxtD,GAAAwtD,GAIA,OAAAxtD,EAcA,SAAA0tD,GAAAC,EAAAC,EAAAlhF,EAAAE,GACA,IAAAihF,EAAAnhF,EAAAihF,EACAG,EAAAlhF,EAAAghF,EACAzwC,EAAAjyD,KAAAwF,KAAAm9F,IAAAC,KACA,OAAA5iG,KAAA2tC,MAAAnsB,EAAAmhF,EAAA1wC,GAAAjyD,KAAA2tC,MAAAjsB,EAAAkhF,EAAA3wC,IAuBO,SAAS4wC,GAAM38E,EAAA3jB,EAAA01C,EACtBnD,EAAAutD,EAAAttD,EAAA+tD,EACAC,EAAAC,EAAA9rB,EAAA+rB,GAEA,IAAA1nC,EAAgBzhB,GAAqB95C,KAAA2tC,MAAAsK,EAAA/xB,GACrClmB,KAAA2tC,MAAAsK,EAAA11C,IAEA,OAAAygG,EAAAriG,OACA,OAAA46D,EAAAthB,OAGAshB,EAAA5jC,MAAAsgB,KAEA,IAAAirD,EAAyBpqE,KACzBkqE,EAAA92F,QAAA,SAAAuG,EAAA/U,EAAA+E,GACI43B,GAAM6oE,EAAAzwF,EAAA0iB,UAGV,IAAAguE,EAA2BpoE,GAAQmoE,GACnCE,EAA4BpoE,GAASkoE,GACrCG,EAAsBvpD,GACtB95C,KAAA2tC,MAAAsK,EAAAkrD,EAAAruD,GACA90C,KAAA2tC,MAAAsK,EAAAmrD,EAAAtuD,IAEAwuD,EAAArrD,EAAAnD,EAEAkuD,EAAA92F,QAAA,SAAAuG,EAAA/U,EAAA+E,GACA,IAAA8gG,EAAA9wF,EAAA0iB,OAAA,GAAA+tE,EAAA,GACAM,IAAA/wF,EAAA0iB,OAAA,GAAA+tE,EAAA,IACAO,EAAmB1oE,GAAQtoB,EAAA0iB,QAC3BuuE,EAAoB1oE,GAASvoB,EAAA0iB,QAE7BkuE,EAAA3jC,UACAjtD,EAAAktD,MACAuX,IACAzkE,EAAAktD,MAAAz5C,MAAA,EAAAgxD,EAAAzkE,EAAAktD,MAAAp9D,OAAA,EAAA20E,EACAqsB,EAAAD,EAAAE,EAAAF,EACAG,EAAAH,EAAAI,EAAAJ,KAGA,IAAAK,EAAsB/oE,GAAUkoE,GA6GhC,OA3GAC,EAAAa,eAAA13F,QAAA,SAAA23F,EAAAnmG,EAAA+E,GAqBA,IAAAkS,EAAAkvF,EAAAlvF,OACAnM,EAAAq7F,EAAAr7F,OACAozB,EAAAjnB,EAAA,MAAAmnB,EAAAnnB,EAAA,MACAuf,EAAAvf,EAAA,MAAAwf,EAAAxf,EAAA,MACAyf,EAAAzf,EAAA,MAAA0f,EAAA1f,EAAA,MACAmvF,GAAAt7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAgvD,IAAAv7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAivD,GAAAx7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAkvD,IAAAz7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAmvD,GAAA17F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAovD,IAAA37F,EAAA,MAAAm7F,EAAA,IAAA5uD,EAKAqvD,EAAAxoE,EACAyoE,EAAAvoE,EACAF,EAAA,EACAE,EAAA,EACA5H,GAAAkwE,EACAjwE,GAAAkwE,EACAjwE,GAAAgwE,EACA/vE,GAAAgwE,EAEA,IAAAC,EAAA,CACA,CAAApwE,EAAAC,EAAA,IAAA6vE,EAAAF,GACA,CAAA1vE,EAAAC,EAAA,IAAA6vE,EAAAJ,GACA,KAAA5vE,EAAAC,EAAA8vE,EAAAF,GACA,KAAA3vE,EAAAC,EAAA8vE,EAAAJ,IAEAQ,EAAsBhwE,GAAiB+vE,GACvC,GAAAC,EAAA,CAIAhpC,EAAAoT,OACApT,EAAAgL,YACA,IAAAk8B,GAAAqB,EAAAE,EAAAE,GAAA,EACAxB,GAAAqB,EAAAE,EAAAE,GAAA,EACAK,EAAAhC,GAAAC,EAAAC,EAAAoB,EAAAC,GACAloB,EAAA2mB,GAAAC,EAAAC,EAAAsB,EAAAC,GACAnoB,EAAA0mB,GAAAC,EAAAC,EAAAwB,EAAAC,GAEA5oC,EAAA4K,OAAA0V,EAAA,GAAAA,EAAA,IACAtgB,EAAA6K,OAAAo+B,EAAA,GAAAA,EAAA,IACAjpC,EAAA6K,OAAA0V,EAAA,GAAAA,EAAA,IACAvgB,EAAA0V,OAEA1V,EAAAv9B,UACAumE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAT,EAAAC,GAEAxoC,EAAA/xB,UAAA05D,EAAA,GAAAkB,EACAlB,EAAA,GAAAmB,GAEA9oC,EAAA5jC,MAAAmd,EAAAmD,GACAnD,EAAAmD,GAEAsjB,EAAAmE,UAAA2jC,EAAAppD,OAAA,KACAshB,EAAAuT,aAGAm0B,IACA1nC,EAAAoT,OAEApT,EAAAwH,YAAA,QACAxH,EAAA2M,UAAA,EAEA66B,EAAAa,eAAA13F,QAAA,SAAA23F,EAAAnmG,EAAA+E,GACA,IAAA+F,EAAAq7F,EAAAr7F,OACAs7F,GAAAt7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAgvD,IAAAv7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAivD,GAAAx7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAkvD,IAAAz7F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAmvD,GAAA17F,EAAA,MAAAm7F,EAAA,IAAA5uD,EACAovD,IAAA37F,EAAA,MAAAm7F,EAAA,IAAA5uD,EAEAwmB,EAAAgL,YACAhL,EAAA4K,OAAA69B,EAAAC,GACA1oC,EAAA6K,OAAA09B,EAAAC,GACAxoC,EAAA6K,OAAA89B,EAAAC,GACA5oC,EAAA8K,YACA9K,EAAAmL,WAGAnL,EAAAuT,WAEAvT,EAAAthB,OCzNA,IAAAwqD,GAAA,GAWAC,GAAA,IAQIC,GAAa,SAAAl7D,EAAAy4D,EAAAY,EAAA8B,EAAAC,GAMjBvnG,KAAAwnG,YAAAr7D,EAMAnsC,KAAAynG,YAAA7C,EAGA,IAAA8C,EAAA,GACAC,EAAqBj/D,GAAY1oC,KAAAynG,YAAAznG,KAAAwnG,aAOjCxnG,KAAA4nG,cAAA,SAAAnnG,GACA,IAAAkB,EAAAlB,EAAA,OAAAA,EAAA,GAIA,OAHAinG,EAAA/lG,KACA+lG,EAAA/lG,GAAAgmG,EAAAlnG,IAEAinG,EAAA/lG,IAOA3B,KAAA6nG,iBAAAP,EAMAtnG,KAAA8nG,uBAAAP,IAMAvnG,KAAA+nG,WAAA,GAOA/nG,KAAAgoG,iBAAA,EAMAhoG,KAAAioG,kBAAAjoG,KAAAwnG,YAAAhkE,cACA8jE,KACAtnG,KAAAwnG,YAAA9jE,aACOjG,GAAQ6pE,IAAqB7pE,GAAQz9B,KAAAwnG,YAAA9jE,aAM5C1jC,KAAAkoG,kBAAAloG,KAAAwnG,YAAA9jE,YACIjG,GAAQz9B,KAAAwnG,YAAA9jE,aAAA,KAMZ1jC,KAAAmoG,kBAAAnoG,KAAAynG,YAAA/jE,YACIjG,GAAQz9B,KAAAynG,YAAA/jE,aAAA,KAEZ,IAAA0kE,EAA2B9qE,GAAUkoE,GACrC6C,EAA4BhrE,GAAWmoE,GACvC8C,EAA+BlrE,GAAcooE,GAC7C+C,EAA8BprE,GAAaqoE,GAC3CgD,EAAAxoG,KAAA4nG,cAAAQ,GACAK,EAAAzoG,KAAA4nG,cAAAS,GACAK,EAAA1oG,KAAA4nG,cAAAU,GACAK,EAAA3oG,KAAA4nG,cAAAW,GAQA,GANAvoG,KAAA4oG,SACAR,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EACAxB,IAEAnnG,KAAAgoG,gBAAA,CACA,IAAAa,EAAA9kG,IACA/D,KAAA+nG,WAAAn5F,QAAA,SAAA23F,EAAAnmG,EAAA+E,GACA0jG,EAAAnmG,KAAA8B,IAAAqkG,EACAtC,EAAAlvF,OAAA,MAAAkvF,EAAAlvF,OAAA,MAAAkvF,EAAAlvF,OAAA,SAKArX,KAAA+nG,WAAAn5F,QAAA,SAAA23F,GACA,GAAA7jG,KAAAC,IAAA4jG,EAAAlvF,OAAA,MAAAkvF,EAAAlvF,OAAA,MACAkvF,EAAAlvF,OAAA,OAAAwxF,EAAA7oG,KAAAkoG,kBAAA,GACA,IAAAY,EAAA,EAAAvC,EAAAlvF,OAAA,MAAAkvF,EAAAlvF,OAAA,OACA,CAAAkvF,EAAAlvF,OAAA,MAAAkvF,EAAAlvF,OAAA,OACA,CAAAkvF,EAAAlvF,OAAA,MAAAkvF,EAAAlvF,OAAA,QACAyxF,EAAA,MAAAD,EAAA7oG,KAAAkoG,kBAAA,IACAY,EAAA,OAAA9oG,KAAAkoG,mBAEAY,EAAA,MAAAD,EAAA7oG,KAAAkoG,kBAAA,IACAY,EAAA,OAAA9oG,KAAAkoG,mBAEAY,EAAA,MAAAD,EAAA7oG,KAAAkoG,kBAAA,IACAY,EAAA,OAAA9oG,KAAAkoG,mBAMA,IAAApkG,EAAApB,KAAA8B,IACAskG,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA7kG,EAAAvB,KAAAC,IACAmmG,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA7kG,EAAAH,EAAA9D,KAAAkoG,kBAAA,IACA3B,EAAAlvF,OAAAyxF,KAGKlnG,KAAA5B,OAGL0nG,EAAA,IAaAL,GAAarlG,UAAA+mG,aAAA,SAAAzkG,EAAAC,EAAA9D,EAAAuoG,EAAAC,EAAAC,GACblpG,KAAA+nG,WAAAriG,KAAA,CACA2R,OAAA,CAAA2xF,EAAAC,EAAAC,GACAh+F,OAAA,CAAA5G,EAAAC,EAAA9D,MAoBA4mG,GAAarlG,UAAA4mG,SAAA,SAAAtkG,EAAAC,EAAA9D,EAAAC,EAAAsoG,EAAAC,EAAAC,EAAAC,EAAAC,GAEb,IAAAC,EAAyB/tE,GAAc,CAAA0tE,EAAAC,EAAAC,EAAAC,IACvCG,EAAAtpG,KAAAkoG,kBACIzqE,GAAQ4rE,GAAArpG,KAAAkoG,kBAAA,KACZqB,EAA2CvpG,KAAA,kBAI3CwpG,EAAAxpG,KAAAwnG,YAAAhkE,YACA8lE,EAAA,IAAAA,EAAA,EAEAG,GAAA,EAEA,GAAAL,EAAA,GACA,GAAAppG,KAAAynG,YAAA1jE,YAAA/jC,KAAAmoG,kBAAA,CACA,IAAAuB,EAA6BpuE,GAAc,CAAAh3B,EAAAC,EAAA9D,EAAAC,IAC3CipG,EAA4BlsE,GAAQisE,GAAA1pG,KAAAmoG,kBACpCsB,EAAAE,EAAAvC,IACAqC,GAEAD,GAAAxpG,KAAAwnG,YAAAzjE,YAAAulE,IACAG,EAAAH,EAAAlC,IACAqC,GAIA,GAAAA,IAAAzpG,KAAA6nG,kBACSjpE,GAAUyqE,EAAArpG,KAAA6nG,kBADnB,CAOA,IAAA4B,KACAxE,SAAA+D,EAAA,MAAA/D,SAAA+D,EAAA,MACA/D,SAAAgE,EAAA,MAAAhE,SAAAgE,EAAA,MACAhE,SAAAiE,EAAA,MAAAjE,SAAAiE,EAAA,MACAjE,SAAAkE,EAAA,MAAAlE,SAAAkE,EAAA,MACA,KAAAC,EAAA,GAGA,OAFAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAGAnlF,EAHAwT,EAAA,EAAAxzB,EAAA,GAAA7D,EAAA,OAAA6D,EAAA,GAAA7D,EAAA,OACAmpG,EAAA5pG,KAAA4nG,cAAA9vE,GAGA,GAAA0xE,EAAA,CACA,IAAAK,GACanyE,GAAMsxE,EAAA,GAAAO,GACN7xE,GAAMwxE,EAAA,GAAAK,IAAA,EACnBjlF,EAAAulF,EACYnyE,GAAMkyE,EAAA,GAAAL,QAElBjlF,GAAA0kF,EAAA,GAAAE,EAAA,MAAAU,EAAA,GAEA,IAAAplF,GAAAwkF,EAAA,GAAAE,EAAA,MAAAU,EAAA,GACAE,EAAAxlF,IAAAE,IACAilF,EAAAK,EAAA9pG,KAAA8nG,uBAEA,GAAA2B,EAAA,CACA,GAAA/mG,KAAA6hB,IAAAjgB,EAAA,GAAA7D,EAAA,KAAAiC,KAAA6hB,IAAAjgB,EAAA,GAAA7D,EAAA,KAEA,IAAAspG,EAAA,EAAAxlG,EAAA,GAAA9D,EAAA,OAAA8D,EAAA,GAAA9D,EAAA,OACAupG,EAAAhqG,KAAA4nG,cAAAmC,GACAE,EAAA,EAAAvpG,EAAA,GAAA4D,EAAA,OAAA5D,EAAA,GAAA4D,EAAA,OACA4lG,EAAAlqG,KAAA4nG,cAAAqC,GAEAjqG,KAAA4oG,SACAtkG,EAAAC,EAAAwlG,EAAAE,EAAAjB,EAAAC,EAAAe,EAAAE,EAAAd,EAAA,GACAppG,KAAA4oG,SACAqB,EAAAF,EAAAtpG,EAAAC,EAAAwpG,EAAAF,EAAAd,EAAAC,EAAAC,EAAA,OACO,CAEP,IAAAe,EAAA,EAAA7lG,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA6lG,EAAApqG,KAAA4nG,cAAAuC,GACAE,EAAA,EAAA5pG,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA4pG,EAAAtqG,KAAA4nG,cAAAyC,GAEArqG,KAAA4oG,SACAtkG,EAAA6lG,EAAAE,EAAA3pG,EAAAsoG,EAAAoB,EAAAE,EAAAnB,EAAAC,EAAA,GACAppG,KAAA4oG,SACAuB,EAAA5lG,EAAA9D,EAAA4pG,EAAAD,EAAAnB,EAAAC,EAAAoB,EAAAlB,EAAA,GAEA,QAIA,GAAAI,EAAA,CACA,IAAAxpG,KAAAioG,kBACA,OAEAjoG,KAAAgoG,iBAAA,EAGAhoG,KAAA+oG,aAAAzkG,EAAA7D,EAAAC,EAAAsoG,EAAAE,EAAAC,GACAnpG,KAAA+oG,aAAAzkG,EAAAC,EAAA9D,EAAAuoG,EAAAC,EAAAC,KAQA7B,GAAarlG,UAAAuoG,sBAAA,WACb,IAAA1yE,EAAe2D,KASf,OAPAx7B,KAAA+nG,WAAAn5F,QAAA,SAAA23F,EAAAnmG,EAAA+E,GACA,IAAAgQ,EAAAoxF,EAAAlvF,OACIokB,GAAgB5D,EAAA1iB,EAAA,IAChBsmB,GAAgB5D,EAAA1iB,EAAA,IAChBsmB,GAAgB5D,EAAA1iB,EAAA,MAGpB0iB,GAMAwvE,GAAarlG,UAAAskG,aAAA,WACb,OAAAtmG,KAAA+nG,YAGe,IAAAyC,GAAA,GC5TXC,GAAU,SAAA/H,GACd,SAAAgI,EACAv+D,EACAimD,EACAwS,EACA+F,EACAz4B,EACAwhB,EACA/4C,EACAi/B,EACAgxB,EACAC,EACAlF,GAEAjD,EAAAniG,KAAAP,KAAAkyE,EAA+Bx/C,GAASC,MAMxC3yB,KAAA8qG,kBAAA19F,IAAAu4F,KAMA3lG,KAAAwhD,YAAA7G,EAMA36C,KAAA+qG,QAAAnxB,EAMA55E,KAAAi9D,QAAA,KAMAj9D,KAAAgrG,gBAAA5Y,EAMApyF,KAAAirG,gBAAAN,EAMA3qG,KAAAkrG,kBAAAxX,GAAAxhB,EAMAlyE,KAAAmrG,aAAA,GAMAnrG,KAAAorG,qBAAA,KAMAprG,KAAAqrG,SAAA,EAEA,IAAA7F,EAAAmF,EAAAlxB,mBAAAz5E,KAAAkrG,mBACAI,EAAAtrG,KAAAirG,gBAAAvnE,YACA4jE,EAAAtnG,KAAAgrG,gBAAAtnE,YAEA6nE,EAAAD,EACM5sE,GAAe8mE,EAAA8F,GAAA9F,EAErB,GAAe,IAAPjoE,GAAOguE,GAAf,CAOA,IAAAC,EAAAr/D,EAAAzI,YACA8nE,IAIAlE,EAHAA,EAG0B5oE,GAAe4oE,EAAAkE,GAFzCA,GAMA,IAAA/zD,EAAAkzD,EAAA30D,cACAh2C,KAAAkrG,kBAAA,IAEA3zD,EAAuB5Z,GAAS4tE,GAChC/zD,EAA2BmtD,GAC3Bx4D,EAAAy4D,EAAArtD,EAAAE,GAEA,IAAAwtD,SAAAztD,OAAA,EAGAx3C,KAAA81B,MAAmBpD,GAASI,UAH5B,CAOA,IAAA24E,OAAAr+F,IAAAy9F,EACAA,EAA2BxuC,GAU3B,GAJAr8D,KAAA0rG,eAAA,IAA8BlB,GAC9Br+D,EAAAy4D,EAAA2G,EAAAjE,EACA9vD,EAAAi0D,GAEA,IAAAzrG,KAAA0rG,eAAApF,eAAAjjG,OAAA,CAMArD,KAAAqrG,SAAAjZ,EAAAra,kBAAAvgC,GACA,IAAAutD,EAAA/kG,KAAA0rG,eAAAnB,wBAaA,GAXAjD,IACAn7D,EAAA3I,YACAuhE,EAAA,GAA0BtuE,GAC1BsuE,EAAA,GAAAuC,EAAA,GAAAA,EAAA,IACAvC,EAAA,GAA0BtuE,GAC1BsuE,EAAA,GAAAuC,EAAA,GAAAA,EAAA,KAEAvC,EAAuBrmE,GAAeqmE,EAAAuC,IAI7B/pE,GAAOwnE,GAEX,CAIL,IAHA,IAAA4G,EAAAvZ,EAAAjf,0BACA4xB,EAAA/kG,KAAAqrG,UAEAO,EAAAD,EAAA7nG,KAAuC8nG,GAAAD,EAAA1nG,KAA0B2nG,IACjE,QAAAC,EAAAF,EAAA3nG,KAAyC6nG,GAAAF,EAAAznG,KAA0B2nG,IAAA,CACnE,IAAAl2E,EAAAi1E,EAAA5qG,KAAAqrG,SAAAO,EAAAC,EAAAlxD,GACAhlB,GACA31B,KAAAmrG,aAAAzlG,KAAAiwB,GAKA,IAAA31B,KAAAmrG,aAAA9nG,SACArD,KAAA81B,MAAqBpD,GAASI,YAf9B9yB,KAAA81B,MAAmBpD,GAASI,WAnB5B9yB,KAAA81B,MAAmBpD,GAASI,YAxC5B9yB,KAAA81B,MAAmBpD,GAASI,MAiM5B,OAlHA4vE,IAAAgI,EAAAh+F,UAAAg2F,GACAgI,EAAA1oG,UAAAlB,OAAAY,OAAAghG,KAAA1gG,WACA0oG,EAAA1oG,UAAA+I,YAAA2/F,EAKAA,EAAA1oG,UAAAqX,gBAAA,WACArZ,KAAA81B,OAAsBpD,GAASE,SAC/B5yB,KAAA8rG,mBAEApJ,EAAA1gG,UAAAqX,gBAAA9Y,KAAAP,OAOA0qG,EAAA1oG,UAAAy6D,SAAA,WACA,OAAAz8D,KAAAi9D,SAMAytC,EAAA1oG,UAAA+pG,WAAA,WACA,IAAArG,EAAA,GAWA,GAVA1lG,KAAAmrG,aAAAv8F,QAAA,SAAA+mB,EAAAv1B,EAAA+E,GACAwwB,KAAAI,YAAqCrD,GAASG,QAC9C6yE,EAAAhgG,KAAA,CACAmyB,OAAA73B,KAAAgrG,gBAAAvxB,mBAAA9jD,EAAAu8C,WACA7P,MAAA1sC,EAAA8mC,cAGK76D,KAAA5B,OACLA,KAAAmrG,aAAA9nG,OAAA,EAEA,IAAAqiG,EAAAriG,OACArD,KAAA81B,MAAmBpD,GAASrX,UACvB,CACL,IAAAjR,EAAApK,KAAAkrG,kBAAA,GACAntE,EAAA/9B,KAAAirG,gBAAAe,YAAA5hG,GACAwe,EAAA,kBAAAmV,MAAA,GACA94B,EAAA,kBAAA84B,MAAA,GACA0Z,EAAAz3C,KAAAirG,gBAAAj1D,cAAA5rC,GACAotC,EAAAx3C,KAAAgrG,gBAAAh1D,cAAAh2C,KAAAqrG,UAEA7F,EAAAxlG,KAAAirG,gBAAAxxB,mBACAz5E,KAAAkrG,mBACAlrG,KAAAi9D,QAAqBsoC,GAAiB38E,EAAA3jB,EAAAjF,KAAAwhD,YACtChK,EAAAx3C,KAAAgrG,gBAAAtnE,YACA+T,EAAA+tD,EAAAxlG,KAAA0rG,eAAAhG,EACA1lG,KAAA+qG,QAAA/qG,KAAA8qG,cAEA9qG,KAAA81B,MAAmBpD,GAASG,OAE5B7yB,KAAAwc,WAMAkuF,EAAA1oG,UAAAqE,KAAA,WACA,GAAArG,KAAA81B,OAAsBpD,GAASC,KAAA,CAC/B3yB,KAAA81B,MAAmBpD,GAASE,QAC5B5yB,KAAAwc,UAEA,IAAAyvF,EAAA,EAEAjsG,KAAAorG,qBAAA,GACAprG,KAAAmrG,aAAAv8F,QAAA,SAAA+mB,EAAAv1B,EAAA+E,GACA,IAAA2wB,EAAAH,EAAAI,WACA,GAAAD,GAAqBpD,GAASC,MAAAmD,GAAkBpD,GAASE,QAAA,CACzDq5E,IAEA,IAAAC,EAAgC54F,EAAMqiB,EAAO/a,EAASC,OACtD,SAAA9M,GACA,IAAA+nB,EAAAH,EAAAI,WACAD,GAA2BpD,GAASG,QACpCiD,GAA6BpD,GAASrX,OACtCya,GAA6BpD,GAASI,QACtB9a,EAAak0F,GAC7BD,IACA,IAAAA,IACAjsG,KAAA8rG,mBACA9rG,KAAA+rG,gBAGa/rG,MACbA,KAAAorG,qBAAA1lG,KAAAwmG,KAEOtqG,KAAA5B,OAEPA,KAAAmrG,aAAAv8F,QAAA,SAAA+mB,EAAAv1B,EAAA+E,GACA,IAAA2wB,EAAAH,EAAAI,WACAD,GAAqBpD,GAASC,MAC9BgD,EAAAtvB,SAIA,IAAA4lG,GACAj/E,WAAAhtB,KAAA+rG,WAAAnqG,KAAA5B,MAAA,KAQA0qG,EAAA1oG,UAAA8pG,iBAAA,WACA9rG,KAAAorG,qBAAAx8F,QAAsCoJ,GACtChY,KAAAorG,qBAAA,MAGAV,EAvRc,CAwRZ3H,IAGaoJ,GAAA,GCxSR,SAAAC,GAAAC,EAAAloE,GACP,IAAAmoE,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOAv6B,EAAAv3B,EAAApU,GACA,OAAA2rC,EAGAm6B,EAAA/sC,QAAAgtC,EAAAp6B,EAAA,GAAA1/D,YACA8sD,QAAAitC,EAAAr6B,EAAA,GAAA1/D,YACA8sD,QAAAktC,EAAA,WACA,IAAApoF,GAAA8tD,EAAA,KACA,OAAA9tD,EAAA5R,aAEA8sD,QAAAmtC,EAAA,WACA,IAAAriG,EAAA8nE,EAAA,GACA9/D,EAAA+xB,EAAAmgE,iBAAAl6F,GACY4oB,GAAM5gB,EAAA,IAClB,IAAAgS,EAAAhS,EAAAsrB,YAAAw0C,EAAA,GACA,OAAA9tD,EAAA5R,kBAbA,GA0BO,SAAAk6F,GAAAC,EAAAxoE,GAGP,IAFA,IAAAl+B,EAAA0mG,EAAAtpG,OACAupG,EAAA,IAAA/4F,MAAA5N,GACA7F,EAAA,EAAiBA,EAAA6F,IAAS7F,EAC1BwsG,EAAAxsG,GAAAgsG,GAAAO,EAAAvsG,GAAA+jC,GAEA,OAAA0oE,GAAAD,GAQO,SAAAC,GAAAD,GACP,WAAAA,EAAAvpG,OACAupG,EAAA,GAEA,SAOA16B,EAAAv3B,EAAApU,GACA,GAAA2rC,EAEO,CACP,IAAAzP,EAAgB2hC,GAAalyB,GAC7BprE,EAAoB4wB,GAAM+qC,EAAAmqC,EAAAvpG,QAC1B,OAAAupG,EAAA9lG,GAAAorE,EAAAv3B,EAAApU,KAaO,SAAAumE,GAAA56B,EAAAv3B,EAAApU,IASA,SAAAwmE,GAAA7S,GACP,IAAA8S,EAAA,GACA53F,EAAA,sBAAkCuuD,KAAAu2B,GAClC,GAAA9kF,EAAA,CAEA,IAEAkjD,EAFA20C,EAAA73F,EAAA,GAAAmjD,WAAA,GACA20C,EAAA93F,EAAA,GAAAmjD,WAAA,GAEA,IAAAD,EAAA20C,EAAkC30C,GAAA40C,IAA0B50C,EAC5D00C,EAAAtnG,KAAAw0F,EAAA56B,QAAAlqD,EAAA,GAAArB,OAAAo5F,aAAA70C,KAEA,OAAA00C,EAGA,GADA53F,IAAA,kBAAkCuuD,KAAAu2B,GAClC9kF,EAAA,CAGA,IADA,IAAAg4F,EAAAn0D,SAAA7jC,EAAA,OACAhV,EAAA64C,SAAA7jC,EAAA,OAAwChV,GAAAgtG,EAAWhtG,IACnD4sG,EAAAtnG,KAAAw0F,EAAA56B,QAAAlqD,EAAA,GAAAhV,EAAAoS,aAEA,OAAAw6F,EAGA,OADAA,EAAAtnG,KAAAw0F,GACA8S,EChHA,IAAAK,GAAA,QAmCIC,GAAQ,SAAAxgG,GAmBZ,IAAAqoC,EACA,GAdAn1C,KAAAs1C,aAAAloC,IAAAN,EAAAwoC,QAAAxoC,EAAAwoC,QAAA,EAMAt1C,KAAAo1C,aAAAtoC,EAAAmrB,YACEjF,GAAOpI,GAAQ5qB,KAAAo1C,aAAA,SAAA9wC,EAAAC,GACjB,OAAAA,EAAAD,IACG,QAKHwI,EAAAygG,QACA,QAAAntG,EAAA,EAAAgX,EAAApX,KAAAo1C,aAAA/xC,OAAA,EAAsDjD,EAAAgX,IAAQhX,EAC9D,GAAA+0C,GAGA,GAAAn1C,KAAAo1C,aAAAh1C,GAAAJ,KAAAo1C,aAAAh1C,EAAA,KAAA+0C,EAAA,CACAA,OAAA/nC,EACA,YAJA+nC,EAAAn1C,KAAAo1C,aAAAh1C,GAAAJ,KAAAo1C,aAAAh1C,EAAA,GAeAJ,KAAAk1C,YAAAC,EAOAn1C,KAAAg6C,QAAAh6C,KAAAo1C,aAAA/xC,OAAA,EAMArD,KAAA60F,aAAAznF,IAAAN,EAAAi0E,OAAAj0E,EAAAi0E,OAAA,KAMA/gF,KAAAwtG,SAAA,UACApgG,IAAAN,EAAAygG,UACAvtG,KAAAwtG,SAAA1gG,EAAAygG,QACIv6E,GAAMhzB,KAAAwtG,SAAAnqG,QAAArD,KAAAo1C,aAAA/xC,OACV,KAGA,IAAAw0B,EAAA/qB,EAAA+qB,YAEAzqB,IAAAyqB,GACA73B,KAAA60F,SAAA70F,KAAAwtG,WACAxtG,KAAA60F,QAAmBv3D,GAAUzF,IAG3B7E,IACFhzB,KAAA60F,SAAA70F,KAAAwtG,UAAAxtG,KAAA60F,UAAA70F,KAAAwtG,SACA,IAMAxtG,KAAAytG,WAAA,UACArgG,IAAAN,EAAA4gG,YACA1tG,KAAAytG,WAAA3gG,EAAA4gG,UACI16E,GAAMhzB,KAAAytG,WAAApqG,QAAArD,KAAAo1C,aAAA/xC,OACV,KAOArD,KAAA2tG,eAAAvgG,IAAAN,EAAA8gG,SACA9gG,EAAA8gG,SACA5tG,KAAAytG,WAAwC,KAAjBj3E,GACrBxD,IACFhzB,KAAA2tG,WAAA3tG,KAAAytG,YACAztG,KAAA2tG,YAAA3tG,KAAAytG,WACA,IAMAztG,KAAA4iC,aAAAx1B,IAAAyqB,IAAA,KAOA73B,KAAA6tG,gBAAA,KAMA7tG,KAAA8tG,SAAA,WAEA1gG,IAAAN,EAAAihG,MACA/tG,KAAA6tG,gBAAA/gG,EAAAihG,MAAAz5F,IAAA,SAAAypB,EAAA3zB,GACA,IAAA6nE,EAAA,IAA0BwE,GAC1B/zE,KAAA8B,IAAA,EAAAu5B,EAAA,IAAAr7B,KAAAC,IAAAo7B,EAAA,SACAr7B,KAAA8B,IAAA,EAAAu5B,EAAA,IAAAr7B,KAAAC,IAAAo7B,EAAA,UACA,OAAAk0C,GACKjyE,MACF63B,GACH73B,KAAAguG,qBAAAn2E,IAaAy1E,GAAQtrG,UAAAisG,iBAAA,SAAAp2E,EAAAie,EAAAnjC,GAER,IADA,IAAAs/D,EAAAjyE,KAAAmzE,0BAAAt7C,EAAAie,GACA11C,EAAA6xE,EAAAnuE,KAAAsT,EAAA66D,EAAAhuE,KAAmD7D,GAAAgX,IAAShX,EAC5D,QAAAyH,EAAAoqE,EAAAjuE,KAAAqrC,EAAA4iC,EAAA/tE,KAAqD2D,GAAAwnC,IAASxnC,EAC9D8K,EAAA,CAAAmjC,EAAA11C,EAAAyH,KAcAylG,GAAQtrG,UAAA82E,gCAAA,SAAA5G,EAAAv/D,EAAAwF,EAAA+1F,EAAAvyE,GACR,IAAAs2C,EAAA/tD,EAAAE,EACA+pF,EAAA,KACA/jG,EAAA8nE,EAAA,KACA,IAAAlyE,KAAAk1C,aACAhxB,EAAAguD,EAAA,GACA9tD,EAAA8tD,EAAA,IAEAi8B,EAAAnuG,KAAAy5E,mBAAAvH,EAAAv2C,GAEA,MAAAvxB,GAAApK,KAAAs1C,QAAA,CAQA,GAPA,IAAAt1C,KAAAk1C,aACAhxB,EAAAxhB,KAAA8H,MAAA0Z,EAAA,GACAE,EAAA1hB,KAAA8H,MAAA4Z,EAAA,GACA6tD,EAAkBsE,GAAuBryD,IAAAE,IAAA8pF,IAEzCj8B,EAAAjyE,KAAAmzE,0BAAAg7B,EAAA/jG,EAAA8jG,GAEAv7F,EAAApS,KAAA4X,EAAA/N,EAAA6nE,GACA,WAEA7nE,EAEA,UAOAkjG,GAAQtrG,UAAA0hC,UAAA,WACR,OAAA1jC,KAAA4iC,SAQA0qE,GAAQtrG,UAAA63C,WAAA,WACR,OAAA75C,KAAAg6C,SAQAszD,GAAQtrG,UAAAi4C,WAAA,WACR,OAAAj6C,KAAAs1C,SASAg4D,GAAQtrG,UAAAoqE,UAAA,SAAAhiE,GACR,OAAApK,KAAA60F,QACA70F,KAAA60F,QAEA70F,KAAAwtG,SAAApjG,IAUAkjG,GAAQtrG,UAAAg0C,cAAA,SAAA5rC,GACR,OAAApK,KAAAo1C,aAAAhrC,IAQAkjG,GAAQtrG,UAAAo4C,eAAA,WACR,OAAAp6C,KAAAo1C,cASAk4D,GAAQtrG,UAAA42E,2BAAA,SAAA1G,EAAAg8B,EAAAvyE,GACR,GAAAu2C,EAAA,GAAAlyE,KAAAg6C,QAAA,CACA,OAAAh6C,KAAAk1C,YAAA,CACA,IAAApxC,EAAA,EAAAouE,EAAA,GACAluE,EAAA,EAAAkuE,EAAA,GACA,OAAaqE,GAAuBzyE,IAAA,EAAAE,IAAA,EAAAkqG,GAEpC,IAAAC,EAAAnuG,KAAAy5E,mBAAAvH,EAAAv2C,GACA,OAAA37B,KAAAmzE,0BACAg7B,EAAAj8B,EAAA,KAAAg8B,GAEA,aAUAZ,GAAQtrG,UAAAi2E,mBAAA,SAAA7tE,EAAA6nE,EAAAt2C,GACR,IAAAolD,EAAA/gF,KAAAosE,UAAAhiE,GACA8tB,EAAAl4B,KAAAg2C,cAAA5rC,GACAwjG,EAAiB/sD,GAAM7gD,KAAAgsG,YAAA5hG,GAAApK,KAAA8tG,UACvBhqG,EAAAi9E,EAAA,GAAA9O,EAAAnuE,KAAA8pG,EAAA,GAAA11E,EACAj0B,EAAA88E,EAAA,IAAA9O,EAAAhuE,KAAA,GAAA2pG,EAAA,GAAA11E,EACAl0B,EAAA+8E,EAAA,GAAA9O,EAAAjuE,KAAA4pG,EAAA,GAAA11E,EACAh0B,EAAA68E,EAAA,IAAA9O,EAAA/tE,KAAA,GAAA0pG,EAAA,GAAA11E,EACA,OAASmE,GAAcv4B,EAAAE,EAAAC,EAAAC,EAAAy3B,IAUvB2xE,GAAQtrG,UAAAmxE,0BAAA,SAAAt7C,EAAAztB,EAAA8jG,GACR,IAAAh8B,EAAAm7B,GACArtG,KAAAouG,uBAAAv2E,EAAA,GAAAA,EAAA,GAAAztB,GAAA,EAAA8nE,GACA,IAAApuE,EAAAouE,EAAA,GACAluE,EAAAkuE,EAAA,GAEA,OADAlyE,KAAAouG,uBAAAv2E,EAAA,GAAAA,EAAA,GAAAztB,GAAA,EAAA8nE,GACSqE,GAAuBzyE,EAAAouE,EAAA,GAAAluE,EAAAkuE,EAAA,GAAAg8B,IAOhCZ,GAAQtrG,UAAAqxE,mBAAA,SAAAnB,GACR,IAAA6O,EAAA/gF,KAAAosE,UAAA8F,EAAA,IACAh6C,EAAAl4B,KAAAg2C,cAAAk8B,EAAA,IACA07B,EAAiB/sD,GAAM7gD,KAAAgsG,YAAA95B,EAAA,IAAAlyE,KAAA8tG,UACvB,OACA/sB,EAAA,IAAA7O,EAAA,OAAA07B,EAAA,GAAA11E,EACA6oD,EAAA,IAAA7O,EAAA,OAAA07B,EAAA,GAAA11E,IAYAo1E,GAAQtrG,UAAAy3E,mBAAA,SAAAvH,EAAAv2C,GACR,IAAAolD,EAAA/gF,KAAAosE,UAAA8F,EAAA,IACAh6C,EAAAl4B,KAAAg2C,cAAAk8B,EAAA,IACA07B,EAAiB/sD,GAAM7gD,KAAAgsG,YAAA95B,EAAA,IAAAlyE,KAAA8tG,UACvBhqG,EAAAi9E,EAAA,GAAA7O,EAAA,GAAA07B,EAAA,GAAA11E,EACAl0B,EAAA+8E,EAAA,GAAA7O,EAAA,GAAA07B,EAAA,GAAA11E,EACAj0B,EAAAH,EAAA8pG,EAAA,GAAA11E,EACAh0B,EAAAF,EAAA4pG,EAAA,GAAA11E,EACA,OAASmE,GAAcv4B,EAAAE,EAAAC,EAAAC,EAAAy3B,IAcvB2xE,GAAQtrG,UAAAqsG,kCAAA,SAAAtuF,EAAAmY,EAAA8rE,GACR,OAAAhkG,KAAAsuG,gCACAvuF,EAAA,GAAAA,EAAA,GAAAmY,GAAA,EAAA8rE,IAgBAsJ,GAAQtrG,UAAAssG,gCAAA,SAAApqF,EAAAE,EAAA8T,EAAAq2E,EAAAvK,GACR,IAAA55F,EAAApK,KAAA+3E,kBAAA7/C,GACAmC,EAAAnC,EAAAl4B,KAAAg2C,cAAA5rC,GACA22E,EAAA/gF,KAAAosE,UAAAhiE,GACAwjG,EAAiB/sD,GAAM7gD,KAAAgsG,YAAA5hG,GAAApK,KAAA8tG,UAEvBU,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAhsG,KAAA8H,OAAA0Z,EAAA68D,EAAA,IAAA7oD,EAAAs2E,GACAG,EAAAjsG,KAAA8H,OAAA4Z,EAAA28D,EAAA,IAAA7oD,EAAAu2E,GACAG,EAAAv0E,EAAAq0E,EAAAd,EAAA,GACAiB,EAAAx0E,EAAAs0E,EAAAf,EAAA,GAUA,OARAW,GACAK,EAAAlsG,KAAAG,KAAA+rG,GAAA,EACAC,EAAAnsG,KAAAG,KAAAgsG,GAAA,IAEAD,EAAAlsG,KAAA8H,MAAAokG,GACAC,EAAAnsG,KAAA8H,MAAAqkG,IAGS9K,GAAuB35F,EAAAwkG,EAAAC,EAAA7K,IAkBhCsJ,GAAQtrG,UAAAosG,uBAAA,SAAAlqF,EAAAE,EAAAha,EAAAmkG,EAAAvK,GACR,IAAAjjB,EAAA/gF,KAAAosE,UAAAhiE,GACA8tB,EAAAl4B,KAAAg2C,cAAA5rC,GACAwjG,EAAiB/sD,GAAM7gD,KAAAgsG,YAAA5hG,GAAApK,KAAA8tG,UAEvBU,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAhsG,KAAA8H,OAAA0Z,EAAA68D,EAAA,IAAA7oD,EAAAs2E,GACAG,EAAAjsG,KAAA8H,OAAA4Z,EAAA28D,EAAA,IAAA7oD,EAAAu2E,GACAG,EAAAF,EAAAd,EAAA,GACAiB,EAAAF,EAAAf,EAAA,GAUA,OARAW,GACAK,EAAAlsG,KAAAG,KAAA+rG,GAAA,EACAC,EAAAnsG,KAAAG,KAAAgsG,GAAA,IAEAD,EAAAlsG,KAAA8H,MAAAokG,GACAC,EAAAnsG,KAAA8H,MAAAqkG,IAGS9K,GAAuB35F,EAAAwkG,EAAAC,EAAA7K,IAWhCsJ,GAAQtrG,UAAA8sG,yBAAA,SAAA/uF,EAAA3V,EAAA45F,GACR,OAAAhkG,KAAAouG,uBACAruF,EAAA,GAAAA,EAAA,GAAA3V,GAAA,EAAA45F,IAOAsJ,GAAQtrG,UAAA+sG,uBAAA,SAAA78B,GACR,OAAAlyE,KAAAo1C,aAAA88B,EAAA,KAWAo7B,GAAQtrG,UAAAgqG,YAAA,SAAA5hG,GACR,OAAApK,KAAA2tG,UACA3tG,KAAA2tG,UAEA3tG,KAAAytG,WAAArjG,IAQAkjG,GAAQtrG,UAAAsiG,iBAAA,SAAAl6F,GACR,OAAApK,KAAA6tG,gBAGA7tG,KAAA6tG,gBAAAzjG,GAFA,MAcAkjG,GAAQtrG,UAAA+1E,kBAAA,SAAA7/C,EAAAkhB,GACR,IAAAhvC,EAAU2f,GAAiB/pB,KAAAo1C,aAAAld,EAAAkhB,GAAA,GAC3B,OAAS3iB,GAAKrsB,EAAApK,KAAAs1C,QAAAt1C,KAAAg6C,UAOdszD,GAAQtrG,UAAAgsG,qBAAA,SAAAn2E,GAGR,IAFA,IAAAx0B,EAAArD,KAAAo1C,aAAA/xC,OACA2rG,EAAA,IAAAn7F,MAAAxQ,GACA+G,EAAApK,KAAAs1C,QAA4BlrC,EAAA/G,IAAY+G,EACxC4kG,EAAA5kG,GAAApK,KAAAmzE,0BAAAt7C,EAAAztB,GAEApK,KAAA6tG,gBAAAmB,GAIe,IAAAC,GAAA,GClhBR,SAAAC,GAAA3oE,GACP,IAAApC,EAAAoC,EAAAtC,qBAKA,OAJAE,IACAA,EAAAgrE,GAAA5oE,GACAA,EAAArC,mBAAAC,IAEAA,EAUO,SAASirE,GAAKjrE,EAAA+tC,EAAA3rC,GACrB,IAAAn8B,EAAA8nE,EAAA,GACAp6C,EAAAqM,EAAAkvC,mBAAAnB,GACA1C,EAAA6/B,GAAA9oE,GACA,GAAOzK,GAAkB0zC,EAAA13C,GAMzB,OAAAo6C,EALA,IAAAzC,EAAqBhyC,GAAQ+xC,GAC7BE,EAAAhtE,KAAAG,MAAA2sE,EAAA,GAAA13C,EAAA,IAAA23C,GAEA,OADA33C,EAAA,IAAA23C,EAAAC,EACAvrC,EAAA2qE,yBAAAh3E,EAAA1tB,GAgBO,SAAAklG,GAAAz3E,EAAA03E,EAAAC,EAAAC,GACP,IAAA5xE,OAAAzwB,IAAAqiG,IAAuD/0E,GAAMG,SAE7D5C,EAAAy3E,GAAA73E,EAAA03E,EAAAC,GAEA,WAAaP,GAAQ,CACrBp3E,SACAkpD,OAAYnjD,GAAS/F,EAAAgG,GACrB5F,cACA21E,SAAA4B,IAuBO,SAAAG,GAAAvxF,GAEP,IAAAwxF,EAAAxxF,GAAA,GAEAyZ,EAAA+3E,EAAA/3E,QAAoCuP,GAAa,aAAA1D,YAGjDmsE,EAAA,CACAh4E,SACAyd,QAAAs6D,EAAAt6D,QACAs4D,SAAAgC,EAAAhC,SACA31E,YAAAy3E,GACA73E,EACA+3E,EAAA51D,QACA41D,EAAAhC,WAGA,WAAaqB,GAAQY,GAarB,SAAAH,GAAA73E,EAAA03E,EAAAC,GAcA,IAbA,IAAAx1D,OAAA5sC,IAAAmiG,EACAA,EAAkBh5E,GAElBtxB,EAAey4B,GAAS7F,GACxBjP,EAAc6U,GAAQ5F,GAEtB+1E,EAAiB/sD,QAAMzzC,IAAAoiG,EACvBA,EAAmBh5E,IACnB8B,EAAA51B,KAAAC,IACAimB,EAAAglF,EAAA,GAAA3oG,EAAA2oG,EAAA,IAEAvqG,EAAA22C,EAAA,EACA/hB,EAAA,IAAApkB,MAAAxQ,GACA+G,EAAA,EAAiBA,EAAA/G,IAAY+G,EAC7B6tB,EAAA7tB,GAAAkuB,EAAA51B,KAAAkF,IAAA,EAAAwC,GAEA,OAAA6tB,EAaO,SAAAk3E,GAAA5oE,EAAAgpE,EAAAC,EAAAC,GACP,IAAA53E,EAAAw3E,GAAA9oE,GACA,OAAA+oE,GAAAz3E,EAAA03E,EAAAC,EAAAC,GAUO,SAAAJ,GAAA9oE,GACPA,EAAea,GAAab,GAC5B,IAAA1O,EAAA0O,EAAA7C,YACA,IAAA7L,EAAA,CACA,IAAAi4E,EAAA,IAAqBvtE,GAAgBC,GAAKP,SAAAsE,EAAA3C,mBAC1C/L,EAAawE,IAAcyzE,UAE3B,OAAAj4E,ECnIA,IAAIk4E,GAAU,SAAApU,GACd,SAAAqU,EAAAljG,GAEA6uF,EAAAp7F,KAAAP,KAAA,CACAmtD,aAAArgD,EAAAqgD,aACA4uC,wBAAAjvF,EAAAivF,wBACAx1D,WAAAz5B,EAAAy5B,WACAzQ,MAAAhpB,EAAAgpB,MACAmmE,MAAAnvF,EAAAmvF,QAOAj8F,KAAAiwG,aAAA7iG,IAAAN,EAAAojG,QAAApjG,EAAAojG,OAMAlwG,KAAAmwG,qBAAA/iG,IAAAN,EAAAorE,eACAprE,EAAAorE,eAAA,EAMAl4E,KAAAmkC,cAAA/2B,IAAAN,EAAAq3B,SAAAr3B,EAAAq3B,SAAA,KAMAnkC,KAAAowG,UAAA,IAAyB1L,GAAS53F,EAAAy2D,WAMlCvjE,KAAAqwG,QAAA,MAMArwG,KAAAg/D,KAAAlyD,EAAAnL,KAAA,GAMA3B,KAAAswG,YAAA,CAAwBz2B,WAAA/sE,EAAA+sE,YA2NxB,OAvNA8hB,IAAAqU,EAAAtjG,UAAAivF,GACAqU,EAAAhuG,UAAAlB,OAAAY,OAAAi6F,KAAA35F,WACAguG,EAAAhuG,UAAA+I,YAAAilG,EAKAA,EAAAhuG,UAAA48D,eAAA,WACA,OAAA5+D,KAAAowG,UAAAxxC,kBAOAoxC,EAAAhuG,UAAA4wE,YAAA,SAAArsC,EAAAwiB,GACA,IAAAqnD,EAAApwG,KAAAuwG,0BAAAhqE,GACA6pE,GACAA,EAAAx9B,YAAA7pB,IAaAinD,EAAAhuG,UAAAmwE,kBAAA,SAAA5rC,EAAAn8B,EAAA6nE,EAAAt/D,GACA,IAAAy9F,EAAApwG,KAAAuwG,0BAAAhqE,GACA,IAAA6pE,EACA,SAKA,IAFA,IACAz6E,EAAA4jD,EAAAi3B,EADA33B,GAAA,EAEA30D,EAAA+tD,EAAAnuE,KAAgCogB,GAAA+tD,EAAAhuE,OAAqBigB,EACrD,QAAAE,EAAA6tD,EAAAjuE,KAAkCogB,GAAA6tD,EAAA/tE,OAAqBkgB,EACvDm1D,EAAuB0qB,GAAS75F,EAAA8Z,EAAAE,GAChCosF,GAAA,EACAJ,EAAAvxC,YAAA0a,KACA5jD,EAA0Dy6E,EAAAnvG,IAAAs4E,GAC1Di3B,EAAA76E,EAAAI,aAAuCrD,GAASG,OAChD29E,IACAA,GAAA,IAAA79F,EAAAgjB,KAGA66E,IACA33B,GAAA,GAIA,OAAAA,GAOAm3B,EAAAhuG,UAAAw3E,uBAAA,SAAAjzC,GACA,UAQAypE,EAAAhuG,UAAAszB,OAAA,WACA,OAAAt1B,KAAAg/D,MAQAgxC,EAAAhuG,UAAAyuG,OAAA,SAAA9uG,GACA3B,KAAAg/D,OAAAr9D,IACA3B,KAAAg/D,KAAAr9D,EACA3B,KAAAwc,YAQAwzF,EAAAhuG,UAAA+3E,UAAA,SAAAxzC,GACA,OAAAvmC,KAAAiwG,SAMAD,EAAAhuG,UAAAo4C,eAAA,WACA,OAAAp6C,KAAAmkC,SAAAiW,kBAYA41D,EAAAhuG,UAAAoxE,QAAA,SAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACA,OAAWxwB,KAQXi6F,EAAAhuG,UAAAqwF,YAAA,WACA,OAAAryF,KAAAmkC,UAOA6rE,EAAAhuG,UAAA81E,yBAAA,SAAAvxC,GACA,OAAAvmC,KAAAmkC,SAGAnkC,KAAAmkC,SAFa+qE,GAAwB3oE,IAWrCypE,EAAAhuG,UAAAuuG,0BAAA,SAAAhqE,GACA,IAAAmqE,EAAA1wG,KAAAm6C,gBACA,OAAAu2D,IAAqBroE,GAAUqoE,EAAAnqE,GAC/B,KAEAvmC,KAAAowG,WAWAJ,EAAAhuG,UAAAm2E,kBAAA,SAAAx9B,GACA,OAAA36C,KAAAmwG,iBASAH,EAAAhuG,UAAAg3E,iBAAA,SAAA5uE,EAAAuwC,EAAApU,GACA,IAAApC,EAAAnkC,KAAA83E,yBAAAvxC,GACA2xC,EAAAl4E,KAAAm4E,kBAAAx9B,GACAizD,EAAmB/sD,GAAM1c,EAAA6nE,YAAA5hG,GAAApK,KAAAqwG,SACzB,UAAAn4B,EACA01B,EAEajtD,GAASitD,EAAA11B,EAAAl4E,KAAAqwG,UAatBL,EAAAhuG,UAAA2uG,+BAAA,SAAAz+B,EAAA0+B,GACA,IAAArqE,OAAAn5B,IAAAwjG,EACAA,EAAA5wG,KAAAm6C,gBACAhW,EAAAnkC,KAAA83E,yBAAAvxC,GAIA,OAHAvmC,KAAA8vE,YAAAvpC,EAAAxC,aACAmuC,EAAkBk9B,GAAKjrE,EAAA+tC,EAAA3rC,IAEZ89D,GAAgBnyB,EAAA/tC,GAAA+tC,EAAA,MAM3B89B,EAAAhuG,UAAAk6F,QAAA,WACAl8F,KAAAowG,UAAArtG,QACA/C,KAAAwc,WAWAwzF,EAAAhuG,UAAAsxE,QAAA,SAAAlpE,EAAA8Z,EAAAE,EAAAmiB,KAEAypE,EA/Qc,CAgRZ3T,IAQKwU,GAAA,SAAAn3F,GACP,SAAAm3F,EAAAt9F,EAAAoiB,GAEAjc,EAAAnZ,KAAAP,KAAAuT,GAOAvT,KAAA21B,OAQA,OAJAjc,IAAAm3F,EAAAnkG,UAAAgN,GACAm3F,EAAA7uG,UAAAlB,OAAAY,OAAAgY,KAAA1X,WACA6uG,EAAA7uG,UAAA+I,YAAA8lG,EAEAA,EAlBO,CAmBL/2F,GAEag3F,GAAA,GC3UAC,GAAA,CAOfC,cAAA,gBAQAC,YAAA,cAOAC,cAAA,iBCOIC,GAAO,SAAAnB,GACX,SAAAoB,EAAAtkG,GAEAkjG,EAAAzvG,KAAAP,KAAA,CACAmtD,aAAArgD,EAAAqgD,aACAoW,UAAAz2D,EAAAy2D,UACA2sC,OAAApjG,EAAAojG,OACA3pE,WAAAz5B,EAAAy5B,WACAzQ,MAAAhpB,EAAAgpB,MACAqO,SAAAr3B,EAAAq3B,SACA+zC,eAAAprE,EAAAorE,eACA+jB,MAAAnvF,EAAAmvF,MACApiB,WAAA/sE,EAAA+sE,WACAl4E,IAAAmL,EAAAnL,IACAo6F,wBAAAjvF,EAAAivF,0BAOA/7F,KAAAqxG,0BAAAvkG,EAAAwkG,gBAMAtxG,KAAAkjG,iBAAAp2F,EAAAo2F,iBAMAljG,KAAAsxG,gBAAAxkG,EAAAwkG,gBAAAxkG,EAAAwkG,gBAAA1vG,KAAA5B,MAA0F8sG,GAM1F9sG,KAAAgtG,KAAA,KAEAlgG,EAAAkgG,KACAhtG,KAAAuxG,QAAAzkG,EAAAkgG,MACKlgG,EAAAotF,KACLl6F,KAAAwxG,OAAA1kG,EAAAotF,KAGAptF,EAAAwkG,iBACAtxG,KAAAyxG,mBAAA3kG,EAAAwkG,gBAAAtxG,KAAAg/D,MAOAh/D,KAAA0xG,iBAAA,GA2HA,OAvHA1B,IAAAoB,EAAA1kG,UAAAsjG,GACAoB,EAAApvG,UAAAlB,OAAAY,OAAAsuG,KAAAhuG,WACAovG,EAAApvG,UAAA+I,YAAAqmG,EAOAA,EAAApvG,UAAA2vG,oBAAA,WACA,OAAA3xG,KAAAkjG,kBAQAkO,EAAApvG,UAAA4vG,mBAAA,WACA,OAAA5xG,KAAAsxG,iBAUAF,EAAApvG,UAAA6vG,QAAA,WACA,OAAA7xG,KAAAgtG,MAQAoE,EAAApvG,UAAA4zB,iBAAA,SAAAtb,GACA,IAGA/G,EAHAoiB,EAAuDrb,EAAA,OACvDk+D,EAAcviE,EAAM0f,GACpB4hD,EAAA5hD,EAAAI,WAEAwhD,GAAqB7kD,GAASE,SAC9B5yB,KAAA0xG,iBAAAl5B,IAAA,EACAjlE,EAAaw9F,GAAaC,eACrBx4B,KAAAx4E,KAAA0xG,0BACL1xG,KAAA0xG,iBAAAl5B,GACAjlE,EAAAgkE,GAA0B7kD,GAASrX,MAAS01F,GAAaG,cACzD35B,GAAsB7kD,GAASG,QAAA0kD,GAAwB7kD,GAASK,MACtDg+E,GAAaE,iBAAA7jG,QAEvBA,GAAAmG,GACAvT,KAAAqa,cAAA,IAA6Bw2F,GAAet9F,EAAAoiB,KAS5Cy7E,EAAApvG,UAAA8vG,oBAAA,SAAA5O,GACAljG,KAAAowG,UAAArtG,QACA/C,KAAAkjG,mBACAljG,KAAAwc,WASA40F,EAAApvG,UAAAyvG,mBAAA,SAAAH,EAAA3vG,GACA3B,KAAAsxG,kBACAtxG,KAAAowG,UAAA3L,qBACA,qBAAA9iG,EACA3B,KAAAywG,OAAA9uG,GAEA3B,KAAAwc,WASA40F,EAAApvG,UAAAwvG,OAAA,SAAAtX,GACA,IAAA8S,EAAAhtG,KAAAgtG,KAA2BD,GAAS7S,GACpCl6F,KAAAuxG,QAAAvE,IAQAoE,EAAApvG,UAAAuvG,QAAA,SAAAvE,GACAhtG,KAAAgtG,OACA,IAAArrG,EAAAqrG,EAAAhjG,KAAA,MACAhK,KAAAqxG,yBACArxG,KAAAyxG,mBAA8B/E,GAAmBM,EAAAhtG,KAAAmkC,UAAAxiC,GAEjD3B,KAAAywG,OAAA9uG,IAOAyvG,EAAApvG,UAAAsxE,QAAA,SAAAlpE,EAAA8Z,EAAAE,GACA,IAAAm1D,EAAuB0qB,GAAS75F,EAAA8Z,EAAAE,GAChCpkB,KAAAowG,UAAAvxC,YAAA0a,IACAv5E,KAAAowG,UAAAnvG,IAAAs4E,IAIA63B,EAlLW,CAmLTN,IAGaiB,GAAA,GCzJXC,GAAS,SAAAZ,GACb,SAAAa,EAAAnlG,GAEAskG,EAAA7wG,KAAAP,KAAA,CACAmtD,aAAArgD,EAAAqgD,aACAoW,UAAAz2D,EAAAy2D,UACA2sC,OAAApjG,EAAAojG,OACA3pE,WAAAz5B,EAAAy5B,WACAzQ,MAAAhpB,EAAAgpB,MACAqO,SAAAr3B,EAAAq3B,SACA++D,iBAAAp2F,EAAAo2F,iBACAp2F,EAAAo2F,iBAAAgP,GACAh6B,eAAAprE,EAAAorE,eACAo5B,gBAAAxkG,EAAAwkG,gBACApX,IAAAptF,EAAAotF,IACA8S,KAAAlgG,EAAAkgG,KACA/Q,MAAAnvF,EAAAmvF,MACApiB,WAAA/sE,EAAA+sE,WACAl4E,IAAAmL,EAAAnL,IACAo6F,wBAAAjvF,EAAAivF,0BAOA/7F,KAAAquE,iBACAjhE,IAAAN,EAAAuhE,YAAAvhE,EAAAuhE,YAAA,KAMAruE,KAAAmyG,eAAA/kG,IAAAN,EAAAqlG,UACArlG,EAAAqlG,UAA0BrO,GAM1B9jG,KAAAoyG,uBAAA,GAMApyG,KAAAqyG,sBAAA,GAMAryG,KAAAsyG,4BAAAxlG,EAAAylG,2BAMAvyG,KAAAwyG,0BAAA,EA6QA,OA1QApB,IAAAa,EAAAvlG,UAAA0kG,GACAa,EAAAjwG,UAAAlB,OAAAY,OAAA0vG,KAAApvG,WACAiwG,EAAAjwG,UAAA+I,YAAAknG,EAKAA,EAAAjwG,UAAA48D,eAAA,WACA,IAAStC,GACT,OAAA80C,EAAApvG,UAAA48D,eAAAr+D,KAAAP,MAEA,GAAAA,KAAAowG,UAAAxxC,iBACA,SAEA,QAAAj9D,KAAA3B,KAAAoyG,uBACA,GAAApyG,KAAAoyG,uBAAAzwG,GAAAi9D,iBACA,SAIA,UAMAqzC,EAAAjwG,UAAA4wE,YAAA,SAAArsC,EAAAwiB,GACA,GAASuT,GAAT,CAIA,IAAAm2C,EAAAzyG,KAAAuwG,0BAAAhqE,GAGA,QAAAyZ,KADAhgD,KAAAowG,UAAAx9B,YAAA5yE,KAAAowG,WAAAqC,EAAA1pD,EAAA,IACA/oD,KAAAoyG,uBAAA,CACA,IAAAhC,EAAApwG,KAAAoyG,uBAAApyD,GACAowD,EAAAx9B,YAAAw9B,GAAAqC,EAAA1pD,EAAA,UARAqoD,EAAApvG,UAAA4wE,YAAAryE,KAAAP,KAAAumC,EAAAwiB,IAeAkpD,EAAAjwG,UAAAw3E,uBAAA,SAAAjzC,GACA,OAAQ+1B,IACRt8D,KAAAm6C,iBAAA5T,IAA+C8B,GAAUroC,KAAAm6C,gBAAA5T,GACzD,EAEAvmC,KAAA0yG,aAOAT,EAAAjwG,UAAA0wG,UAAA,WACA,UAMAT,EAAAjwG,UAAA+3E,UAAA,SAAAxzC,GACA,QAAQ+1B,IACRt8D,KAAAm6C,iBAAA5T,IAA+C8B,GAAUroC,KAAAm6C,gBAAA5T,KAGzD6qE,EAAApvG,UAAA+3E,UAAAx5E,KAAAP,KAAAumC,IAOA0rE,EAAAjwG,UAAA81E,yBAAA,SAAAvxC,GACA,IAAS+1B,GACT,OAAA80C,EAAApvG,UAAA81E,yBAAAv3E,KAAAP,KAAAumC,GAEA,IAAAmqE,EAAA1wG,KAAAm6C,gBACA,IAAAn6C,KAAAmkC,UAAAusE,IAAuCroE,GAAUqoE,EAAAnqE,GAE5C,CACL,IAAAosE,EAAoB18F,EAAMswB,GAI1B,OAHAosE,KAAA3yG,KAAAqyG,wBACAryG,KAAAqyG,sBAAAM,GAA8CzD,GAAwB3oE,IAGRvmC,KAAAqyG,sBAAAM,GAP9D,OAAA3yG,KAAAmkC,UAeA8tE,EAAAjwG,UAAAuuG,0BAAA,SAAAhqE,GACA,IAAS+1B,GACT,OAAA80C,EAAApvG,UAAAuuG,0BAAAhwG,KAAAP,KAAAumC,GAEA,IAAAmqE,EAAA1wG,KAAAm6C,gBAAwC,IAAAu2D,GAAkBroE,GAAUqoE,EAAAnqE,GACpE,OAAAvmC,KAAAowG,UAEA,IAAAuC,EAAoB18F,EAAMswB,GAI1B,OAHAosE,KAAA3yG,KAAAoyG,yBACApyG,KAAAoyG,uBAAAO,GAAA,IAAmDjO,GAAS1kG,KAAAowG,UAAA7xC,gBAE5Dv+D,KAAAoyG,uBAAAO,IAcAV,EAAAjwG,UAAA4wG,YAAA,SAAAxoG,EAAA8Z,EAAAE,EAAAu2B,EAAApU,EAAA5kC,GACA,IAAAuwE,EAAA,CAAA9nE,EAAA8Z,EAAAE,GACAyuF,EAAA7yG,KAAA2wG,+BACAz+B,EAAA3rC,GACAusE,EAAAD,EACA7yG,KAAAsxG,gBAAAuB,EAAAl4D,EAAApU,QAAAn5B,EACAuoB,EAAA,IAAA31B,KAAAmyG,UACAjgC,OACA9kE,IAAA0lG,EAA8BpgF,GAASC,KAAQD,GAASI,WACxD1lB,IAAA0lG,IAAA,GACA9yG,KAAAquE,YACAruE,KAAAkjG,iBACAljG,KAAAswG,aAIA,OAHA36E,EAAAh0B,MACI2R,EAAMqiB,EAAO/a,EAASC,OAC1B7a,KAAA41B,iBAAA51B,MACA21B,GAMAs8E,EAAAjwG,UAAAoxE,QAAA,SAAAhpE,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACA,IAAAiC,EAA+ExoC,KAAAm6C,gBAC/E,GAASmiB,IACT9zB,GAAAjC,IAA4C8B,GAAUG,EAAAjC,GAEjD,CACL,IAEA5Q,EAFA+0B,EAAA1qD,KAAAuwG,0BAAAhqE,GACA2rC,EAAA,CAAA9nE,EAAA8Z,EAAAE,GAEAm1D,EAAyB2qB,GAAMhyB,GAC/BxnB,EAAAmU,YAAA0a,KACA5jD,EAAwD+0B,EAAAzpD,IAAAs4E,IAExD,IAAA53E,EAAA3B,KAAAs1B,SACA,GAAAK,KAAAh0B,OACA,OAAAg0B,EAEA,IAAAy8D,EAAApyF,KAAA83E,yBAAAtvC,GACAmiE,EAAA3qG,KAAA83E,yBAAAvxC,GACAmtD,EACA1zF,KAAA2wG,+BAAAz+B,EAAA3rC,GACAwsE,EAAA,IAA0B5G,GAC1B3jE,EAAA4pD,EACA7rD,EAAAokE,EACAz4B,EAAAwhB,EAAA1zF,KAAAm4E,kBAAAx9B,GACA36C,KAAA0yG,YACA,SAAAtoG,EAAA8Z,EAAAE,EAAAu2B,GACA,OAAA36C,KAAAgzG,gBAAA5oG,EAAA8Z,EAAAE,EAAAu2B,EAAAnS,IACW5mC,KAAA5B,WAAAsyG,4BACXtyG,KAAAwyG,0BAUA,OATAO,EAAApxG,MAEAg0B,GACAo9E,EAAApQ,YAAAhtE,EACAo9E,EAAAjQ,sBACAp4C,EAAA4U,QAAAia,EAAAw5B,IAEAroD,EAAAj5C,IAAA8nE,EAAAw5B,GAEAA,EAnCA,OAAA/yG,KAAAgzG,gBAAA5oG,EAAA8Z,EAAAE,EAAAu2B,EAAAnS,GAAAjC,IAiDA0rE,EAAAjwG,UAAAgxG,gBAAA,SAAA5oG,EAAA8Z,EAAAE,EAAAu2B,EAAApU,GACA,IAAA5Q,EAAA,KACA4jD,EAAuB0qB,GAAS75F,EAAA8Z,EAAAE,GAChCziB,EAAA3B,KAAAs1B,SACA,GAAAt1B,KAAAowG,UAAAvxC,YAAA0a,IAKA,GADA5jD,EAAA31B,KAAAowG,UAAAnvG,IAAAs4E,GACA5jD,EAAAh0B,OAAA,CAIA,IAAAghG,EAAAhtE,EACAA,EAAA31B,KAAA4yG,YAAAxoG,EAAA8Z,EAAAE,EAAAu2B,EAAApU,EAAA5kC,GAGAghG,EAAA5sE,YAAsCrD,GAASC,KAE/CgD,EAAAgtE,0BAEAhtE,EAAAgtE,cAEAhtE,EAAAmtE,sBACA9iG,KAAAowG,UAAA9wC,QAAAia,EAAA5jD,SAnBAA,EAAA31B,KAAA4yG,YAAAxoG,EAAA8Z,EAAAE,EAAAu2B,EAAApU,EAAA5kC,GACA3B,KAAAowG,UAAA3+F,IAAA8nE,EAAA5jD,GAqBA,OAAAA,GAQAs8E,EAAAjwG,UAAAixG,2BAAA,SAAAprD,GACA,GAASyU,IACTt8D,KAAAwyG,0BAAA3qD,EADA,CAKA,QAAA7H,KADAhgD,KAAAwyG,yBAAA3qD,EACA7nD,KAAAoyG,uBACApyG,KAAAoyG,uBAAApyD,GAAAj9C,QAEA/C,KAAAwc,YAeAy1F,EAAAjwG,UAAAkxG,yBAAA,SAAA3sE,EAAA4sE,GACA,GAAQ72C,GAA0B,CAClC,IAAA82C,EAAiBhsE,GAAab,GAC9B,GAAA6sE,EAAA,CACA,IAAAT,EAAsB18F,EAAMm9F,GAC5BT,KAAA3yG,KAAAqyG,wBACAryG,KAAAqyG,sBAAAM,GAAAQ,MAMAlB,EAvUa,CAwUXF,IAOF,SAAAG,GAAAmB,EAAAl+F,GAC+Ck+F,EAAA52C,WAAAtnD,MAGhC,IAAAm+F,GAAA,GCnVXC,GAAG,SAAAtB,GACP,SAAA3xE,EAAAliB,GACA,IAAAtR,EAAAsR,GAAA,GACAmoB,OAAAn5B,IAAAN,EAAAy5B,WACAz5B,EAAAy5B,WAAA,YAEApC,OAAA/2B,IAAAN,EAAAq3B,SAAAr3B,EAAAq3B,SACMwrE,GAAS,CACf93E,OAAgBw3E,GAAoB9oE,GACpCyT,QAAAltC,EAAAktC,QACA1E,QAAAxoC,EAAAwoC,QACAs4D,SAAA9gG,EAAA8gG,WAGAqE,EAAA1xG,KAAAP,KAAA,CACAmtD,aAAArgD,EAAAqgD,aACAoW,UAAAz2D,EAAAy2D,UACA8K,YAAAvhE,EAAAuhE,YACA6hC,OAAApjG,EAAAojG,OACA3pE,aACAgsE,2BAAAzlG,EAAAylG,2BACApuE,WACA++D,iBAAAp2F,EAAAo2F,iBACAhrB,eAAAprE,EAAAorE,eACAo5B,gBAAAxkG,EAAAwkG,gBACApX,IAAAptF,EAAAotF,IACA8S,KAAAlgG,EAAAkgG,KACA/Q,WAAA7uF,IAAAN,EAAAmvF,OAAAnvF,EAAAmvF,MACApiB,WAAA/sE,EAAA+sE,WACAkiB,wBAAAjvF,EAAAivF,0BASA,OAJAkW,IAAA3xE,EAAA5zB,UAAAulG,GACA3xE,EAAAt+B,UAAAlB,OAAAY,OAAAuwG,KAAAjwG,WACAs+B,EAAAt+B,UAAA+I,YAAAu1B,EAEAA,EAtCO,CAuCLgzE,IAEaE,GAAA,GC5FRC,GAAA,2FAkCPpS,GAAA,SAAA/gE,GACA,SAAA+gE,EAAAjjF,GAEA,IAEA+uC,EAFArgD,EAAAsR,GAAA,GAIA+uC,OADA//C,IAAAN,EAAAqgD,aACArgD,EAAAqgD,aAEA,CAAAsmD,IAGA,IAAAplC,OAAAjhE,IAAAN,EAAAuhE,YACAvhE,EAAAuhE,YAAA,YAEA6rB,OAAA9sF,IAAAN,EAAAotF,IACAptF,EAAAotF,IAAA,uDAEA55D,EAAA//B,KAAAP,KAAA,CACAmtD,eACAoW,UAAAz2D,EAAAy2D,UACA8K,cACA6hC,YAAA9iG,IAAAN,EAAAojG,QAAApjG,EAAAojG,OACAl2D,aAAA5sC,IAAAN,EAAAktC,QAAAltC,EAAAktC,QAAA,GACAu4D,2BAAAzlG,EAAAylG,2BACArP,iBAAAp2F,EAAAo2F,iBACAhJ,MACA+B,MAAAnvF,EAAAmvF,MACAF,yBAAA,IASA,OAJAz7D,IAAA+gE,EAAA30F,UAAA4zB,GACA+gE,EAAAr/F,UAAAlB,OAAAY,OAAA4+B,KAAAt+B,WACAq/F,EAAAr/F,UAAA+I,YAAAs2F,EAEAA,EArCA,CAsCEmS,IAEaE,GAAA,GCpCfC,GAAA,SAAAC,GACA,SAAAD,EAAA7mG,GACA8mG,EAAArzG,KAAAP,KAAA,CACA63B,OAAA/qB,EAAA+qB,OACAkpD,OAAAj0E,EAAAi0E,OACAwsB,QAAAzgG,EAAAygG,QACAt1E,YAAAnrB,EAAAmrB,YACA21E,SAAA9gG,EAAA8gG,SACAF,UAAA5gG,EAAA4gG,UACAK,MAAAjhG,EAAAihG,QAOA/tG,KAAA6zG,WAAA/mG,EAAAgnG,UAwBA,OArBAF,IAAAD,EAAAjnG,UAAAknG,GACAD,EAAA3xG,UAAAlB,OAAAY,OAAAkyG,KAAA5xG,WACA2xG,EAAA3xG,UAAA+I,YAAA4oG,EAMAA,EAAA3xG,UAAA+xG,YAAA,SAAA3pG,GACA,OAAApK,KAAA6zG,WAAAzpG,IAQAupG,EAAA3xG,UAAAgyG,aAAA,WACA,OAAAh0G,KAAA6zG,YAGAF,EAxCA,CAyCE1E,IAGagF,GAAA,GCxFA,IAAAC,GAAA,CACfC,IAAA,MACAC,KAAA,QCGO,SAAAC,GAAAC,EAAAC,GACP,IAAAC,EAAA,GAEA1zG,OAAA+X,KAAA07F,GAAA3lG,QAAA,SAAAjL,GACA,OAAA4wG,EAAA5wG,SAAAyJ,IAAAmnG,EAAA5wG,IACA6wG,EAAA9uG,KAAA/B,EAAA,IAAA8wG,mBAAAF,EAAA5wG,OAGA,IAAA+wG,EAAAF,EAAAxqG,KAAA,KAKA,OAHAsqG,IAAAh1C,QAAA,YAEAg1C,GAAA,IAAAA,EAAAlxG,QAAA,KAAAkxG,EAAA,IAAAA,EAAA,IACAA,EAAAI,ECqCA,IAAIC,GAAI,SAAA1C,GACR,SAAA2C,EAAA9nG,GAIA,IAAA+nG,OAAAznG,IAAAN,EAAA+nG,gBAC4D/nG,EAAA,gBACtDonG,GAAmBC,IAIzBhwE,EAAAr3B,EAAAq3B,SAEA6oE,EAAAlgG,EAAAkgG,UACA5/F,IAAA4/F,QAAA5/F,IAAAN,EAAAotF,MACA8S,EAAaD,GAASjgG,EAAAotF,MAGtB+X,EAAA1xG,KAAAP,KAAA,CACAmtD,aAAArgD,EAAAqgD,aACAoW,UAAAz2D,EAAAy2D,UACA8K,YAAAvhE,EAAAuhE,YACA9nC,WAAAz5B,EAAAy5B,WACAgsE,2BAAAzlG,EAAAylG,2BACAJ,UAAArlG,EAAAqlG,UACAhuE,WACA++D,iBAAAp2F,EAAAo2F,iBACAhrB,eAAAprE,EAAAorE,eACAo5B,gBAAuBxE,GACvBE,OACA/Q,WAAA7uF,IAAAN,EAAAmvF,OAAAnvF,EAAAmvF,MACApiB,WAAA/sE,EAAA+sE,aAOA75E,KAAA80G,cAAA1nG,IAAAN,EAAAioG,QAAAjoG,EAAAioG,QAAA,QAMA/0G,KAAAy9F,aAAArwF,IAAAN,EAAAtK,OAAAsK,EAAAtK,OAAA,aAMAxC,KAAAg1G,iBAAA5nG,IAAAN,EAAAmoG,WAAAnoG,EAAAmoG,WAAA,GAMAj1G,KAAA8xE,OAAAhlE,EAAAkxC,MAMAh+C,KAAAk1G,WAAApoG,EAAAqoG,UAMAn1G,KAAAo5F,OAAAtsF,EAAAmD,MASAjQ,KAAAo1G,iBAAAP,EAEA70G,KAAAywG,OAAAzwG,KAAAq1G,wBAEArI,KAAA3pG,OAAA,IACArD,KAAAsxG,gBAA6BzE,GAA0BG,EAAA14F,IAAAghG,GAAA1zG,KAAA5B,SAoHvD,OA/GAiyG,IAAA2C,EAAAloG,UAAAulG,GACA2C,EAAA5yG,UAAAlB,OAAAY,OAAAuwG,KAAAjwG,WACA4yG,EAAA5yG,UAAA+I,YAAA6pG,EAOAA,EAAA5yG,UAAAuvG,QAAA,SAAAvE,GACAhtG,KAAAgtG,OACA,IAAArrG,EAAAqrG,EAAAhjG,KAAA,MACAhK,KAAAyxG,mBAA4B5E,GAA0BG,EAAA14F,IAAAghG,GAAA1zG,KAAA5B,QAAA2B,IAUtDizG,EAAA5yG,UAAAuzG,cAAA,WACA,OAAAv1G,KAAAg1G,aASAJ,EAAA5yG,UAAAy+F,UAAA,WACA,OAAAzgG,KAAAy9F,SASAmX,EAAA5yG,UAAAowE,SAAA,WACA,OAAApyE,KAAA8xE,QASA8iC,EAAA5yG,UAAAwzG,aAAA,WACA,OAAAx1G,KAAAk1G,YASAN,EAAA5yG,UAAAyzG,mBAAA,WACA,OAAAz1G,KAAAo1G,kBASAR,EAAA5yG,UAAA03F,SAAA,WACA,OAAA15F,KAAAo5F,QASAwb,EAAA5yG,UAAA0zG,WAAA,WACA,OAAA11G,KAAA80G,UAQAF,EAAA5yG,UAAAqzG,qBAAA,WACA,IAAAj1G,EAAA,EACA6qB,EAAA,GACA,QAAAtpB,KAAA3B,KAAAg1G,YACA/pF,EAAA7qB,KAAAuB,EAAA,IAAA3B,KAAAg1G,YAAArzG,GAEA,OAAAspB,EAAAjhB,KAAA,MASA4qG,EAAA5yG,UAAA2zG,iBAAA,SAAAV,GACIl+F,EAAM/W,KAAAg1G,YAAAC,GACVj1G,KAAAywG,OAAAzwG,KAAAq1G,yBAGAT,EAtMQ,CAuMNtB,IAEasC,GAAA,GAwMf,SAAAN,GAAAjJ,GACA,IAAAwI,EAAA70G,KAAAo1G,iBAIAn3C,EAAA,CACAjgB,MAAAh+C,KAAA8xE,OACA7hE,MAAAjQ,KAAAo5F,OACAyc,cAAA71G,KAAAk1G,YAGAL,GAAyBX,GAAmBC,KACxCp9F,EAAMknD,EAAA,CACV63C,QAAA,OACAC,QAAA,UACAC,QAAAh2G,KAAA80G,SACAmB,OAAAj2G,KAAAy9F,UAQA4O,EAAAwI,GAAiCX,GAAmBC,IAChDE,GAAYhI,EAAApuC,GAChBouC,EAAA/sC,QAAA,cAAgC,SAAA9+D,EAAA0B,GAChC,OAAAA,EAAAoe,gBAAA29C,IAAA/7D,EAAAoe,eAAA9f,IAGA,IAAA2jC,EACAnkC,KAAA,SACAi1G,EAAAj1G,KAAAg1G,YAEA,gBAOA9iC,EAAAv3B,EAAApU,GACA,GAAA2rC,EAEO,CACP,IAAAgkC,EAAA,CACAC,WAAAhyE,EAAA4vE,YAAA7hC,EAAA,IACAkkC,QAAAlkC,EAAA,GACAmkC,SAAAnkC,EAAA,MAEQn7D,EAAMm/F,EAAAjB,GACd,IAAA/a,EAAAmS,EAQA,OANAnS,EADA2a,GAA+BX,GAAmBC,IAClCE,GAAYna,EAAAgc,GAE5Bhc,EAAA56B,QAAA,cAAuC,SAAA9+D,EAAA0B,GACvC,OAAAg0G,EAAAh0G,KAGAg4F,ICjfA,MAAAoc,GAAA,CAEAC,MAAA,QAEAC,UAAA,YAEAC,KAAA,OAEAC,KAAA,OAEAC,OAAA,SAEAC,WAAA,aAEAC,WAAA,aAEAC,KAAA,OAEAC,UAAA,YAEAC,KAAA,OAEAC,OAAA,SAEAC,OAAA,SAEAC,OAAA,UASAC,GAAA,CAEAC,QAAA,UAEAC,QAAA,UAEAC,OAAA,UAYA,SAAAC,GAAAt/E,EAAAu/E,EAAAC,GACA,IAAAC,EAAA,QAEAC,EAAAC,GAAAH,GACAr9E,EAAAnC,EAAAu/E,EAAAE,EAAAC,EAEA,OADAv9E,EAAA,EAAAA,EACAA,EAWA,SAAAy9E,GAAAz9E,EAAAo9E,EAAAC,GACA,IAAAC,EAAA,QACAI,EAAA/3G,KAAA63G,mBAAAH,GACAx/E,EAAAmC,EAAAo9E,EAAAE,EAAAI,EAEA,OADA7/E,EAAA,EAAAA,EACAA,EAUA,SAAA2/E,GAAAH,GACA,IACAE,EADAI,EAAA,QAEA,GAAAN,IAAApB,GAAAC,MACAqB,EAAA,OACG,GAAAF,IAAApB,GAAAK,OAEHiB,EAAA,EAAAl1G,KAAA+0B,GAAAugF,EAAA,SACG,GAAAN,IAAApB,GAAAE,UACHoB,EAAA,UACG,GAAAF,IAAApB,GAAAQ,KACHc,EAAA,oBACG,IAAAF,IAAApB,GAAAU,KAGH,OAAAY,EAFAA,EAAA,MAIA,OAAAA,EA0Be,MAAMK,WAAyB3E,GAG9C4E,YAAAprG,GAEA,GADAA,KAAA,QACAM,IAAAN,EAAAotF,IACA,OAGAptF,EAAAtK,OAAAsK,EAAAtK,OAAAsK,EAAAtK,OAAA,MACA,IAAA21G,EAAArrG,EAAAotF,IAAA,cAAAptF,EAAAtK,OAAA,IAEAsK,EAAAsrG,WAAAtrG,EAAAsrG,YAAAhB,GAAAC,QACAgB,MAAA,CACAlrD,aAAArgD,EAAAqgD,aACAoW,UAAAz2D,EAAAy2D,UACA8K,YAAAvhE,EAAAuhE,YACAiqC,KAAAxrG,EAAAwrG,KACApI,OAAApjG,EAAAojG,OACA3pE,WAAAz5B,EAAAy5B,WACAgsE,2BAAAzlG,EAAAylG,2BACAz8E,MAAAhpB,EAAAgpB,MACAq8E,UAAArlG,EAAAqlG,UACAhuE,SAAAr3B,EAAAq3B,SACA++D,iBAAAp2F,EAAAo2F,iBACAhrB,eAAAprE,EAAAorE,eACAo5B,kBACApX,IAAAptF,EAAAotF,IACA8S,KAAAlgG,EAAAkgG,KACA/Q,WAAA7uF,IAAAN,EAAAmvF,OAAAnvF,EAAAmvF,MACAsc,aAAAzrG,EAAAyrG,aACAC,SAAA1rG,EAAA0rG,WAEA1rG,EAAA2rG,YACAz4G,KAAAy4G,UAAA3rG,EAAA2rG,WAEAz4G,KAAA8M,UACA9M,KAAA04G,KAAA5rG,EAAAotF,IAEAl6F,KAAA24G,eAAA,EACA34G,KAAA44G,WAAA,EACA,IAAAC,EAAA74G,KAMA,SAAA84G,IACA,IAAAD,EAAA74G,KACAu0G,EAAA,GAuCA,OArCAA,EAAA,iBAAAnnG,IAAAN,EAAAisG,UAAAjsG,EAAAisG,SAEAxE,EAAA,oBAAAnnG,IAAAN,EAAAksG,aAAAlsG,EAAAksG,YACAzE,EAAA,uBAAAznG,EAAAyrG,cAEAM,EAAAN,aAAAhE,EAAA,gBACAA,EAAA,UAAAA,EAAA,gBAGAv0G,KAAA+gF,SACAwzB,EAAA,UAAAxa,KAAAkf,UAAA,CACA/0F,EAAAlkB,KAAA+gF,OAAA,GACA38D,EAAApkB,KAAA+gF,OAAA,MAIAj0E,EAAAosG,cACA3E,EAAA,eAAAxa,KAAAkf,UAAAnsG,EAAAosG,cAGApsG,EAAA0rG,WACAjE,EAAA,YAAAznG,EAAA0rG,SAAAhmG,YAGA1F,EAAAqsG,iBAMA5E,EAAA,wBALAA,EAAA,uBACAznG,EAAAssG,0BACA7E,EAAA,2BAAAsE,EAAAO,wBAAA5mG,aAMA1F,EAAAyrG,cAAAzrG,EAAAusG,cACA9E,EAAA,eAAAznG,EAAAusG,YAAA7mG,YAGA+hG,EAOA,SAAA+E,IAKA,OAJAt5G,KAAAu5G,iBACAv5G,KAAAw5G,UAAAC,EAAAl5G,KAAAP,MACAA,KAAAu5G,gBAAA,GAEAv5G,KAAAw5G,WAAAC,EAAAl5G,KAAAP,MAOA,SAAAy5G,IAEA,OADAz5G,KAAAw5G,UAAArB,EAAAuB,UAAAC,EAAAp5G,KAAAP,OACAA,KAAAw5G,UAOA,SAAAG,IACA35G,KAAA45G,cAAA55G,KAAA45G,eAAAd,EAAAv4G,KAAAP,MACA,IAAAu0G,EAAA,GACA,QAAA5yG,KAAA3B,KAAA45G,cACArF,EAAA7uG,KAAA/D,EAAA,IAAA3B,KAAA45G,cAAAj4G,IAEA,OAAA4yG,EAAAvqG,KAAA,KAGA,SAAAsnG,EAAAp/B,EAAAv3B,EAAApU,GACAsyE,EAAA10E,WACA00E,EAAAhhF,QACAghF,EAAA10E,SAAwB8zE,GAAgB4B,eAAA/sG,EAAA+qB,QACxCghF,EAAA5gF,cACA4gF,EAAA10E,SAAAlM,YAAA4gF,EAAA5gF,eAGA,cAAAsO,EAAA9C,YACAo1E,EAAA10E,SAA0B8zE,GAAgB4B,eAAA,yEAC1ChB,EAAAhhF,OAAA,yEAEA,cAAA0O,EAAA9C,YACAo1E,EAAA10E,SAA0B8zE,GAAgB4B,eAAA,mBAC1ChB,EAAAhhF,OAAA,qBAIAghF,EAAA93B,OAAA83B,EAAA10E,SAAAioC,UAAA,GACA,IAAAhiE,EAAA8nE,EAAA,GACAhuD,EAAAguD,EAAA,GACA9tD,GAAA8tD,EAAA,KACAh6C,EAAA2gF,EAAA10E,SAAA6R,cAAA5rC,GACAqtG,EAAA,GACAqC,EAAAvzE,EAAA5C,WACA,YAAAm2E,IACAA,EAAAxD,GAAAK,QAEA,MAAAmD,IACAA,EAAAxD,GAAAC,OAEA,IAAAl8E,EAAAm9E,GAAAt/E,EAAAu/E,EAAAqC,GACAlM,EAAqB/sD,GAAMg4D,EAAA10E,SAAA6nE,YAAA5hG,EAAAyuG,EAAAxI,UAC3B8H,EAAAmB,EAAA/4G,KAAAs4G,GACA3e,EAAAie,EAAAuB,UAAA,MAAAx1F,EAAA,MAAAE,EAAA,UAAAwpF,EAAA,cAAAA,EAAA,aAAAvzE,GAQA,OANAw+E,EAAAJ,YACAve,EAAA2e,EAAAJ,UAAAhE,mBAAAva,IAEA2e,EAAAN,eACAre,GAAA,YAAAnjD,MAAAgjE,WAEA7f,GAUAge,gBAAA8B,GACAh6G,KAAAg6G,WACAnmG,MAAA6I,QAAA1c,KAAAg6G,YACAh6G,KAAAg6G,WAAA,IAEAh6G,KAAAg6G,WAGAh6G,KAAAqa,cAAA,CACA9G,KAAA,qBACAlS,MAAA,CACA44G,aAAAj6G,KAAAg6G,SAAAC,gBAGAj6G,KAAAk6G,sBAOAhC,mBACAl4G,KAAA44G,UAAA54G,KAAA24G,cAAA,EACA34G,KAAAk6G,qBAOAhC,mBACAl4G,KAAA44G,UAAA54G,KAAA24G,cAAA,EACA34G,KAAAk6G,qBAOAhC,qBACA,IAAAW,EAAA74G,KAEA,SAAA64G,EAAAmB,SACA,OAEA,GAAAnB,EAAAD,YAAAC,EAAAF,eAAA34G,KAAA44G,UAAA,EACA,OAGA,IAAAqB,EAAApB,EAAAmB,SAAAC,aACA,GAAAA,GAAApB,EAAAD,UAAAqB,EAAA52G,QAAAw1G,EAAAD,WAAA,GACA,IAAAj4G,EAAAs5G,EAAApB,EAAAD,WAAAj4G,KACAqF,EAAA6yG,EAAAsB,sBAAAx5G,GACAqF,IACA6yG,EAAAF,cAAAE,EAAAD,UACAC,EAAAx+F,cAAA,CACA9G,KAAA,sBACAlS,MAAA,CACA+4G,YAAAH,EAAApB,EAAAD,gBAYAV,2BAAApxG,GACA9G,KAAA44G,UAAA9xG,EASAoxG,sBAAAnD,GACA,QAAAA,IACA/0G,KAAA45G,cAAA,eAAA7E,EACA/0G,KAAAu5G,gBAAA,EACAv5G,KAAAk8F,WACA,GAWAgc,0BAAAhe,EAAAmgB,GACA,IAAAvtG,EAAA,GACAA,EAAAotF,MACAptF,EAAAuhE,YAAA,YACA,IAAAx2C,EAAA,CAAAwiF,EAAAC,OAAAl1G,KAAAi1G,EAAAC,OAAAj9B,OAAAg9B,EAAAC,OAAAj1G,MAAAg1G,EAAAC,OAAA5pG,KACAunB,EAAAmiB,IAEA,SAAAA,IACA,IAKAmgE,EALAnyG,EAAA,GACAqvG,EAAA,GACA7uF,EAAAiP,EAAA,GAAAA,EAAA,GACA5yB,EAAA4yB,EAAA,GAAAA,EAAA,GACA+1E,EAAAhlF,GAAA3jB,EAAA2jB,EAAA3jB,EAGAs1G,EADA3M,IAAAhlF,EACAglF,EAAAyM,EAAAG,OAAA5xF,MAEAglF,EAAAyM,EAAAG,OAAAv1G,OAEA,IAAAgzB,EAAA,GACA6hF,EAAAxD,GAAAC,MAIA,GAHA8D,EAAAI,YAAAnE,GAAAK,SACAmD,EAAAxD,GAAAK,QAEA0D,EAAAK,sBAAAL,EAAAM,eAAAN,EAAAM,cAAAt3G,OAAA,EACA,QAAAjD,EAAA,EAAuBA,EAAAi6G,EAAAM,cAAAt3G,OAAqCjD,IAC5D63B,EAAAvyB,KAAAoyG,GAAAuC,EAAAM,cAAAv6G,GAAAq3G,EAAAqC,SAGA,QAAA15G,EAAA,EAAuBA,EAAAgI,EAAWhI,IAClC63B,EAAAvyB,KAAA60G,EAAA73G,KAAAkF,IAAA,EAAAxH,IAIA,SAAAw6G,EAAAt2G,EAAAC,GACA,OAAAA,EAAAD,EAGA,OAAA2zB,EAAAxuB,KAAAmxG,GAOA,OAJA9tG,EAAAq3B,SAAA,IAA2B8qE,GAAQ,CACnCp3E,SACAI,gBAEAnrB,EAYAorG,sBAAArgF,EAAAmiB,EAAA1E,EAAAs4D,EAAA7sB,GACA,IAAAoyB,EAAmBxD,GAAS,CAC5B93E,SACAmiB,UACA1E,UACAs4D,aAEA,WAAeqB,GAAQ,CACvBp3E,SACAyd,UACAyrC,SACA9oD,YAAAk7E,EAAA/4D,iBACAwzD,SAAAuF,EAAAnH,iBCleA,SAAA6O,GAAAC,GACA,MAAAv0E,EAAqBa,GAAO,aAE5BjD,EAAA,IAAuB8qE,GAAQ,CAC/BluB,OAAA,MACA9oD,YAAA,iDACA3jB,IAAA,SAAA4P,GACA,OAAAxhB,KAAAkF,IAAA,KAAAsc,OAGA,IAAA7M,EAAA,IAAmBi8F,GAAS,CAC5B/sE,aACApC,WACAmtE,gBAAA,SAAAp/B,GACA,MAAA9nE,EAAA8nE,EAAA,GACAhuD,EAAAguD,EAAA,GACA9tD,EAAA8tD,EAAA,GACAprE,EAAApE,KAAAG,KAAA,EAAAH,KAAAq4G,UACA,OAAAD,EAAAxZ,OAAAhiC,QAAA,OAAuCp7C,GACvCo7C,QAAA,OAAqBl7C,GACrBk7C,QAAA,OAAqBl1D,GACrBk1D,QAAA,WAAyBx4D,MAIzB,WAAa07F,GAAS,CACtBnrF,WAMA,SAAA2jG,GAAAF,GACA,MAAAG,EAAA,IACA10E,EAAqBa,GAAO,aAC5BooC,EAAAjpC,EAAA7C,YACA3F,EAAeN,GAAQ+xC,GAAAyrC,EACvB,IAAAnH,EAAA,GACA77E,EAAA,GACA,QAAA73B,EAAA,EAAiBA,GAAA,GAASA,IAC1B0zG,EAAA1zG,KACA63B,EAAA73B,GAAA29B,EAAAr7B,KAAAkF,IAAA,EAAAxH,GAEA,MAAA+jC,EAAA,IAAuB8vE,GAAQ,CAC/BlzB,OAAYzjD,GAAUkyC,GACtBv3C,cACA67E,cAEAoH,EAAAJ,EAAAxZ,OACA,WAAakB,GAAS,CACtBnrF,OAAA,IAAgBu+F,GAAI,CACpB1b,IAAAghB,EACA/2E,WACAoC,aACA28D,iBAAA,SAAAmQ,EAAAl+F,GACA,MAAA+8D,EAAAmhC,EAAAnhC,UACA,IAAAp8B,EAAAo8B,EAAA,GACAipC,EAAAjpC,EAAA,GACAkpC,IAAAlpC,EAAA,MACAmhC,EAAA52C,WAAAtnD,OAAsC+lG,gDAAuDC,SAAWC,UAAYtlE,aAGpHmmD,OAAA,IAsBO,SAAAof,GAAA15G,EAAA,OACP,IAAOkgG,GAAQlgG,GAAA,YAEf,MAAAm5G,EAAiB/Y,GAASpgG,GAC1B,IAAAq8C,EAAA,KACA,OAAAr8C,GACA,UACAq8C,EAAA,IAAkBwkD,GAAS,CAC3BnrF,OAAA,IAAoBq8F,KAEpB,MAEA,aACA,WACA11D,EAAA,IAAkBwkD,GAAS,CAC3BnrF,OAAA,IAAoBm8F,GAAG,CACvBtZ,IAAA4gB,EAAAxZ,WAGA,MACA,YACAtjD,EAAA68D,GAAAC,GACA,MACA,eACA98D,EAAA,IAAkBwkD,GAAS,CAC3BnrF,OAAA,IAAoB4gG,GAAgB,CACpC/d,IAAA4gB,EAAAxZ,SAEA/6D,WAAA,cAEA,MACA,cACAyX,EAAAg9D,GAAAF,GACA,MAEA,OAAA98D,ECpGA,IAAAs9D,GAAA,CACA36G,KAAA,SACAwK,MAAA,CAEAmqC,QAAA,CACA/hC,KAAAua,OACAzrB,QAAA,GAGA23C,QAAA,CACAzmC,KAAAua,OACAzrB,QAAA,IAGAyzC,KAAA,CACAviC,KAAAua,OACAzrB,QAAA,IAGAy1B,OAAA,CACAvkB,KAAAM,MACAqkG,UACA,iBAIA3kG,KAAA,CACAA,KAAAQ,OACA1R,QAAA,OAGAk5G,YAAA,CACAhoG,KAAAxJ,SACAmuG,UACA,OAAAsD,QAAAC,QAAA,OAIAC,QAAA,CAKAxD,cAAAnqG,GACA,MAAA4tG,EAAA37G,KAAA47G,kBAAA7tG,EAAA8R,OACA,GAAA87F,EAAA,CACA,MAAA/8F,EAAA5e,KAAA67G,eAAA9tG,EAAAwF,OAAA,GACAtQ,EAAA2b,EAAAk9F,KAAA74G,KAAAwiD,UAAAk2D,GACA14G,GACAA,EAAA6K,SAAAC,EAAA9K,EAAAwiD,WAYAyyD,MAAA3kG,EAAAkyC,EAAA33C,EAAA0qE,GAGA,IAAAujC,EAAA/7G,KAAA67G,eAAAtoG,GACAwoG,IACA/7G,KAAA67G,eAAAtoG,GAAA,GACAvT,KAAAsU,IAAA5B,GAAAa,EAAAvT,KAAAg8G,gBAEAh8G,KAAA67G,eAAAtoG,GAAA7N,KAAA,CAAA6N,OAAAkyC,UAAA33C,WAAA0qE,SAMA0/B,WAAA+D,GACA,IAAAj8G,KAAAsU,IAAA,OACA,MAAA4D,EAAA+jG,EAAAC,WACAp7G,OAAA+X,KAAAX,GAAAtJ,QAAAjN,IACA3B,KAAAm8G,MAAAx6G,EAAAs6G,EAAAx2D,QAAAvtC,EAAAvW,GAAAs6G,EAAAG,SAOAlE,aAAA+D,GACA,IAAAj8G,KAAAsU,IAAA,OACA,MAAA4D,EAAA+jG,EAAAC,WACA1jC,EAAAyjC,EAAAG,KACAt7G,OAAA+X,KAAAX,GAAAtJ,QAAAjN,IACA,MAAAid,EAAA5e,KAAA67G,eAAAl6G,IAAA,GACAid,EAAA1X,OAAA0X,EAAAy9F,UAAAp5G,KAAAu1E,SAAA,GACA,IAAA55D,EAAAvb,gBACArD,KAAA67G,eAAAl6G,GACA3B,KAAAsU,IAAAqI,GAAAhb,EAAA3B,KAAAg8G,mBAQA9D,WAAAzyD,GAEA,GAAAzlD,KAAAsuF,YAAA,CACA,MAAAj3E,EAAArX,KAAAsuF,YAAAzkC,YACAxyC,EAAAonF,WAAAh5C,OACA,CACA,IAAAspC,EAAA,IAAAqS,GAAA,CACA57C,SAAA,CAAAC,KAGAzlD,KAAAsuF,YAAA,IAAAsL,GAAA,CACAviF,OAAA03E,IAEA/uF,KAAAsU,IAAAwwC,SAAA9kD,KAAAsuF,eAOA4pB,cAAAzyD,GACA,IAAAzlD,KAAAsuF,YAAA,OACA,MAAAj3E,EAAArX,KAAAsuF,YAAAzkC,YACAxyC,EAAAmoF,cAAA/5C,IAOAyyD,kBAAAr4F,GACA,OAAA7f,KAAAsU,IAAA6wC,sBAAAtlC,EAAA,SAAA4lC,GACA,OAAAA,KAOAyyD,WAAA3kG,GACA,IAAAA,EAAA,OAEA,MAAAksC,EAAAz/C,KAAAsU,IAAAyrC,YAAAlhC,WACA+3D,EAAAn3B,EAAAq8D,KAAA99D,GAAA,SAAAA,EAAAzqC,MACAqjE,IACA52E,KAAAsU,IAAAi0C,YAAAquB,GACAA,EAAAv9D,mBAEArZ,KAAAsU,IAAAwwC,SAAAu2D,GAAA9nG,KAKA2kG,SACAl4G,KAAAsU,IAAAyzC,cAMAmwD,OAAA9vG,GACA,MAAA+f,EAAAnoB,KAAAsU,IAAAoyC,UACAv+B,EAAAouB,QAAA,CACAT,KAAAhoB,OAAAmrB,SAAA7wC,MAOA8vG,SACA,MAAA/vF,EAAAnoB,KAAAsU,IAAAoyC,UACA1mD,KAAAs8G,OAAAn0F,EAAAiuB,UAAA,IAMA8hE,UACA,MAAA/vF,EAAAnoB,KAAAsU,IAAAoyC,UACA1mD,KAAAs8G,OAAAn0F,EAAAiuB,UAAA,IAMA8hE,OAAAqE,GACA,MAAAp0F,EAAAnoB,KAAAsU,IAAAoyC,UACAv+B,EAAAouB,QAAA,CACAze,OAAAykF,MAIArE,UAEAl4G,KAAAw8G,OAAA,EAUAx8G,KAAA67G,eAAA,GAGA77G,KAAAu7G,cAAAkB,KAAAh9D,IACMqiD,GAAAriD,MAGNy4D,UACA,MAAAl6D,EAAAq9D,GAAAr7G,KAAAuT,MACA4U,EAAA,IAAAo0B,GAAA,CACAhW,WAAA,YACAzO,OAAA93B,KAAA83B,OACAge,KAAA91C,KAAA81C,KACAkE,QAAAh6C,KAAAg6C,QACA1E,QAAAt1C,KAAAs1C,UAEAt1C,KAAAsU,IAAA,IAAAy/E,GAAA,CACAt0C,OAAA,CAAAzB,GACA9yC,OAAAlL,KAAA08G,MAAApoG,IACA6T,OAEA+6B,SAAA,KAOAljD,KAAA28G,MAAA,QAAA38G,KAAAsU,IAAAtU,MAGAc,OAAA+X,KAAA7Y,KAAAk8G,YAAAttG,QAAAjN,IACA3B,KAAAsU,IAAA5B,GAAA/Q,EAAA3B,KAAAk8G,WAAAv6G,OAGAu2G,gBAEAp3G,OAAA+X,KAAA7Y,KAAAk8G,YAAAttG,QAAAjN,IACA3B,KAAAsU,IAAAqI,GAAAhb,EAAA3B,KAAAk8G,WAAAv6G,MAGA3B,KAAAsU,KAAAtU,KAAAsU,IAAA+E,oBC1RkMujG,GAAA,GCMnL,SAAAC,GACfC,EACAj1D,EACA/xC,EACAinG,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBAC,EArBAtwG,EAAA,oBAAAgwG,EACAA,EAAAhwG,QACAgwG,EAiDA,GA9CAj1D,IACA/6C,EAAA+6C,SACA/6C,EAAAgJ,kBACAhJ,EAAAuwG,WAAA,GAIAN,IACAjwG,EAAAwwG,YAAA,GAIAL,IACAnwG,EAAAywG,SAAA,UAAAN,GAIAC,GACAE,EAAA,SAAAn/C,GAEAA,EACAA,GACAj+D,KAAAw9G,QAAAx9G,KAAAw9G,OAAAC,YACAz9G,KAAA6G,QAAA7G,KAAA6G,OAAA22G,QAAAx9G,KAAA6G,OAAA22G,OAAAC,WAEAx/C,GAAA,qBAAAy/C,sBACAz/C,EAAAy/C,qBAGAV,GACAA,EAAAz8G,KAAAP,KAAAi+D,GAGAA,KAAA0/C,uBACA1/C,EAAA0/C,sBAAAvvD,IAAA8uD,IAKApwG,EAAA8wG,aAAAR,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAAz8G,KAAAP,UAAA69G,MAAAC,SAAAC,aACrBf,GAGAI,EACA,GAAAtwG,EAAAwwG,WAAA,CAGAxwG,EAAAkxG,cAAAZ,EAEA,IAAAa,EAAAnxG,EAAA+6C,OACA/6C,EAAA+6C,OAAA,SAAA4a,EAAAxE,GAEA,OADAm/C,EAAA78G,KAAA09D,GACAggD,EAAAx7C,EAAAxE,QAEK,CAEL,IAAAigD,EAAApxG,EAAAqxG,aACArxG,EAAAqxG,aAAAD,EACA,GAAA/gB,OAAA+gB,EAAAd,GACA,CAAAA,GAIA,OACAz9G,QAAAm9G,EACAhwG,WCnFA,IAAAsxG,GAAgBvB,GACdD,GACAvnG,EACAS,GACF,EACA,KACA,KACA,MAIeuoG,GAAAD,WChBfC,GAAGC,QAAA,SAAAC,GACHA,EAAAH,UAAgBC,GAAG19G,KAAO09G,KAEX,IAAAG,GAAA,GCLXC,GAAM,WAAgB,IAAAnpG,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBG,YAAA,yBACtG8oG,GAAe,GCuCfC,GAAK,SAAA5gF,EAAA6gF,GAMT5+G,KAAA6+G,OAAAD,EAMA5+G,KAAA8+G,aAAA,EAAwB56F,EAAA,EAAAE,EAAA,EAAAwE,MAAAmV,EAAA94B,OAAA84B,IAMxB/9B,KAAAy+D,SAAA,GAMAz+D,KAAAomE,SAAkB5pB,GAAqBze,KAMvC/9B,KAAAi9D,QAAAj9D,KAAAomE,SAAAzpB,QAOAgiE,GAAK38G,UAAAf,IAAA,SAAA++C,GACL,OAAAhgD,KAAAy+D,SAAAze,IAAA,MAaA2+D,GAAK38G,UAAAosD,IAAA,SAAApO,EAAAp3B,EAAA3jB,EAAA85G,EAAA5mG,GACL,QAAA/X,EAAA,EAAAgX,EAAApX,KAAA8+G,aAAAz7G,OAAgDjD,EAAAgX,IAAQhX,EAAA,CACxD,IAAA4+G,EAAAh/G,KAAA8+G,aAAA1+G,GACA,GAAA4+G,EAAAp2F,SAAA5oB,KAAA6+G,QACAG,EAAA/5G,UAAAjF,KAAA6+G,OAAA,CAEA,IAAA//C,EAAA,CACAmD,QAAA+8C,EAAA96F,EAAAlkB,KAAA6+G,OACA38C,QAAA88C,EAAA56F,EAAApkB,KAAA6+G,OACAx8C,MAAAriE,KAAAi9D,SAWA,OATAj9D,KAAAy+D,SAAAze,GAAA8e,EAGAigD,EAAAx+G,KAAA4X,EAAAnY,KAAAomE,SACA44C,EAAA96F,EAAAlkB,KAAA6+G,OAAAG,EAAA56F,EAAApkB,KAAA6+G,QAGA7+G,KAAAi/G,OAAA7+G,EAAA4+G,EAAAp2F,EAAA5oB,KAAA6+G,OAAA55G,EAAAjF,KAAA6+G,QAEA//C,GAKA,aAUA6/C,GAAK38G,UAAAi9G,OAAA,SAAAn4G,EAAAk4G,EAAAp2F,EAAA3jB,GACL,IAIAi6G,EAEAC,EANAC,EAAAJ,EAAAp2F,QACAy2F,EAAAL,EAAA/5G,SAOAm6G,EAAAC,GAGAH,EAAA,CACAh7F,EAAA86F,EAAA96F,EAAA0E,EACAxE,EAAA46F,EAAA56F,EACAwE,MAAAo2F,EAAAp2F,QACA3jB,OAAA+5G,EAAA/5G,QAIAk6G,EAAA,CACAj7F,EAAA86F,EAAA96F,EACAE,EAAA46F,EAAA56F,EAAAnf,EACA2jB,QACA3jB,OAAA+5G,EAAA/5G,UAEAjF,KAAAs/G,cAAAx4G,EAAAo4G,EAAAC,KAIAD,EAAA,CACAh7F,EAAA86F,EAAA96F,EAAA0E,EACAxE,EAAA46F,EAAA56F,EACAwE,MAAAo2F,EAAAp2F,QACA3jB,UAIAk6G,EAAA,CACAj7F,EAAA86F,EAAA96F,EACAE,EAAA46F,EAAA56F,EAAAnf,EACA2jB,MAAAo2F,EAAAp2F,MACA3jB,OAAA+5G,EAAA/5G,UAEAjF,KAAAs/G,cAAAx4G,EAAAo4G,EAAAC,KAaAR,GAAK38G,UAAAs9G,cAAA,SAAAx4G,EAAAo4G,EAAAC,GACL,IAAAI,EAAiC,CAAAz4G,EAAA,GACjCo4G,EAAAt2F,MAAA,GAAAs2F,EAAAj6G,OAAA,GACAs6G,EAAA75G,KAAAw5G,GAEAC,EAAAv2F,MAAA,GAAAu2F,EAAAl6G,OAAA,GACAs6G,EAAA75G,KAAAy5G,GAEAn/G,KAAA8+G,aAAA53G,OAAAM,MAAAxH,KAAA8+G,aAAAS,IAGe,IAAAC,GAAA,GCqEfC,GAAA,CACA,qBACA,QACA,YACA,aASO,SAAA1+F,GAAA47B,EAAA+iE,GAEP,IADA,IAAAtoG,EAAAqoG,GAAAp8G,OACAjD,EAAA,EAAiBA,EAAAgX,IAAQhX,EACzB,IACA,IAAA69D,EAAAthB,EAAA57B,WAAA0+F,GAAAr/G,GAAAs/G,GACA,GAAAzhD,EACA,OAAiD,EAE5C,MAAAlwD,IAIL,YASO,IAQP4xG,GAkBA,wBAAApvG,QAAA,0BAAAA,OACA,IACA,IAAQqvG,GAAsCjyG,SAAAqC,cAAA,UAC9C6vG,GAAA9+F,GAAwB6+F,GAAM,CAAGE,8BAAA,IACjCD,MACA,EACAF,GAA2CE,GAAAE,aAAAF,GAAAF,kBAC3CE,GAAAG,0BAEG,MAAAjyG,KC1SH,IAAAkyG,GAAA,IAMAC,IAAA,EAiBIC,GAAY,SAAA/hG,GAEhB,IAAAtR,EAAAsR,GAAA,GAOApe,KAAAogH,kBAAAhzG,IAAAN,EAAAuzG,YACAvzG,EAAAuzG,YAAAJ,GAOAjgH,KAAAsgH,cAAAlzG,IAAAN,EAAAyzG,QACAzzG,EAAAyzG,SAAA,GAAAL,GACAA,QAA6C9yG,IAAtBuyG,GACfA,GAAsB,KAO9B3/G,KAAA6+G,YAAAzxG,IAAAN,EAAA8xG,MAAA9xG,EAAA8xG,MAAA,EAMA5+G,KAAAwgH,SAAA,KAAuBhB,GAAKx/G,KAAAogH,aAAApgH,KAAA6+G,SAO5B7+G,KAAAygH,gBAAAzgH,KAAAogH,aAMApgH,KAAA0gH,YAAA,KAA0BlB,GAAKx/G,KAAAygH,gBAAAzgH,KAAA6+G,UAQ/BsB,GAAYn+G,UAAA2+G,QAAA,SAAA3gE,GAEZ,IAAAm2C,EAAAn2F,KAAA4gH,SAAA5gH,KAAAwgH,SAAAxgE,GAEA,IAAAm2C,EACA,YAEA,IAAA0qB,EAA0D7gH,KAAA4gH,SAAA5gH,KAAA0gH,YAAA1gE,GAE1D,OAAAhgD,KAAA8gH,YAAA3qB,EAAA0qB,IAUAV,GAAYn+G,UAAA4+G,SAAA,SAAAG,EAAA/gE,GACZ,QAAA5/C,EAAA,EAAAgX,EAAA2pG,EAAA19G,OAAsCjD,EAAAgX,IAAQhX,EAAA,CAC9C,IAAA4gH,EAAAD,EAAA3gH,GACA+1F,EAAA6qB,EAAA//G,IAAA++C,GACA,GAAAm2C,EACA,OAAAA,EAGA,aAWAgqB,GAAYn+G,UAAA8+G,YAAA,SAAA3qB,EAAA0qB,GACZ,OAEA5+C,QAAAk0B,EAAAl0B,QACAC,QAAAi0B,EAAAj0B,QACAG,MAAA8zB,EAAA9zB,MACA+zB,SAAAyqB,EAAAx+C,QA0BA89C,GAAYn+G,UAAAosD,IAAA,SAAApO,EAAAp3B,EAAA3jB,EAAA85G,EAAAkC,EAAA9oG,GACZ,GAAAyQ,EAAA5oB,KAAA6+G,OAAA7+G,KAAAsgH,UACAr7G,EAAAjF,KAAA6+G,OAAA7+G,KAAAsgH,SACA,YAIA,IAAAnqB,EAAAn2F,KAAAkhH,MAAA,EAAAlhE,EAAAp3B,EAAA3jB,EAAA85G,EAAA5mG,GACA,IAAAg+E,EACA,YAMA,IAAAgrB,OAAA/zG,IAAA6zG,EACAA,EAA4BxnG,EAE5BonG,EAA0D7gH,KAAAkhH,MAAA,EAC1DlhE,EAAAp3B,EAAA3jB,EAAAk8G,EAAAhpG,GAEA,OAAAnY,KAAA8gH,YAAA3qB,EAAA0qB,IAgBAV,GAAYn+G,UAAAk/G,KAAA,SAAAE,EAAAphE,EAAAp3B,EAAA3jB,EAAA85G,EAAA5mG,GACZ,IACA6oG,EAAA7qB,EAAA/1F,EAAAgX,EADA2pG,EAAA,EAAA/gH,KAAA0gH,YAAA1gH,KAAAwgH,SAEA,IAAApgH,EAAA,EAAAgX,EAAA2pG,EAAA19G,OAAkCjD,EAAAgX,IAAQhX,EAAA,CAG1C,GAFA4gH,EAAAD,EAAA3gH,GACA+1F,EAAA6qB,EAAA5yD,IAAApO,EAAAp3B,EAAA3jB,EAAA85G,EAAA5mG,GACAg+E,EACA,OAAAA,EACK,IAAAA,GAAA/1F,IAAAgX,EAAA,GAGL,IAAA2mB,OAAA,EACAqjF,GACArjF,EAAAr7B,KAAA8B,IAAA,EAAAxE,KAAAygH,gBAAAzgH,KAAAsgH,UACAtgH,KAAAygH,gBAAA1iF,IAEAA,EAAAr7B,KAAA8B,IAAA,EAAAxE,KAAAogH,aAAApgH,KAAAsgH,UACAtgH,KAAAogH,aAAAriF,GAEAijF,EAAA,IAAkBxB,GAAKzhF,EAAA/9B,KAAA6+G,QACvBkC,EAAAr7G,KAAAs7G,KAEA5pG,GAGA,aAGe,IAAAiqG,GAAA,GC9OAC,GAAA,CACfC,SAAA,WACAn/E,OAAA,UCCIo/E,GAAS,SAAAnlG,GACb,SAAAolG,EAAAp/C,EAAAltD,EAAA4oB,EAAAswC,EAAAmE,EAAAxP,GAEA3mD,EAAA9b,KAAAP,MAMAA,KAAA4kF,mBAAA,KAMA5kF,KAAA4mE,OAAAvE,GAAA,IAAAonB,MAEA,OAAApb,IACkCruE,KAAA,OAAAquE,eAOlCruE,KAAAi9D,QAAA+F,EACmCr1D,SAAAqC,cAAA,UACnC,KAMAhQ,KAAAg3F,OAAAh0B,EAMAhjE,KAAAqjG,mBAAA,KAMArjG,KAAA0hH,YAAAlvC,EAMAxyE,KAAAo1F,MAAAr3D,EAMA/9B,KAAAojG,KAAAjuF,EAMAnV,KAAA2hH,SAmKA,OA/JAtlG,IAAAolG,EAAA/0G,UAAA2P,GACAolG,EAAAz/G,UAAAlB,OAAAY,OAAA2a,KAAAra,WACAy/G,EAAAz/G,UAAA+I,YAAA02G,EAMAA,EAAAz/G,UAAA4/G,WAAA,WACA,QAAAx0G,IAAApN,KAAA2hH,UAAA3hH,KAAA0hH,cAA4D9kD,GAAU/pC,OAAA,CACtE7yB,KAAA2hH,UAAA,EACA,IAAA1jD,EAAoBzhB,GAAqB,KACzC,IACAyhB,EAAAmE,UAAApiE,KAAA4mE,OAAA,KACA3I,EAAA8W,aAAA,SACO,MAAAhnE,IACP/N,KAAA2hH,UAAA,GAGA,WAAA3hH,KAAA2hH,UAMAF,EAAAz/G,UAAA6/G,qBAAA,WACA7hH,KAAAqa,cAAuBO,EAASC,SAMhC4mG,EAAAz/G,UAAAyhG,kBAAA,WACAzjG,KAAA0hH,YAAuB9kD,GAAUvhD,MACjCrb,KAAAujG,iBACAvjG,KAAA6hH,wBAMAJ,EAAAz/G,UAAA0hG,iBAAA,WACA1jG,KAAA0hH,YAAuB9kD,GAAU/pC,OACjC7yB,KAAAo1F,QACAp1F,KAAA4mE,OAAAh+C,MAAA5oB,KAAAo1F,MAAA,GACAp1F,KAAA4mE,OAAA3hE,OAAAjF,KAAAo1F,MAAA,IAEAp1F,KAAAo1F,MAAA,CAAAp1F,KAAA4mE,OAAAh+C,MAAA5oB,KAAA4mE,OAAA3hE,QACAjF,KAAAujG,iBACAvjG,KAAA8hH,gBACA9hH,KAAA6hH,wBAOAJ,EAAAz/G,UAAAy6D,SAAA,SAAA9hB,GACA,OAAA36C,KAAAi9D,QAAAj9D,KAAAi9D,QAAAj9D,KAAA4mE,QAMA66C,EAAAz/G,UAAA0rF,cAAA,WACA,OAAA1tF,KAAA0hH,aAOAD,EAAAz/G,UAAAyjF,qBAAA,SAAA9qC,GACA,IAAA36C,KAAA4kF,mBACA,GAAA5kF,KAAA4hH,aAAA,CACA,IAAAh5F,EAAA5oB,KAAAo1F,MAAA,GACAnwF,EAAAjF,KAAAo1F,MAAA,GACAn3B,EAAsBzhB,GAAqB5zB,EAAA3jB,GAC3Cg5D,EAAA4lC,SAAA,IAAAj7E,EAAA3jB,GACAjF,KAAA4kF,mBAAA3mB,EAAAthB,YAEA38C,KAAA4kF,mBAAA5kF,KAAA4mE,OAGA,OAAA5mE,KAAA4kF,oBAMA68B,EAAAz/G,UAAAykD,QAAA,WACA,OAAAzmD,KAAAo1F,OAMAqsB,EAAAz/G,UAAA+/G,OAAA,WACA,OAAA/hH,KAAAojG,MAMAqe,EAAAz/G,UAAAqE,KAAA,WACA,GAAArG,KAAA0hH,aAA4B9kD,GAAUjqC,KAAA,CACtC3yB,KAAA0hH,YAAyB9kD,GAAUhqC,QACnC5yB,KAAAqjG,mBAAA,CACQtqF,EAAU/Y,KAAA4mE,OAAchsD,EAASS,MACzCrb,KAAAyjG,kBAAAzjG,MACQ+Y,EAAU/Y,KAAA4mE,OAAchsD,EAASY,KACzCxb,KAAA0jG,iBAAA1jG,OAEA,IACoCA,KAAA,OAAAmV,IAAAnV,KAAAojG,KAC7B,MAAAr1F,IACP/N,KAAAyjG,uBAQAge,EAAAz/G,UAAA8/G,cAAA,WACA,GAAA9hH,KAAAg3F,SAAAh3F,KAAA4hH,aAAA,CAIA5hH,KAAAi9D,QAAAr0C,MAAA5oB,KAAA4mE,OAAAh+C,MACA5oB,KAAAi9D,QAAAh4D,OAAAjF,KAAA4mE,OAAA3hE,OAEA,IAAA2N,EAAA5S,KAAAi9D,QAAAl8C,WAAA,MACAnO,EAAAwvD,UAAApiE,KAAA4mE,OAAA,KAQA,IANA,IAAAo7C,EAAApvG,EAAAmiE,aAAA,IAAA/0E,KAAA4mE,OAAAh+C,MAAA5oB,KAAA4mE,OAAA3hE,QACAY,EAAAm8G,EAAAn8G,KACA3E,EAAAlB,KAAAg3F,OAAA,OACAtzB,EAAA1jE,KAAAg3F,OAAA,OACAzyF,EAAAvE,KAAAg3F,OAAA,OAEA52F,EAAA,EAAAgX,EAAAvR,EAAAxC,OAAqCjD,EAAAgX,EAAQhX,GAAA,EAC7CyF,EAAAzF,IAAAc,EACA2E,EAAAzF,EAAA,IAAAsjE,EACA79D,EAAAzF,EAAA,IAAAmE,EAEAqO,EAAAqvG,aAAAD,EAAA,OAQAP,EAAAz/G,UAAAuhG,eAAA,WACAvjG,KAAAqjG,mBAAAz0F,QAAoCoJ,GACpChY,KAAAqjG,mBAAA,MAGAoe,EAlOa,CAmOX9mG,GAYK,SAASunG,GAAG7/C,EAAAltD,EAAA4oB,EAAAswC,EAAAmE,EAAAxP,GACnB,IAAAwL,EAAkBE,GAAcztE,IAAAkU,EAAAk5D,EAAArL,GAKhC,OAJAwL,IACAA,EAAA,IAAoBgzC,GAASn/C,EAAAltD,EAAA4oB,EAAAswC,EAAAmE,EAAAxP,GACzB0L,GAAcj9D,IAAA0D,EAAAk5D,EAAArL,EAAAwL,IAElBA,EAIe,IAAA2zC,GAAA,GC5PAC,GAAA,CACfznF,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,aC2CIunF,GAAI,SAAA5tB,GACR,SAAA6tB,EAAAlkG,GACA,IAAAtR,EAAAsR,GAAA,GAKAu/B,OAAAvwC,IAAAN,EAAA6wC,QAAA7wC,EAAA6wC,QAAA,EAKA/kB,OAAAxrB,IAAAN,EAAA8rB,SAAA9rB,EAAA8rB,SAAA,EAKAyB,OAAAjtB,IAAAN,EAAAutB,MAAAvtB,EAAAutB,MAAA,EAKAioD,OAAAl1E,IAAAN,EAAAw1E,gBACAx1E,EAAAw1E,eAEAmS,EAAAl0F,KAAAP,KAAA,CACA29C,UACA/kB,WACAyB,QACAioD,mBAOAtiF,KAAA06D,aAAAttD,IAAAN,EAAAg0B,OAAAh0B,EAAAg0B,OAAA,QAMA9gC,KAAAuiH,kBAAA,KAMAviH,KAAAwiH,mBAAAp1G,IAAAN,EAAA21G,aACA31G,EAAA21G,aAA6BL,GAAUvnF,SAMvC76B,KAAA0iH,mBAAAt1G,IAAAN,EAAA61G,aACA71G,EAAA61G,aAA6BrB,GAAeC,SAM5CvhH,KAAA4iH,mBAAAx1G,IAAAN,EAAA+1G,aACA/1G,EAAA+1G,aAA6BvB,GAAeC,SAM5CvhH,KAAAmjG,kBACA/1F,IAAAN,EAAAuhE,YAAAvhE,EAAAuhE,YAAA,KAKA,IAAAhM,OAAAj1D,IAAAN,EAAAg2G,IAAAh2G,EAAAg2G,IAAA,KAKAC,OAAA31G,IAAAN,EAAAi2G,QAAAj2G,EAAAi2G,QAAA,KAKA5tG,EAAArI,EAAAqI,IAEI6d,UAAM5lB,IAAA+H,GAAAktD,GACV,GACIrvC,IAAMqvC,MAAA0gD,EACV,QAEA31G,IAAA+H,GAAA,IAAAA,EAAA9R,SAAAg/D,IACAltD,EAAwC,EAAAA,KAAmBc,EAAMosD,IAE7DrvC,QAAM5lB,IAAA+H,KAAA9R,OAAA,EACV,GAKA,IAAAmvE,OAAAplE,IAAAN,EAAAqI,IACMynD,GAAUjqC,KAAQiqC,GAAU/pC,OAMlC7yB,KAAAg3F,YAAA5pF,IAAAN,EAAAk2D,MAAgDS,GAAO32D,EAAAk2D,OAAA,KAMvDhjE,KAAAgjH,WAAsBd,GACtB7/C,EAA+B,EAAA0gD,EAAA/iH,KAAAmjG,aAAA3wB,EAAAxyE,KAAAg3F,QAM/Bh3F,KAAAijH,aAAA71G,IAAAN,EAAA0rB,OAAA1rB,EAAA0rB,OAAA,MAMAx4B,KAAAkjH,mBAAA91G,IAAAN,EAAAq2G,aACAr2G,EAAAq2G,aAA6Bf,GAAUvnF,SAMvC76B,KAAA60F,QAAA,KAMA70F,KAAAo1F,WAAAhoF,IAAAN,EAAAixB,KAAAjxB,EAAAixB,KAAA,KAmNA,OA/MA02D,IAAA6tB,EAAA51G,UAAA+nF,GACA6tB,EAAAtgH,UAAAlB,OAAAY,OAAA+yF,KAAAzyF,WACAsgH,EAAAtgH,UAAA+I,YAAAu3G,EAOAA,EAAAtgH,UAAA+oC,MAAA,WACA,WAAAu3E,EAAA,CACAxhF,OAAA9gC,KAAA06D,QAAAl0D,QACAi8G,aAAAziH,KAAAwiH,cACAG,aAAA3iH,KAAA0iH,cACAG,aAAA7iH,KAAA4iH,cACAv0C,YAAAruE,KAAAmjG,aACAngC,MAAAhjE,KAAAg3F,QAAAh3F,KAAAg3F,OAAAxwF,MAAAxG,KAAAg3F,OAAAxwF,QAAAxG,KAAAg3F,aAAA5pF,EACA+H,IAAAnV,KAAA+hH,SACAvpF,OAAAx4B,KAAAijH,QAAAz8G,QACA28G,aAAAnjH,KAAAkjH,cACAnlF,KAAA,OAAA/9B,KAAAo1F,MAAAp1F,KAAAo1F,MAAA5uF,aAAA4G,EACAuwC,QAAA39C,KAAAk+C,aACA7jB,MAAAr6B,KAAAusE,WACA3zC,SAAA54B,KAAAs2C,cACAgsC,eAAAtiF,KAAAssE,uBAQAg2C,EAAAtgH,UAAAiqE,UAAA,WACA,GAAAjsE,KAAAuiH,kBACA,OAAAviH,KAAAuiH,kBAEA,IAAAzhF,EAAA9gC,KAAA06D,QACA38B,EAAA/9B,KAAAymD,UACA,GAAAzmD,KAAA0iH,eAA8BpB,GAAeC,UAC7CvhH,KAAA4iH,eAA8BtB,GAAeC,SAAA,CAC7C,IAAAxjF,EACA,YAEA+C,EAAA9gC,KAAA06D,QAAAl0D,QACAxG,KAAA0iH,eAAgCpB,GAAeC,WAC/CzgF,EAAA,IAAA/C,EAAA,IAEA/9B,KAAA4iH,eAAgCtB,GAAeC,WAC/CzgF,EAAA,IAAA/C,EAAA,IAIA,GAAA/9B,KAAAwiH,eAA8BJ,GAAUvnF,SAAA,CACxC,IAAAkD,EACA,YAEA+C,IAAA9gC,KAAA06D,UACA55B,EAAA9gC,KAAA06D,QAAAl0D,SAEAxG,KAAAwiH,eAAgCJ,GAAUtnF,WAC1C96B,KAAAwiH,eAAgCJ,GAAUxnF,eAC1CkG,EAAA,IAAAA,EAAA,GAAA/C,EAAA,IAEA/9B,KAAAwiH,eAAgCJ,GAAUznF,aAC1C36B,KAAAwiH,eAAgCJ,GAAUxnF,eAC1CkG,EAAA,IAAAA,EAAA,GAAA/C,EAAA,IAIA,OADA/9B,KAAAuiH,kBAAAzhF,EACA9gC,KAAAuiH,mBAUAD,EAAAtgH,UAAAohH,UAAA,SAAAtiF,GACA9gC,KAAA06D,QAAA55B,EACA9gC,KAAAuiH,kBAAA,MAQAD,EAAAtgH,UAAAmpE,SAAA,WACA,OAAAnrE,KAAAg3F,QAUAsrB,EAAAtgH,UAAAy6D,SAAA,SAAA9hB,GACA,OAAA36C,KAAAgjH,WAAAvmD,SAAA9hB,IAMA2nE,EAAAtgH,UAAAkyF,aAAA,WACA,OAAAl0F,KAAAgjH,WAAAv8D,WAMA67D,EAAAtgH,UAAAmyF,yBAAA,WACA,OAAAn0F,KAAAk0F,gBAMAouB,EAAAtgH,UAAA0rF,cAAA,WACA,OAAA1tF,KAAAgjH,WAAAt1B,iBAMA40B,EAAAtgH,UAAAyjF,qBAAA,SAAA9qC,GACA,OAAA36C,KAAAgjH,WAAAv9B,qBAAA9qC,IAOA2nE,EAAAtgH,UAAAoqE,UAAA,WACA,GAAApsE,KAAA60F,QACA,OAAA70F,KAAA60F,QAEA,IAAAr8D,EAAAx4B,KAAAijH,QAEA,GAAAjjH,KAAAkjH,eAA8Bd,GAAUvnF,SAAA,CACxC,IAAAkD,EAAA/9B,KAAAymD,UACA48D,EAAArjH,KAAAgjH,WAAAv8D,UACA,IAAA1oB,IAAAslF,EACA,YAEA7qF,IAAAhyB,QACAxG,KAAAkjH,eAAgCd,GAAUtnF,WAC1C96B,KAAAkjH,eAAgCd,GAAUxnF,eAC1CpC,EAAA,GAAA6qF,EAAA,GAAAtlF,EAAA,GAAAvF,EAAA,IAEAx4B,KAAAkjH,eAAgCd,GAAUznF,aAC1C36B,KAAAkjH,eAAgCd,GAAUxnF,eAC1CpC,EAAA,GAAA6qF,EAAA,GAAAtlF,EAAA,GAAAvF,EAAA,IAIA,OADAx4B,KAAA60F,QAAAr8D,EACAx4B,KAAA60F,SAQAytB,EAAAtgH,UAAA+/G,OAAA,WACA,OAAA/hH,KAAAgjH,WAAAjB,UAOAO,EAAAtgH,UAAAykD,QAAA,WACA,OAAAzmD,KAAAo1F,MAAAp1F,KAAAo1F,MAAAp1F,KAAAgjH,WAAAv8D,WAMA67D,EAAAtgH,UAAA4rF,kBAAA,SAAA9/E,EAAAshE,GACA,OAAW97D,EAAMtT,KAAAgjH,WAAkBpoG,EAASC,OAC5C/M,EAAAshE,IAWAkzC,EAAAtgH,UAAAqE,KAAA,WACArG,KAAAgjH,WAAA38G,QAMAi8G,EAAAtgH,UAAA2rF,oBAAA,SAAA7/E,EAAAshE,GACIp2D,EAAQhZ,KAAAgjH,WAAkBpoG,EAASC,OACvC/M,EAAAshE,IAGAkzC,EA/VQ,CAgWN/tB,IAGa+uB,GAAA,GC7YfC,GAAA,OAuCIC,GAAI,SAAAplG,GAER,IAAAtR,EAAAsR,GAAA,GAMApe,KAAAyjH,MAAA32G,EAAA69C,KAMA3qD,KAAA0uD,UAAA5hD,EAAA8rB,SAMA54B,KAAAmlF,gBAAAr4E,EAAAw1E,eAMAtiF,KAAAolF,OAAAt4E,EAAAutB,MAMAr6B,KAAAunE,MAAAz6D,EAAAU,KAMAxN,KAAA0jH,WAAA52G,EAAAk+D,UAMAhrE,KAAA2jH,cAAA72G,EAAAm+D,aAMAjrE,KAAA6+E,WAAAzxE,IAAAN,EAAAq8D,KAAAr8D,EAAAq8D,KACA,IAAQguB,GAAI,CAAEn0B,MAAAugD,KAMdvjH,KAAA4jH,eAAAx2G,IAAAN,EAAAkuE,SAAAluE,EAAAkuE,SAAAt4E,KAAA+0B,GAAA,EAMAz3B,KAAA6jH,gBAAAz2G,IAAAN,EAAAi7E,UAAAj7E,EAAAi7E,UAA0EZ,GAAaxnD,MAMvF3/B,KAAA8jH,YAAAh3G,EAAAw1C,SAMAtiD,KAAAm1F,aAAA/nF,IAAAN,EAAAs8D,OAAAt8D,EAAAs8D,OAAA,KAMAppE,KAAA+jH,cAAA32G,IAAAN,EAAAm1D,QAAAn1D,EAAAm1D,QAAA,EAMAjiE,KAAAgkH,cAAA52G,IAAAN,EAAAo1D,QAAAp1D,EAAAo1D,QAAA,EAMAliE,KAAAikH,gBAAAn3G,EAAAy1E,eAAAz1E,EAAAy1E,eAAA,KAMAviF,KAAAkkH,kBAAAp3G,EAAA01E,iBAAA11E,EAAA01E,iBAAA,KAMAxiF,KAAAmkH,cAAA/2G,IAAAN,EAAAsD,QAAA,KAAAtD,EAAAsD,SAQAozG,GAAIxhH,UAAA+oC,MAAA,WACJ,WAAay4E,GAAI,CACjB74D,KAAA3qD,KAAAmtE,UACA4a,UAAA/nF,KAAAgpF,eACAhO,SAAAh7E,KAAA+oF,cACAzmC,SAAAtiD,KAAA8oF,cACAlwD,SAAA54B,KAAAs2C,cACAgsC,eAAAtiF,KAAAssE,oBACAjyC,MAAAr6B,KAAAusE,WACA/+D,KAAAxN,KAAAupE,UACAyB,UAAAhrE,KAAA6tE,eACA5C,aAAAjrE,KAAA+tE,kBACA5E,KAAAnpE,KAAAqpE,UAAArpE,KAAAqpE,UAAAt+B,aAAA39B,EACAg8D,OAAAppE,KAAAspE,YAAAtpE,KAAAspE,YAAAv+B,aAAA39B,EACA60D,QAAAjiE,KAAAqtE,aACAnL,QAAAliE,KAAAutE,aACAgV,eAAAviF,KAAAipF,oBAAAjpF,KAAAipF,oBAAAl+C,aAAA39B,EACAo1E,iBAAAxiF,KAAAkpF,sBAAAlpF,KAAAkpF,sBAAAn+C,aAAA39B,KASAo2G,GAAIxhH,UAAA8mF,YAAA,WACJ,OAAA9oF,KAAA8jH,WAQAN,GAAIxhH,UAAAmrE,QAAA,WACJ,OAAAntE,KAAAyjH,OAQAD,GAAIxhH,UAAA+mF,YAAA,WACJ,OAAA/oF,KAAA4jH,WAQAJ,GAAIxhH,UAAAgnF,aAAA,WACJ,OAAAhpF,KAAA6jH,YAQAL,GAAIxhH,UAAAqrE,WAAA,WACJ,OAAArtE,KAAA+jH,UAQAP,GAAIxhH,UAAAurE,WAAA,WACJ,OAAAvtE,KAAAgkH,UAQAR,GAAIxhH,UAAAqnE,QAAA,WACJ,OAAArpE,KAAA6+E,OAQA2kC,GAAIxhH,UAAAsqE,kBAAA,WACJ,OAAAtsE,KAAAmlF,iBAQAq+B,GAAIxhH,UAAAs0C,YAAA,WACJ,OAAAt2C,KAAA0uD,WAQA80D,GAAIxhH,UAAAuqE,SAAA,WACJ,OAAAvsE,KAAAolF,QAQAo+B,GAAIxhH,UAAAsnE,UAAA,WACJ,OAAAtpE,KAAAm1F,SAQAquB,GAAIxhH,UAAAunE,QAAA,WACJ,OAAAvpE,KAAAunE,OAQAi8C,GAAIxhH,UAAA6rE,aAAA,WACJ,OAAA7tE,KAAA0jH,YAQAF,GAAIxhH,UAAA+rE,gBAAA,WACJ,OAAA/tE,KAAA2jH,eAQAH,GAAIxhH,UAAAinF,kBAAA,WACJ,OAAAjpF,KAAAikH,iBAQAT,GAAIxhH,UAAAknF,oBAAA,WACJ,OAAAlpF,KAAAkkH,mBAQAV,GAAIxhH,UAAAmnF,WAAA,WACJ,OAAAnpF,KAAAmkH,UASAX,GAAIxhH,UAAAoiH,YAAA,SAAA9hE,GACJtiD,KAAA8jH,UAAAxhE,GASAkhE,GAAIxhH,UAAAqiH,QAAA,SAAA15D,GACJ3qD,KAAAyjH,MAAA94D,GASA64D,GAAIxhH,UAAAsiH,YAAA,SAAAtpC,GACJh7E,KAAA4jH,UAAA5oC,GASAwoC,GAAIxhH,UAAAuiH,WAAA,SAAAtiD,GACJjiE,KAAA+jH,SAAA9hD,GASAuhD,GAAIxhH,UAAAwiH,WAAA,SAAAtiD,GACJliE,KAAAgkH,SAAA9hD,GASAshD,GAAIxhH,UAAAyiH,aAAA,SAAA18B,GACJ/nF,KAAA6jH,WAAA97B,GASAy7B,GAAIxhH,UAAAu2F,QAAA,SAAApvB,GACJnpE,KAAA6+E,MAAA1V,GASAq6C,GAAIxhH,UAAA60C,YAAA,SAAAje,GACJ54B,KAAA0uD,UAAA91B,GASA4qF,GAAIxhH,UAAAqyF,SAAA,SAAAh6D,GACJr6B,KAAAolF,OAAA/qD,GASAmpF,GAAIxhH,UAAAy2F,UAAA,SAAArvB,GACJppE,KAAAm1F,QAAA/rB,GASAo6C,GAAIxhH,UAAA02F,QAAA,SAAAlrF,GACJxN,KAAAunE,MAAA/5D,GASAg2G,GAAIxhH,UAAA0iH,aAAA,SAAA15C,GACJhrE,KAAA0jH,WAAA14C,GASAw4C,GAAIxhH,UAAA2iH,gBAAA,SAAA15C,GACJjrE,KAAA2jH,cAAA14C,GASAu4C,GAAIxhH,UAAA4iH,kBAAA,SAAAz7C,GACJnpE,KAAAikH,gBAAA96C,GASAq6C,GAAIxhH,UAAA6iH,oBAAA,SAAAz7C,GACJppE,KAAAkkH,kBAAA96C,GASAo6C,GAAIxhH,UAAA8iH,WAAA,SAAA10G,GACJpQ,KAAAmkH,SAAA/zG,GAGe,IAAA20G,GAAA,GCpcf,MAAAC,GAAA,CAAkBC,MAAAzF,GAAO0F,aAAA7D,GAAc93B,OAAAuN,GAAQC,KAAAI,GAAMmrB,KAAAgB,GAAM7B,UAAAU,GAAW14B,MAAA8K,GAAOG,aAAAiC,GAAcS,OAAAW,GAAQC,MAAAa,GAAOlP,KAAAo7B,IAEnG,SAAAI,GAAAr4G,GACP,GAAAA,KAAAu1C,WAAA2iE,GAAAl4G,EAAAu1C,WAAA,CACA,IAAA+iE,EAAA,GAUA,OATAtkH,OAAA+X,KAAA/L,GAAAwH,IAAA+wG,IACA,cAAAA,IACA,kBAAAv4G,EAAAu4G,IAAAv4G,EAAAu4G,GAAAhjE,UACA+iE,EAAAC,GAAAF,GAAAr4G,EAAAu4G,IAEAD,EAAAC,GAAAv4G,EAAAu4G,MAIA,IAAAL,GAAAl4G,EAAAu1C,WAAA+iE,ICDA,IAAIE,GAAO,SAAAtoG,GACX,SAAAuoG,EAAAC,GAuCA,GArCAxoG,EAAAzc,KAAAP,MAMAA,KAAAylH,SAAAr4G,EAMApN,KAAA0lH,cAAA,WAOA1lH,KAAAo5F,OAAA,KAMAp5F,KAAAq5F,oBAAAjsF,EAMApN,KAAA2lH,mBAAA,KAEIryG,EACJtT,KAAYwd,EAAkBxd,KAAA0lH,eAC9B1lH,KAAA4lH,uBAAA5lH,MAEAwlH,EACA,GAA8B,sBAAA35E,sBAAA,CAC9B,IAAAoP,EAAuE,EACvEj7C,KAAAm4F,YAAAl9C,OACO,CAEP,IAAArG,EAAA4wE,EACAxlH,KAAAmd,cAAAy3B,IAqKA,OAhKA53B,IAAAuoG,EAAA74G,UAAAsQ,GACAuoG,EAAAvjH,UAAAlB,OAAAY,OAAAsb,KAAAhb,WACAujH,EAAAvjH,UAAA+I,YAAAw6G,EAQAA,EAAAvjH,UAAA+oC,MAAA,WACA,IAAAA,EAAA,IAAAw6E,EAAAvlH,KAAAqd,iBACA0tB,EAAA86E,gBAAA7lH,KAAA8lH,mBACA,IAAA7qE,EAAAj7C,KAAA81D,cACA7a,GACAlQ,EAAAotD,YAAAl9C,EAAAlQ,SAEA,IAAA96B,EAAAjQ,KAAA05F,WAIA,OAHAzpF,GACA86B,EAAAq5B,SAAAn0D,GAEA86B,GAWAw6E,EAAAvjH,UAAA8zD,YAAA,WACA,OACgE91D,KAAAiB,IAAAjB,KAAA0lH,gBAWhEH,EAAAvjH,UAAAyiD,MAAA,WACA,OAAAzkD,KAAAylH,KAUAF,EAAAvjH,UAAA8jH,gBAAA,WACA,OAAA9lH,KAAA0lH,eASAH,EAAAvjH,UAAA03F,SAAA,WACA,OAAA15F,KAAAo5F,QASAmsB,EAAAvjH,UAAA4uF,iBAAA,WACA,OAAA5wF,KAAAq5F,gBAMAksB,EAAAvjH,UAAA+jH,sBAAA,WACA/lH,KAAAwc,WAMA+oG,EAAAvjH,UAAA4jH,uBAAA,WACA5lH,KAAA2lH,qBACM3tG,EAAahY,KAAA2lH,oBACnB3lH,KAAA2lH,mBAAA,MAEA,IAAA1qE,EAAAj7C,KAAA81D,cACA7a,IACAj7C,KAAA2lH,mBAAgCryG,EAAM2nC,EAC9BrgC,EAASC,OAAA7a,KAAA+lH,sBAAA/lH,OAEjBA,KAAAwc,WAUA+oG,EAAAvjH,UAAAm2F,YAAA,SAAAl9C,GACAj7C,KAAAyR,IAAAzR,KAAA0lH,cAAAzqE,IAWAsqE,EAAAvjH,UAAAoiE,SAAA,SAAAn0D,GACAjQ,KAAAo5F,OAAAnpF,EACAjQ,KAAAq5F,eAAAppF,EAAA+1G,GAAA/1G,QAAA7C,EACApN,KAAAwc,WAYA+oG,EAAAvjH,UAAAikH,MAAA,SAAAjmE,GACAhgD,KAAAylH,IAAAzlE,EACAhgD,KAAAwc,WAUA+oG,EAAAvjH,UAAA6jH,gBAAA,SAAAllH,GACIqY,EACJhZ,KAAYwd,EAAkBxd,KAAA0lH,eAC9B1lH,KAAA4lH,uBAAA5lH,MACAA,KAAA0lH,cAAA/kH,EACI2S,EACJtT,KAAYwd,EAAkBxd,KAAA0lH,eAC9B1lH,KAAA4lH,uBAAA5lH,MACAA,KAAA4lH,0BAGAL,EApNW,CAqNT3nG,GAWK,SAAAooG,GAAAl7G,GACP,uBAAAA,EACA,OAAAA,EAKA,IAAA4lF,EACA,GAAA78E,MAAA6I,QAAA5R,GACA4lF,EAAA5lF,MACK,CACCkoB,GAA2B,sBAAAsrB,UACjC,IACA,IAAAruC,EAAgE,EAChEygF,EAAA,CAAAzgF,GAEA,kBACA,OAAAygF,GAIe,IAAAw1B,GAAA,GC/Sf,MAAAC,GAAA,CAAAtyG,MAAAE,OAAA2kC,QAAA53C,OAAAiJ,UAMO,SAAAq8G,IAAAl2E,KAAAm2E,GAAAC,GAAA,GACP,OAAAp2E,EAAAq2E,eAAAD,EAAAD,EAAAr8G,KAAA,IAAAsW,cAAA+lG,EAAAr8G,KAAA,KAWO,SAAAw8G,GAAA7lH,EAAAmM,GACP,IAAA9G,EAAA,GAKA,OAJAlF,OAAA+X,KAAA/L,GAAA8B,QAAAjN,IACA,MAAA8kH,EAAA9lH,EAAAylH,GAAAzkH,GACAqE,EAAAygH,GAAA35G,EAAAnL,KAEAqE,EAWO,SAAA0gH,GAAA/lH,EAAAmM,GACP,IAAA9G,EAAA,GAIA,OAHAlF,OAAA+X,KAAA/L,GAAA8B,QAAAjN,IACAqE,EAAArE,GAAAhB,EAAAylH,GAAAzkH,KAEAqE,EASO,SAAA2gH,GAAAC,EAAAjmH,EAAAmM,GACP,IAAA9G,EAAA,GACAsO,EAAAoyG,GAAA/lH,EAAAmM,GAIA,OAHAhM,OAAA+X,KAAA/L,GAAA8B,QAAAjN,IACAqE,EAAArE,GAAAilH,EAAAtyG,EAAA3S,MAEAqE,EAOO,SAAA6gH,KACP,OAAS1B,GAAK,IACdnlH,KAAA8mH,kBACA39C,KAAA,CACA9mB,UAAA,OACA2gB,MAAAhjE,KAAAmpE,MAEAC,OAAAppE,KAAA+mH,eACAv5G,KAAAxN,KAAAgnH,eAQO,SAAAC,KACP,MAAAC,EAAArzG,MAAAszG,KAAAh6G,WAAAmH,IAAArR,KAAAkI,OAAA,IACAA,EAAArK,OAAAkW,OAAA,MAAgCkwG,GAChCE,EAAAtmH,OAAAY,OAAA,MAKA,OAJAZ,OAAAumH,QAAAl8G,GAAAyD,QAAA3L,IACA,MAAAtB,EAAAsB,EAAA,GACAmkH,EAAAzlH,GAAAwkH,GAAAr8F,SAAA7mB,EAAA,KAAsDsQ,KAAAtQ,EAAA,IAAcA,EAAA,KAEpEmkH,EAOO,SAAAE,KACP,IAAAzgH,EAAA7G,KAAAunH,QACA,MAAA1gH,MAAA21G,MACA31G,IAAA0gH,QAEA,OAAA1gH,EAOO,SAAA2gH,GAAA70G,GAEP3S,KAAA6G,QAAA7G,KAAA6G,OAAAyN,IACA3B,EAAA3S,KAAA6G,OAAAyN,IAAAtU,KAAA6G,QAIA7G,KAAA6G,OAAA4gH,MAAA,SAAAnzG,EAAA2nG,KACAtpG,EAAA2B,EAAA2nG,KChHe,IAAAyL,GAAA,CACfhM,QAAA,CAIAxD,OAEA,MAAAj9D,EAAAj7C,KAAA2nH,iBACA3nH,KAAAylD,QAAA,IAAyBygE,GAAOjrE,GAChCj7C,KAAAokE,WAEApkE,KAAAylD,QAAAnwC,IAAAtV,KAEAA,KAAA6G,SACA7G,KAAA6G,OAAA43F,WAAAz+F,KAAAylD,SACAzlD,KAAA6G,OAAA+gH,WAAA5nH,OAGAA,KAAA28G,MAAA,OAAA38G,KAAAylD,UAKAyyD,SACA,IAAAl4G,KAAAylD,QAAA,OAEA,MAAAxK,EAAAj7C,KAAA2nH,iBAEA3nH,KAAAylD,QAAA0yC,YAAAl9C,GAGAj7C,KAAA28G,MAAA,SAAA38G,KAAAylD,UAKAyyD,WAEA,MAAAjoG,EAAAjQ,KAAA6nH,cACA7nH,KAAAylD,SAAAzlD,KAAAylD,QAAA2e,SAAAn0D,IAKAioG,SACAl4G,KAAA6wD,SACA7wD,KAAAokE,aAGA8zC,UAEAl4G,KAAA6G,OAAkBygH,GAAS/mH,KAAAP,OAE3Bk4G,UACIsP,GAAQjnH,KAAAP,UAAA8nH,OAEZ5P,gBACAl4G,KAAA6G,QAAA7G,KAAAylD,UACAzlD,KAAAylD,QAAAnwC,IAAA,KACAtV,KAAAylD,QAAApsC,kBACArZ,KAAA6G,OAAA24F,cAAAx/F,KAAAylD,SACAzlD,KAAA6G,OAAAkhH,aAAA/nH,SC7DegoH,GAAA,CACf78G,MAAA,CAEAkF,SAAAwD,MAEAgqC,OAAA/vB,OAEAq7C,KAAAp1D,QAEAk0G,MAAA,CACA53G,SAAA,CACA63G,MAAA,EACAhQ,UAEAl4G,KAAA6wD,YAIAs3D,SAAA,CACAjQ,aAEA,OAAAl4G,KAAAqQ,SAAAiE,IAAAzS,GAAAisB,OAAA27B,WAAA5nD,MAGA65G,QAAA,CACAxD,kBACA,OACA71D,UAAA,QACAxE,OAAA79C,KAAA69C,OACAsrB,KAAAnpE,KAAAmpE,SC9BA,MAAMi/C,GAAO,CACbplD,MAAA,CACAzvD,KAAAQ,OACA1R,QAAA,eAEAmoE,QAAAz2D,OACA42D,SAAA52D,OACA02D,SAAA52D,MACA62D,eAAA58C,OACA+8C,WAAA/8C,OACAlF,MAAAkF,QAGAu6F,GAAsB7B,GAAM,SAAW4B,IACxB,IAAAE,GAAA,CACfn9G,MAAA,IACAk9G,IAEA3M,QAAA,CACAxD,eACA,OACA71D,UAAA,YACWskE,GAAG3mH,KAAA,SAAiBooH,QCrBhBG,GAAA,CACfp9G,MAAA,CACAqC,KAAAuG,OACAivD,MAAAjvD,OACA42C,KAAA52C,OACAy0G,WAAA,CACAj1G,KAAAQ,OACA1R,QAAA,gBAGA8lH,SAAA,CACAjQ,iBACA,SAAgBl4G,KAAA2qD,oBAGhBs9D,MAAA,CAIA/P,OACAl4G,KAAAokE,aAGAs3C,QAAA,CACAxD,aACA,OACA71D,UAAA,OACA70C,KAAAxN,KAAAwN,KACAm9C,KAAA3qD,KAAAyoH,eACAt/C,KAAA,CACA9mB,UAAA,OACA2gB,MAAAhjE,KAAAgjE,OAEAuf,eAAA,CACAlgC,UAAA,OACA2gB,MAAAhjE,KAAAwoH,gBCtCeE,GAAA,CACfxQ,UAEAl4G,KAAA2oH,KAAA3oH,KAAA2oH,IAAA3zG,aACAhV,KAAA2oH,IAAA3zG,WAAAjE,YAAA/Q,KAAA2oH,KACA3oH,KAAA2oH,IAAA,QCAejpH,GAAA,SAAAoN,GACf,OACA3B,MAAA,IACA2B,GAEA4uG,QAAA,CACAxD,eACA,IAAAjoG,EAAA,GAIA,OAHAnP,OAAA+X,KAAA/L,GAAA8B,QAAAjN,IACAsO,EAAAtO,GAAA3B,KAAA2B,KAEAsO,MCDA,MAAA24G,GAAA,CACA5tC,SAAAltD,OACAm0C,QAAAn0C,OACAo0C,QAAAp0C,OACAw0B,SAAA5J,QACAre,MAAAvM,OACAw0D,eAAA5pC,QACA9f,SAAA9K,OACAk9C,UAAAj3D,OACAk3D,aAAAl3D,OACA3D,QAAAyD,OAEAg1G,GAAAnpH,GAAAkpH,IAEAE,GAAA,CAEAz4G,SAAA,CACAkD,KAAAM,MACAk1G,UAAA,IAIA59G,GAAA87G,GAAA,CAAA97G,MAAA29G,IAAAd,GAAAM,GAAAC,GAAAM,IAEA,IAAAG,GAAA,CACAroH,KAAA,aACAsoH,OAAA,CAAAvB,GAAAM,GAAAM,GAAAC,GAAAM,GAAAH,IACAv9G,SACAuwG,QAAA,CACAxD,cACA,OAAAiN,GAAA,IACAnlH,KAAA8mH,kBACAt5G,KAAA,IACAxN,KAAAgnH,aACAxkC,iBAAAxiF,KAAA+mH,kBACA/mH,KAAAkpH,mBAIAhR,iBACA,WAAAjnE,GAAAjxC,KAAA+f,eCvDmMopG,GAAA,GCO/LC,GAAYvM,GACdsM,GACA1K,GACAC,IACF,EACA,KACA,KACA,MAIe2K,GAAAD,WChBfC,GAAI/K,QAAA,SAAAC,GACJA,EAAAH,UAAgBiL,GAAI1oH,KAAO0oH,KAEZ,IAAAC,GAAA,GCLXC,GAAM,WAAgB,IAAAj0G,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,kBAAAH,EAAAk0G,GAAA,CAAoC7zG,IAAA,UAAA8zG,MAAA,CAAqBluF,YAAAjmB,EAAA4lC,QAAyBxoC,GAAA,CAAKo1G,KAAAxyG,EAAAo0G,aAAuB,kBAAAp0G,EAAAq0G,QAAA,KACnMC,GAAe,GCDfC,GAAM,WAAgB,IAAAv0G,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,QACrFq0G,GAAe,GCYnB,MAAAC,GAAA,CAEAxuF,YAAA,CACAhoB,KAAAM,MACAqkG,UACA,YAKA8R,GAAA/C,GAAA,CAAA97G,MAAA4+G,IAAA/B,GAAAM,GAAAC,WAGAyB,GAAA35G,SAEA,IAAA45G,GAAA,CACAtpH,KAAA,gBACAsoH,OAAA,CAAAvB,GAAAM,GAAAM,GAAAC,GAAAG,IACAv9G,MAAA6+G,GACA/B,MAAA,CACA/P,cACAl4G,KAAA6wD,WAGA6qD,QAAA,CACAxD,cACA,OAAA2O,GAAAtmH,KAAAP,OAEAk4G,iBACA,WAAAjkE,GAAA,CAAAj0C,KAAAu7B,iBC1CsM2uF,GAAA,GCOlMC,GAAYtN,GACdqN,GACAL,GACAC,IACF,EACA,KACA,KACA,MAIeM,GAAAD,WCRf,MAAAE,GAAA,CAEAzhG,MAAA,CACArV,KAAAua,OACAzrB,QAAA,EACA0mH,UAAA,GAGA9jH,OAAA,CACAsO,KAAAua,OACAzrB,QAAA,EACA0mH,UAAA,IAGAuB,GAAArD,GAAA,CAAA97G,MAAAk/G,IAAAD,WAEAE,GAAA/uF,YAGA,IAAAgvF,GAAA,CACA5pH,KAAA,kBACAsoH,OAAA,CAAAP,IACA8B,WAAA,CACIC,cAAAL,IAEJj/G,MAAAm/G,GACAnC,SAAA,CACAjQ,SACA,MAAAqE,GAAAv8G,KAAA0qH,OAAAr6G,UAAA,IAAAiE,IAAAzS,GAAAisB,OAAA27B,WAAA5nD,IACA,OACA06G,EACA,CAAAA,EAAA,GAAAv8G,KAAA4oB,MAAA2zF,EAAA,IACA,CAAAA,EAAA,GAAAv8G,KAAA4oB,MAAA2zF,EAAA,GAAAv8G,KAAAiF,QACA,CAAAs3G,EAAA,GAAAA,EAAA,GAAAv8G,KAAAiF,QACAs3G,KAIAb,QAAA,CACAxD,WAAAzyD,GACAzlD,KAAAylD,aClDwMklE,GAAA,GCOpMC,GAAY/N,GACd8N,GACApB,GACAK,IACF,EACA,KACA,KACA,MAIeiB,GAAAD,WChBfC,GAASvM,QAAA,SAAAC,GACTA,EAAAH,UAAgByM,GAASlqH,KAAOkqH,KAEjB,IAAAC,GAAA,GCHfnhC,KAAA20B,QAAA,SAAAC,GACAA,EAAAH,UAAgBgM,GAAOzpH,KAAOypH,KAEf,IAAAW,GAAA,GCLXC,GAAM,WAAgB,IAAA11G,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,QACrFw1G,GAAe,GCafC,GAAM,SAAAx+E,GACV,SAAA68C,EAAAzxD,EAAA2J,EAAA+L,GAEA,GADAd,EAAAnsC,KAAAP,WACAoN,IAAAogC,QAAApgC,IAAAq0B,EACAzhC,KAAAqtC,mBAAAG,EAAA1V,OACK,CACL,IAAA4J,EAAAD,GAAA,EACAzhC,KAAAmrH,mBAAArzF,EAAA4J,EAAA8L,IA8LA,OA1LAd,IAAA68C,EAAA78E,UAAAggC,GACA68C,EAAAvnF,UAAAlB,OAAAY,OAAAgrC,KAAA1qC,WACAunF,EAAAvnF,UAAA+I,YAAAw+E,EAQAA,EAAAvnF,UAAA+oC,MAAA,WACA,WAAAw+C,EAAAvpF,KAAA28B,gBAAAn2B,aAAA4G,EAAApN,KAAA2sC,SAMA48C,EAAAvnF,UAAAgpC,eAAA,SAAA9mB,EAAAE,EAAA6mB,EAAAC,GACA,IAAAvO,EAAA38B,KAAA28B,gBACArY,EAAAJ,EAAAyY,EAAA,GACAnY,EAAAJ,EAAAuY,EAAA,GACAkS,EAAAvqB,IAAAE,IACA,GAAAqqB,EAAA3D,EAAA,CACA,OAAA2D,EACA,QAAAzuC,EAAA,EAAuBA,EAAAJ,KAAA48B,SAAiBx8B,EACxC6qC,EAAA7qC,GAAAu8B,EAAAv8B,OAEO,CACP,IAAA+3B,EAAAn4B,KAAA01F,YAAAhzF,KAAAwF,KAAA2mC,GACA5D,EAAA,GAAAtO,EAAA,GAAAxE,EAAA7T,EACA2mB,EAAA,GAAAtO,EAAA,GAAAxE,EAAA3T,EACA,QAAAwJ,EAAA,EAAyBA,EAAAhuB,KAAA48B,SAAmB5O,EAC5Cid,EAAAjd,GAAA2O,EAAA3O,GAIA,OADAid,EAAA5nC,OAAArD,KAAA48B,OACAiS,EAEA,OAAA3D,GAOAq+C,EAAAvnF,UAAAmpC,WAAA,SAAAjnB,EAAAE,GACA,IAAAuY,EAAA38B,KAAA28B,gBACArY,EAAAJ,EAAAyY,EAAA,GACAnY,EAAAJ,EAAAuY,EAAA,GACA,OAAArY,IAAAE,KAAAxkB,KAAAorH,qBAQA7hC,EAAAvnF,UAAAq0C,UAAA,WACA,OAAAr2C,KAAA28B,gBAAAn2B,MAAA,EAAAxG,KAAA48B,SAMA2sD,EAAAvnF,UAAAwpC,cAAA,SAAA3T,GACA,IAAA8E,EAAA38B,KAAA28B,gBACA+E,EAAA/E,EAAA38B,KAAA48B,QAAAD,EAAA,GACA,OAAWN,GACXM,EAAA,GAAA+E,EAAA/E,EAAA,GAAA+E,EACA/E,EAAA,GAAA+E,EAAA/E,EAAA,GAAA+E,EACA7J,IAQA0xD,EAAAvnF,UAAA0zF,UAAA,WACA,OAAAhzF,KAAAwF,KAAAlI,KAAAorH,sBAOA7hC,EAAAvnF,UAAAopH,kBAAA,WACA,IAAA9mG,EAAAtkB,KAAA28B,gBAAA38B,KAAA48B,QAAA58B,KAAA28B,gBAAA,GACAnY,EAAAxkB,KAAA28B,gBAAA38B,KAAA48B,OAAA,GAAA58B,KAAA28B,gBAAA,GACA,OAAArY,IAAAE,KAOA+kE,EAAAvnF,UAAA+pC,QAAA,WACA,OAAWrM,GAAYS,QAOvBopD,EAAAvnF,UAAAiqC,iBAAA,SAAApU,GACA,IAAAwzF,EAAArrH,KAAA0jC,YACA,GAAQ9E,GAAU/G,EAAAwzF,GAAA,CAClB,IAAAvzF,EAAA93B,KAAAq2C,YAEA,OAAAxe,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAGAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAIamF,GAAapF,EAAA73B,KAAAurC,qBAAAvrC,OAE1B,UASAupF,EAAAvnF,UAAA20C,UAAA,SAAA7e,GACA,IAAA8E,EAAA58B,KAAA48B,OACA8E,EAAA1hC,KAAA28B,gBAAAC,GAAA58B,KAAA28B,gBAAA,GACAA,EAAA7E,EAAAtxB,QACAm2B,EAAAC,GAAAD,EAAA,GAAA+E,EACA,QAAAthC,EAAA,EAAmBA,EAAAw8B,IAAYx8B,EAC/Bu8B,EAAAC,EAAAx8B,GAAA03B,EAAA13B,GAEAJ,KAAAqtC,mBAAArtC,KAAA2sC,OAAAhQ,GACA38B,KAAAwc,WAWA+sE,EAAAvnF,UAAAmpH,mBAAA,SAAArzF,EAAA4J,EAAA8L,GACAxtC,KAAAytC,UAAAD,EAAA1V,EAAA,GACA93B,KAAA28B,kBACA38B,KAAA28B,gBAAA,IAGA,IAAAA,EAAA38B,KAAA28B,gBACAnE,EAAiBwW,GACjBrS,EAAA,EAAA7E,EAAA93B,KAAA48B,QACAD,EAAAnE,KAAAmE,EAAA,GAAA+E,EACA,QAAAthC,EAAA,EAAAgX,EAAApX,KAAA48B,OAAqCx8B,EAAAgX,IAAQhX,EAC7Cu8B,EAAAnE,KAAAmE,EAAAv8B,GAEAu8B,EAAAt5B,OAAAm1B,EACAx4B,KAAAwc,WAMA+sE,EAAAvnF,UAAA4qC,eAAA,WACA,aAMA28C,EAAAvnF,UAAAurC,eAAA,SAAAhS,EAAAiS,KAOA+7C,EAAAvnF,UAAA60F,UAAA,SAAAn1D,GACA1hC,KAAA28B,gBAAA38B,KAAA48B,QAAA58B,KAAA28B,gBAAA,GAAA+E,EACA1hC,KAAAwc,WAGA+sE,EArMU,CAsMRz7C,IAyBFo9E,GAAMlpH,UAAA0+B,UACS,IAAA4qF,GAAA,GCjOf,MAAAC,GAAA,CAEA7pF,OAAA,CACAnuB,KAAAua,OACAi7F,UAAA,IAIAyC,GAAAvE,GAAA,CAAA97G,MAAAogH,IAAAvD,GAAAM,GAAAC,IAEA,IAAAkD,GAAA,CACA9qH,KAAA,eACAsoH,OAAA,CAAAvB,GAAAM,GAAAM,GAAAC,GAAAG,IACAv9G,MAAAqgH,GACAvD,MAAA,CACA/P,SACAl4G,KAAA6wD,WAGA6qD,QAAA,CACAxD,cACA,OAAA2O,GAAAtmH,KAAAP,OAEAk4G,iBACA,WAAAoT,GAAAtrH,KAAA+f,WAAA/f,KAAA0hC,WCrCqMgqF,GAAA,GCOjMC,GAAY9O,GACd6O,GACAV,GACAC,IACF,EACA,KACA,KACA,MAIeW,GAAAD,WChBfC,GAAMtN,QAAA,SAAAC,GACNA,EAAAH,UAAgBwN,GAAMjrH,KAAOirH,KAEd,IAAAC,GAAA,GCLXC,GAAM,WAAgB,IAAAx2G,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,QACrFs2G,GAAe,GCeZ,SAAAC,GAAArvF,EAAAnE,EAAArO,EAAAyS,EAAAyb,EAAA1X,GACP,IAAAiR,EAAAtG,IACA2gF,EAAA3gF,IACAzpC,GAAAsoB,EAAAqO,GAAAoE,EACA,OAAA/6B,EACA+vC,EAAAjV,EAAAnE,GACAyzF,EAAAtvF,EAAAnE,EAAA,QACG,MAAA32B,EACH+vC,GAAA,EAAAyG,GAAA1b,EAAAnE,GACA6f,EAAA1b,EAAAnE,EAAAoE,GACAqvF,GAAA,EAAA5zE,GAAA1b,EAAAnE,EAAA,GACA6f,EAAA1b,EAAAnE,EAAAoE,EAAA,QACG,OAAA/6B,EAAA,CAKH,IAJA,IAAA+0B,EAAA+F,EAAAnE,GACA3B,EAAA8F,EAAAnE,EAAA,GACAn1B,EAAA,EACA6oH,EAAA,IACA9rH,EAAAo4B,EAAAoE,EAAiCx8B,EAAA+pB,EAAS/pB,GAAAw8B,EAAA,CAC1C,IAAA9F,EAAA6F,EAAAv8B,GACA22B,EAAA4F,EAAAv8B,EAAA,GACAiD,GAAAX,KAAAwF,MAAA4uB,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,IACAq1F,EAAAxmH,KAAArC,GACAuzB,EAAAE,EACAD,EAAAE,EAEA,IAAA7rB,EAAAmtC,EAAAh1C,EACAyD,EAAgBsiB,GAAY8iG,EAAAhhH,GAC5B,GAAApE,EAAA,GACA,IAAAxF,GAAA4J,EAAAghH,GAAAplH,EAAA,KACAolH,GAAAplH,EAAA,GAAAolH,GAAAplH,EAAA,IACAjG,EAAA23B,IAAA1xB,EAAA,GAAA81B,EACAgV,EAAeja,GACfgF,EAAA97B,GAAA87B,EAAA97B,EAAA+7B,GAAAt7B,GACA2qH,EAAet0F,GACfgF,EAAA97B,EAAA,GAAA87B,EAAA97B,EAAA+7B,EAAA,GAAAt7B,QAEAswC,EAAAjV,EAAAnE,EAAA1xB,EAAA81B,GACAqvF,EAAAtvF,EAAAnE,EAAA1xB,EAAA81B,EAAA,GAGA,OAAA+D,GACAA,EAAA,GAAAiR,EACAjR,EAAA,GAAAsrF,EACAtrF,GAEA,CAAAiR,EAAAq6E,GAcO,SAAAE,GAAAxvF,EAAAnE,EAAArO,EAAAyS,EAAAp8B,EAAA4rH,GACP,GAAAjiG,GAAAqO,EACA,YAEA,IAAAzY,EACA,GAAAvf,EAAAm8B,EAAAnE,EAAAoE,EAAA,GACA,OAAAwvF,GACArsG,EAAA4c,EAAAn2B,MAAAgyB,IAAAoE,GACA7c,EAAA6c,EAAA,GAAAp8B,EACAuf,GAEA,KAEG,GAAA4c,EAAAxS,EAAA,GAAA3pB,EACH,OAAA4rH,GACArsG,EAAA4c,EAAAn2B,MAAA2jB,EAAAyS,EAAAzS,GACApK,EAAA6c,EAAA,GAAAp8B,EACAuf,GAEA,KAIA,GAAAvf,GAAAm8B,EAAAnE,EAAAoE,EAAA,GACA,OAAAD,EAAAn2B,MAAAgyB,IAAAoE,GAEA,IAAAyvF,EAAA7zF,EAAAoE,EACA0vF,EAAAniG,EAAAyS,EACA,MAAAyvF,EAAAC,EAAA,CACA,IAAA/mH,EAAA8mH,EAAAC,GAAA,EACA9rH,EAAAm8B,GAAAp3B,EAAA,GAAAq3B,EAAA,GACA0vF,EAAA/mH,EAEA8mH,EAAA9mH,EAAA,EAGA,IAAAgnH,EAAA5vF,EAAA0vF,EAAAzvF,EAAA,GACA,GAAAp8B,GAAA+rH,EACA,OAAA5vF,EAAAn2B,OAAA6lH,EAAA,GAAAzvF,GAAAyvF,EAAA,GAAAzvF,KAEA,IAAA4vF,EAAA7vF,GAAA0vF,EAAA,GAAAzvF,EAAA,GACAt7B,GAAAd,EAAA+rH,IAAAC,EAAAD,GACAxsG,EAAA,GACA,QAAA3f,EAAA,EAAiBA,EAAAw8B,EAAA,IAAgBx8B,EACjC2f,EAAAra,KAAoBiyB,GAAIgF,GAAA0vF,EAAA,GAAAzvF,EAAAx8B,GACxBu8B,EAAA0vF,EAAAzvF,EAAAx8B,GAAAkB,IAGA,OADAye,EAAAra,KAAAlF,GACAuf,ECpGA,IAAI0sG,GAAU,SAAA//E,GACd,SAAAg9C,EAAAnuD,EAAAiS,GAEAd,EAAAnsC,KAAAP,MAMAA,KAAA0sH,cAAA,KAMA1sH,KAAA2sH,uBAAA,EAMA3sH,KAAA2wC,WAAA,EAMA3wC,KAAA4wC,mBAAA,OAEAxjC,IAAAogC,GAAA35B,MAAA6I,QAAA6e,EAAA,IAGAv7B,KAAAutC,eAAkF,EAAAC,GAFlFxtC,KAAAqtC,mBAAAG,EAAmE,GAyLnE,OAlLAd,IAAAg9C,EAAAh9E,UAAAggC,GACAg9C,EAAA1nF,UAAAlB,OAAAY,OAAAgrC,KAAA1qC,WACA0nF,EAAA1nF,UAAA+I,YAAA2+E,EAOAA,EAAA1nF,UAAA4qH,iBAAA,SAAA7sG,GACA/f,KAAA28B,gBAGMv4B,GAAMpE,KAAA28B,gBAAA5c,GAFZ/f,KAAA28B,gBAAA5c,EAAAvZ,QAIAxG,KAAAwc,WASAktE,EAAA1nF,UAAA+oC,MAAA,WACA,WAAA2+C,EAAA1pF,KAAA28B,gBAAAn2B,QAAAxG,KAAA2sC,SAMA+8C,EAAA1nF,UAAAgpC,eAAA,SAAA9mB,EAAAE,EAAA6mB,EAAAC,GACA,OAAAA,EAA6BrP,GAAwB77B,KAAA0jC,YAAAxf,EAAAE,GACrD8mB,GAEAlrC,KAAA4wC,mBAAA5wC,KAAAyc,gBACAzc,KAAA2wC,UAAAjuC,KAAAwF,KAAiComC,GACjCtuC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OAAA,IACA58B,KAAA4wC,kBAAA5wC,KAAAyc,eAEWgyB,GACXzuC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OACA58B,KAAA2wC,WAAA,EAAAzsB,EAAAE,EAAA6mB,EAAAC,KAcAw+C,EAAA1nF,UAAA6qH,eAAA,SAAAl6G,GACA,OAAW/D,GAAc5O,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OAAAjqB,IAiBzB+2E,EAAA1nF,UAAA8qH,iBAAA,SAAAtsH,EAAAusH,GACA,GAAA/sH,KAAA2sC,QAAuBvM,GAAcG,KACrCvgC,KAAA2sC,QAAuBvM,GAAcI,KACrC,YAEA,IAAA4rF,OAAAh/G,IAAA2/G,KACA,OAAWZ,GAAuBnsH,KAAA28B,gBAAA,EAClC38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OAAAp8B,EAAA4rH,IASA1iC,EAAA1nF,UAAA4qC,eAAA,WACA,OAAW0C,GACXtvC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,SAaA8sD,EAAA1nF,UAAAgrH,gBAAA,SAAA30E,EAAA1X,GACA,OAAWqrF,GACXhsH,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OACAyb,EAAA1X,IAQA+oD,EAAA1nF,UAAA0c,UAAA,WACA,OAAWk8D,GACX56E,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,SAMA8sD,EAAA1nF,UAAA4nE,gBAAA,WAKA,OAJA5pE,KAAA2sH,uBAAA3sH,KAAAyc,gBACAzc,KAAA0sH,cAAA1sH,KAAAgtH,gBAAA,GAAAhtH,KAAA0sH,eACA1sH,KAAA2sH,sBAAA3sH,KAAAyc,eAEAzc,KAAA0sH,eAMAhjC,EAAA1nF,UAAAkrC,8BAAA,SAAApB,GACA,IAAAqB,EAAA,GAIA,OAHAA,EAAA9pC,OAAuCysC,GACvC9vC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OACAkP,EAAAqB,EAAA,GACA,IAAAu8C,EAAAv8C,EAAqD/M,GAAcC,KAOnEqpD,EAAA1nF,UAAA+pC,QAAA,WACA,OAAWrM,GAAYE,aAOvB8pD,EAAA1nF,UAAAiqC,iBAAA,SAAApU,GACA,OAAWsa,GACXnyC,KAAA28B,gBAAA,EAAA38B,KAAA28B,gBAAAt5B,OAAArD,KAAA48B,OACA/E,IAUA6xD,EAAA1nF,UAAAurC,eAAA,SAAAhS,EAAAiS,GACAxtC,KAAAytC,UAAAD,EAAAjS,EAAA,GACAv7B,KAAA28B,kBACA38B,KAAA28B,gBAAA,IAEA38B,KAAA28B,gBAAAt5B,OAAkC4rC,GAClCjvC,KAAA28B,gBAAA,EAAApB,EAAAv7B,KAAA48B,QACA58B,KAAAwc,WAGAktE,EAvNc,CAwNZ57C,IAGam/E,GAAA,GCnOf,MAAAC,GAAA,CAEA3xF,YAAA,CACAhoB,KAAAM,MACAqkG,UACA,WAIAiV,MAAA,CACA55G,KAAAQ,QAGAq5G,YAAA,CACA75G,KAAAM,MACAqkG,UACA,iBAIAmV,UAAA,CACA95G,KAAAmlC,UAIA40E,GAAArG,GAAA,CAAA97G,MAAA+hH,IAAAlF,GAAAM,GAAAC,WAGA+E,GAAAj9G,SAEA,IAAAk9G,GAAA,CACA5sH,KAAA,aACAsoH,OAAA,CAAAvB,GAAAM,GAAAM,GAAAC,GAAAG,IACAv9G,MAAAmiH,GACArF,MAAA,CACA/P,cACAl4G,KAAA6wD,WAGA6qD,QAAA,CACAxD,WAAAh5E,EAAA/U,GACA,MAAA7F,EAAA6F,EAAA,GAAA+U,EAAA,GACA1a,EAAA2F,EAAA,GAAA+U,EAAA,GACAtG,EAAAl2B,KAAAq/B,MAAAvd,EAAAF,GACA,OAAA6gG,GAAA,CACA9iE,UAAA,QACApH,SAAA,IAAAhK,GAAA9mB,GACAk4C,MAAA,CACAhgB,UAAA,OACAltC,IAAAnV,KAAAmtH,MACArsF,OAAA9gC,KAAAotH,YACA9qC,gBAAA,EACA1pD,gBAIAs/E,cACA,MAAA70G,EAAArD,KAAAu7B,YAAAl4B,OACA,GAAAA,GAAA,EACA,OAAArD,KAAAwtH,WAAAxtH,KAAAu7B,YAAAl4B,EAAA,GAAArD,KAAAu7B,YAAAl4B,EAAA,KAGA60G,cACA,MAAAzyD,EAAAzlD,KAAAylD,QACAxK,EAAAwK,EAAAqQ,cACA,IAAA46B,EAAA,CAAAm2B,GAAAtmH,KAAAP,OAUA,OATAA,KAAAmtH,QACAntH,KAAAqtH,UACApyE,EAAA4xE,eAAA,CAAA3tF,EAAA/U,KACAumE,EAAAhrF,KAAA1F,KAAAwtH,WAAAtuF,EAAA/U,MAGAumE,EAAAhrF,KAAA1F,KAAAytH,gBAGA/8B,GAEAwnB,iBACA,WAAA+U,GAAAjtH,KAAAu7B,gBC7FmMmyF,GAAA,GCO/LC,GAAY9Q,GACd6Q,GACA5B,GACAC,IACF,EACA,KACA,KACA,MAIe6B,GAAAD,WChBfC,GAAItP,QAAA,SAAAC,GACJA,EAAAH,UAAgBwP,GAAIjtH,KAAOitH,KAEZ,IAAAC,GAAA,GCLXC,GAAM,WAAgB,IAAAx4G,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBG,YAAA,oBAAAm4G,MAAAz4G,EAAAyyE,UAAA93E,MAAAqF,EAAA,QAAuE,CAAAA,EAAAO,GAAA,gBAC7Km4G,GAAe,GCSnBC,GAAA,CACAttH,KAAA,YACAwK,MAAA,CACA48E,UAAA,CACAx0E,KAAAQ,OACA1R,QAAA,cACA61G,UAAAh7E,GACA,OACA,oCACA,6CACA,8CACApT,SAAAoT,KAGA2gB,OAAA,CACAtqC,KAAAua,OACAzrB,QAAA,GAEAuH,OAAA,CACA2J,KAAAM,MACAqkG,UACA,mBAIAiQ,SAAA,CACAjQ,SACA,OACAr6D,OAAA79C,KAAA69C,OACAj0C,OAAA5J,KAAA4J,OAAA0K,IAAAzS,aAAAmI,KAAA,SCvCwMkkH,GAAA,GCOpMC,GAAYtR,GACdqR,GACAJ,GACAE,IACF,EACA,KACA,KACA,MAIejmC,GAAAomC,WChBfpmC,GAASu2B,QAAA,SAAAC,GACTA,EAAAH,UAAgBr2B,GAASpnF,KAAOonF,KAEjB,IAAAqmC,GAAA,GCLXC,GAAM,WAAgB,IAAA/4G,EAAAtV,KAAauV,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,oBAAAH,EAAAk0G,GAAA,CAAsC5zG,YAAA,mBAA8B,oBAAAN,EAAAq0G,QAAA,IAAAl0G,EAAA,OAAkDE,IAAA,MAAAC,YAAA,uBAAAm4G,MAAA,CAAoDO,UAAAh5G,EAAAi5G,MAAmB9E,MAAA,CAAQh9D,MAAA,QAAe/5C,GAAA,CAAK87G,MAAAl5G,EAAAm5G,OAAkB,CAAAn5G,EAAAo5G,GAAAp5G,EAAAq5G,GAAAr5G,EAAAyK,WAAA/V,KAAA,oBAChU4kH,GAAe,2BCenB,MAAAC,GAAA,CAEAC,UAAA,CACAv7G,KAAAua,OACAzrB,QAAA,IAGA0sH,GAAA9H,GAAA,CAAA97G,MAAA0jH,IAAAT,IAEA,IAAAY,GAAA,CACAruH,KAAA,gBACA6pH,WAAA,CACIyE,gBAAAb,IAEJjjH,MAAA4jH,GACA7W,OACA,OACAn4F,WAAA,MACAwuG,MAAA,IAGA7S,QAAA,CACAxD,MAAA5jG,EAAA2nG,GACAj8G,KAAA+f,WAAAk8F,EAAAnkF,OACAxjB,EAAA5B,GAAA,cAAA1S,KAAAqjB,MACA/O,EAAA5B,GAAA,QAAA1S,KAAAkvH,MACAlvH,KAAAsU,OAEA4jG,OAAAnqG,GACA/N,KAAA+f,WAAAhS,EAAAgS,WAAAzL,IAAAzS,KAAAstH,QAAAnvH,KAAA8uH,aAEA5W,KAAAnqG,GACA/N,KAAAuuH,MACAvuH,KAAA6wD,OAAA9iD,IAEAmqG,KAAAnqG,GACA/N,KAAAuuH,MAAA,EACAvuH,KAAA6wD,OAAA9iD,IAEAmqG,OACAl4G,KAAA28G,MAAA,OAAA38G,KAAA+f,YACA/f,KAAAuuH,MAAA,IAGArW,UAEAl4G,KAAA6G,OAAAygH,GAAA/mH,KAAAP,OAEAk4G,UACAl4G,KAAAovH,UAAA,IAAAC,GAAA/qH,EAAAtE,KAAA08G,MAAA4S,IAAA,CACA9hH,KAAAO,IACA,OAAA/N,KAAA+f,WAAA/V,KAAA,SAGAhK,KAAAovH,UAAA18G,GAAA,UAAA1S,KAAAyuH,MACIjH,GAAAjnH,KAAAP,UAAAuvH,QAEJrX,gBACAl4G,KAAAovH,WAAApvH,KAAAovH,UAAA5gH,UACAxO,KAAAsU,MACAtU,KAAAsU,IAAAqI,GAAA,cAAA3c,KAAAqjB,MACArjB,KAAAsU,IAAAqI,GAAA,QAAA3c,KAAAkvH,SC7EsMM,GAAA,GCOlMC,GAAY5S,GACd2S,GACAnB,GACAO,IACF,EACA,KACA,KACA,MAIenhG,GAAAgiG,WChBfhiG,GAAO6wF,QAAA,SAAAC,GACPA,EAAAH,UAAgB3wF,GAAO9sB,KAAO8sB,KAEf,IAAAiiG,GAAA,aCKf,MAAAlF,GAAA,CACEhM,GACA8K,GACAwB,GACAC,GACAc,GACAgC,GACAO,GACAsB,IAGFpR,GAAA,SAAAC,GACAD,GAAAqR,WAEAnF,GAAA57G,QAAAwvG,GAAAG,EAAAH,YAAAz9G,KAAAy9G,KAGA,qBAAA7tG,eAAAguG,KACAD,GAAA/tG,OAAAguG,KAGe,IAAAqR,GAAA,CACftR,cACAkM,IC/BeqF,EAAA","file":"xdhmap.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xdhmap\"] = factory();\n\telse\n\t\troot[\"xdhmap\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/*!\n * clipboard.js v2.0.4\n * https://zenorocha.github.io/clipboard.js\n * \n * Licensed MIT © Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _clipboardAction = __webpack_require__(1);\n\nvar _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n\nvar _tinyEmitter = __webpack_require__(3);\n\nvar _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\nvar _goodListener = __webpack_require__(4);\n\nvar _goodListener2 = _interopRequireDefault(_goodListener);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\nvar Clipboard = function (_Emitter) {\n    _inherits(Clipboard, _Emitter);\n\n    /**\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     * @param {Object} options\n     */\n    function Clipboard(trigger, options) {\n        _classCallCheck(this, Clipboard);\n\n        var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n        _this.resolveOptions(options);\n        _this.listenClick(trigger);\n        return _this;\n    }\n\n    /**\n     * Defines if attributes would be resolved using internal setter functions\n     * or custom functions that were passed in the constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(Clipboard, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n            this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n            this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n            this.container = _typeof(options.container) === 'object' ? options.container : document.body;\n        }\n\n        /**\n         * Adds a click event listener to the passed trigger.\n         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n         */\n\n    }, {\n        key: 'listenClick',\n        value: function listenClick(trigger) {\n            var _this2 = this;\n\n            this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                return _this2.onClick(e);\n            });\n        }\n\n        /**\n         * Defines a new `ClipboardAction` on each click event.\n         * @param {Event} e\n         */\n\n    }, {\n        key: 'onClick',\n        value: function onClick(e) {\n            var trigger = e.delegateTarget || e.currentTarget;\n\n            if (this.clipboardAction) {\n                this.clipboardAction = null;\n            }\n\n            this.clipboardAction = new _clipboardAction2.default({\n                action: this.action(trigger),\n                target: this.target(trigger),\n                text: this.text(trigger),\n                container: this.container,\n                trigger: trigger,\n                emitter: this\n            });\n        }\n\n        /**\n         * Default `action` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultAction',\n        value: function defaultAction(trigger) {\n            return getAttributeValue('action', trigger);\n        }\n\n        /**\n         * Default `target` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultTarget',\n        value: function defaultTarget(trigger) {\n            var selector = getAttributeValue('target', trigger);\n\n            if (selector) {\n                return document.querySelector(selector);\n            }\n        }\n\n        /**\n         * Returns the support of the given action, or all actions if no action is\n         * given.\n         * @param {String} [action]\n         */\n\n    }, {\n        key: 'defaultText',\n\n\n        /**\n         * Default `text` lookup function.\n         * @param {Element} trigger\n         */\n        value: function defaultText(trigger) {\n            return getAttributeValue('text', trigger);\n        }\n\n        /**\n         * Destroy lifecycle.\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.listener.destroy();\n\n            if (this.clipboardAction) {\n                this.clipboardAction.destroy();\n                this.clipboardAction = null;\n            }\n        }\n    }], [{\n        key: 'isSupported',\n        value: function isSupported() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n\n            var actions = typeof action === 'string' ? [action] : action;\n            var support = !!document.queryCommandSupported;\n\n            actions.forEach(function (action) {\n                support = support && !!document.queryCommandSupported(action);\n            });\n\n            return support;\n        }\n    }]);\n\n    return Clipboard;\n}(_tinyEmitter2.default);\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\n\nfunction getAttributeValue(suffix, element) {\n    var attribute = 'data-clipboard-' + suffix;\n\n    if (!element.hasAttribute(attribute)) {\n        return;\n    }\n\n    return element.getAttribute(attribute);\n}\n\nmodule.exports = Clipboard;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _select = __webpack_require__(2);\n\nvar _select2 = _interopRequireDefault(_select);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\nvar ClipboardAction = function () {\n    /**\n     * @param {Object} options\n     */\n    function ClipboardAction(options) {\n        _classCallCheck(this, ClipboardAction);\n\n        this.resolveOptions(options);\n        this.initSelection();\n    }\n\n    /**\n     * Defines base properties passed from constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(ClipboardAction, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = options.action;\n            this.container = options.container;\n            this.emitter = options.emitter;\n            this.target = options.target;\n            this.text = options.text;\n            this.trigger = options.trigger;\n\n            this.selectedText = '';\n        }\n\n        /**\n         * Decides which selection strategy is going to be applied based\n         * on the existence of `text` and `target` properties.\n         */\n\n    }, {\n        key: 'initSelection',\n        value: function initSelection() {\n            if (this.text) {\n                this.selectFake();\n            } else if (this.target) {\n                this.selectTarget();\n            }\n        }\n\n        /**\n         * Creates a fake textarea element, sets its value from `text` property,\n         * and makes a selection on it.\n         */\n\n    }, {\n        key: 'selectFake',\n        value: function selectFake() {\n            var _this = this;\n\n            var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n            this.removeFake();\n\n            this.fakeHandlerCallback = function () {\n                return _this.removeFake();\n            };\n            this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n            this.fakeElem = document.createElement('textarea');\n            // Prevent zooming on iOS\n            this.fakeElem.style.fontSize = '12pt';\n            // Reset box model\n            this.fakeElem.style.border = '0';\n            this.fakeElem.style.padding = '0';\n            this.fakeElem.style.margin = '0';\n            // Move element out of screen horizontally\n            this.fakeElem.style.position = 'absolute';\n            this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n            // Move element to the same position vertically\n            var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n            this.fakeElem.style.top = yPosition + 'px';\n\n            this.fakeElem.setAttribute('readonly', '');\n            this.fakeElem.value = this.text;\n\n            this.container.appendChild(this.fakeElem);\n\n            this.selectedText = (0, _select2.default)(this.fakeElem);\n            this.copyText();\n        }\n\n        /**\n         * Only removes the fake element after another click event, that way\n         * a user can hit `Ctrl+C` to copy because selection still exists.\n         */\n\n    }, {\n        key: 'removeFake',\n        value: function removeFake() {\n            if (this.fakeHandler) {\n                this.container.removeEventListener('click', this.fakeHandlerCallback);\n                this.fakeHandler = null;\n                this.fakeHandlerCallback = null;\n            }\n\n            if (this.fakeElem) {\n                this.container.removeChild(this.fakeElem);\n                this.fakeElem = null;\n            }\n        }\n\n        /**\n         * Selects the content from element passed on `target` property.\n         */\n\n    }, {\n        key: 'selectTarget',\n        value: function selectTarget() {\n            this.selectedText = (0, _select2.default)(this.target);\n            this.copyText();\n        }\n\n        /**\n         * Executes the copy operation based on the current selection.\n         */\n\n    }, {\n        key: 'copyText',\n        value: function copyText() {\n            var succeeded = void 0;\n\n            try {\n                succeeded = document.execCommand(this.action);\n            } catch (err) {\n                succeeded = false;\n            }\n\n            this.handleResult(succeeded);\n        }\n\n        /**\n         * Fires an event based on the copy operation result.\n         * @param {Boolean} succeeded\n         */\n\n    }, {\n        key: 'handleResult',\n        value: function handleResult(succeeded) {\n            this.emitter.emit(succeeded ? 'success' : 'error', {\n                action: this.action,\n                text: this.selectedText,\n                trigger: this.trigger,\n                clearSelection: this.clearSelection.bind(this)\n            });\n        }\n\n        /**\n         * Moves focus away from `target` and back to the trigger, removes current selection.\n         */\n\n    }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n            if (this.trigger) {\n                this.trigger.focus();\n            }\n\n            window.getSelection().removeAllRanges();\n        }\n\n        /**\n         * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n         * @param {String} action\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\n         * Destroy lifecycle.\n         */\n        value: function destroy() {\n            this.removeFake();\n        }\n    }, {\n        key: 'action',\n        set: function set() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n\n            this._action = action;\n\n            if (this._action !== 'copy' && this._action !== 'cut') {\n                throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n            }\n        }\n\n        /**\n         * Gets the `action` property.\n         * @return {String}\n         */\n        ,\n        get: function get() {\n            return this._action;\n        }\n\n        /**\n         * Sets the `target` property using an element\n         * that will be have its content copied.\n         * @param {Element} target\n         */\n\n    }, {\n        key: 'target',\n        set: function set(target) {\n            if (target !== undefined) {\n                if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                    if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                    }\n\n                    if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                    }\n\n                    this._target = target;\n                } else {\n                    throw new Error('Invalid \"target\" value, use a valid Element');\n                }\n            }\n        }\n\n        /**\n         * Gets the `target` property.\n         * @return {String|HTMLElement}\n         */\n        ,\n        get: function get() {\n            return this._target;\n        }\n    }]);\n\n    return ClipboardAction;\n}();\n\nmodule.exports = ClipboardAction;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar is = __webpack_require__(5);\nvar delegate = __webpack_require__(6);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar closest = __webpack_require__(7);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ })\n/******/ ]);\n});","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"map\",staticClass:\"xdh-map\"},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * 地图图层配置，支持OSM、百度、离线谷歌、高德、超图、方正PGIS\n * @type {{OSM: {title: string, server: null, preview: string}, Baidu: {title: string, server: string, preview: string}, Amap: {title: string, server: string, preview: string}, SupperMap: {title: string, server: string, preview: string}, Google: {title: string, server: string, preview: string}, Founder: {title: string, server: string, preview: string}}}\n */\nconst LAYERS = {\n  OSM: {\n    title: '默认',\n    server: null,\n    preview: ''\n  },\n  Baidu: {\n    title: '百度地图',\n    server: 'http://online{index}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&udt=20170301&scaler=1&p=1',\n    preview: ''\n  },\n  Amap: {\n    title: '高德地图',\n    server: 'http://webrd03.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}&lang=zh_cn',\n    preview: ''\n  },\n  SuperMap: {\n    title: '超图',\n    server: 'http://53.1.238.17/iserver/services/map-pgisvec/rest/maps/pgisvecv1',\n    preview: ''\n  },\n  Google: {\n    title: '谷歌地图',\n    server: 'http://172.19.40.108:8081/maptile/googlemaps/roadmap/{z}/{x}/{y}.png',\n    preview: ''\n  },\n  Founder: {\n    title: '方正PGIS',\n    server: 'http://127.0.0.1:3000/proxy',\n    preview: ''\n  }\n}\n\n\n// 验证配置的名称是否存在\nexport function validate(key) {\n  const keys = Object.keys(LAYERS)\n  const valid = keys.includes(key)\n  if (!valid) {\n    throw new Error(`图层配置 ${key} 不存在`)\n  }\n  return valid\n}\n\n\n/**\n * 更新图层服务配置\n * @param {Object} layers 图层配置信息对象\n *\n * @example\n *\n * setLayersConfig({\n *  Baidu: {\n *    title:'百度地图'\n *  }\n * })\n *\n */\nexport function set(layers) {\n  Object.keys(layers).forEach(key => {\n    const layer = layers[key]\n    Object.assign(LAYERS[key], layer)\n  })\n}\n\n/**\n * 获取图层服务配置\n * @param {String} [key=null] 图层名称,为null时表示获取全部图层配置\n * @param {boolean} [toArray=false] 是否转换成数组\n * @return {Object|Array}\n */\nexport function get(key = null, toArray = false) {\n  if (key && validate(key)) {\n    return LAYERS[key]\n  }\n  if (!toArray) {\n    return LAYERS\n  }\n  return Object.keys(LAYERS).map(key => {\n    return {\n      name: key,\n      ...LAYERS[key]\n    }\n  })\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n *  超图PGIS图层创建类\n *\n *  @example\n *  /src/utils/openlayers 实例化参数\n *       {\n *         type: 'SuperMap',\n *          path: 'http://53.1.238.17/iserver/services/map-pgisvec/rest/maps/pgisvecv1',\n *          center: [117.2794, 31.9265],\n *          zoom: 10,\n *          layerCreator(path, view, TileLayer) {\n *            return new TileLayer({\n *              source: new TileSuperMapRest({\n *                url: path\n *              }),\n *              projection: 'EPSG:4326'\n *            })\n *          }\n *        }\n */\n\nimport {TileImage} from 'ol/source'\nimport {toSize} from 'ol/size'\nimport {createXYZ} from 'ol/tilegrid'\nimport TileGrid from 'ol/tilegrid/TileGrid'\n\nconst Unit = {\n  /**  米 */\n  METER: 'METER',\n  /**  千米 */\n  KILOMETER: 'KILOMETER',\n  /**  英里 */\n  MILE: 'MILE',\n  /**  码 */\n  YARD: 'YARD',\n  /**  度 */\n  DEGREE: 'DEGREE',\n  /**  毫米 */\n  MILLIMETER: 'MILLIMETER',\n  /**  厘米 */\n  CENTIMETER: 'CENTIMETER',\n  /**  英寸 */\n  INCH: 'INCH',\n  /**  分米 */\n  DECIMETER: 'DECIMETER',\n  /**  英尺 */\n  FOOT: 'FOOT',\n  /**  秒 */\n  SECOND: 'SECOND',\n  /**  分 */\n  MINUTE: 'MINUTE',\n  /**  弧度 */\n  RADIAN: 'RADIAN'\n}\n\n/**\n * @enum ServerType\n * @memberOf SuperMap\n * @description 服务器类型\n * @type {string}\n */\nconst ServerType = {\n  /** ISERVER */\n  ISERVER: 'ISERVER',\n  /** IPORTAL */\n  IPORTAL: 'IPORTAL',\n  /** ONLINE */\n  ONLINE: 'ONLINE'\n}\n\n\n/**\n * @function ol.supermap.Util.resolutionToScale\n * @description 通过分辨率计算比例尺。\n * @param {number} resolution - 分辨率。\n * @param {number} dpi - 屏幕分辨率。\n * @param {string} mapUnit - 地图单位。\n * @returns {number} 比例尺。\n */\nfunction resolutionToScale(resolution, dpi, mapUnit) {\n  let inchPerMeter = 1 / 0.0254;\n  // 地球半径。\n  let meterPerMapUnit = getMeterPerMapUnit(mapUnit);\n  let scale = resolution * dpi * inchPerMeter * meterPerMapUnit;\n  scale = 1 / scale;\n  return scale;\n}\n\n/**\n * @function ol.supermap.Util.scaleToResolution\n * @description 通过比例尺计算分辨率。\n * @param {number} scale - 比例尺。\n * @param {number} dpi - 屏幕分辨率。\n * @param {string} mapUnit - 地图单位。\n * @returns {number} 分辨率。\n */\nfunction scaleToResolution(scale, dpi, mapUnit) {\n  let inchPerMeter = 1 / 0.0254;\n  let meterPerMapUnitValue = this.getMeterPerMapUnit(mapUnit);\n  let resolution = scale * dpi * inchPerMeter * meterPerMapUnitValue;\n  resolution = 1 / resolution;\n  return resolution;\n}\n\n/**\n * @private\n * @function ol.supermap.Util.getMeterPerMapUnit\n * @description 获取每地图单位多少米。\n * @param {string} mapUnit - 地图单位。\n * @returns {number} 返回每地图单位多少米。\n */\nfunction getMeterPerMapUnit(mapUnit) {\n  let earchRadiusInMeters = 6378137;\n  let meterPerMapUnit;\n  if (mapUnit === Unit.METER) {\n    meterPerMapUnit = 1;\n  } else if (mapUnit === Unit.DEGREE) {\n    // 每度表示多少米。\n    meterPerMapUnit = Math.PI * 2 * earchRadiusInMeters / 360;\n  } else if (mapUnit === Unit.KILOMETER) {\n    meterPerMapUnit = 1.0E-3;\n  } else if (mapUnit === Unit.INCH) {\n    meterPerMapUnit = 1 / 2.5399999918E-2;\n  } else if (mapUnit === Unit.FOOT) {\n    meterPerMapUnit = 0.3048;\n  } else {\n    return meterPerMapUnit;\n  }\n  return meterPerMapUnit;\n}\n\n\n/**\n * @class ol.source.TileSuperMapRest\n * @category iServer Map\n * @classdesc SuperMap iServer TileImage 图层源。\n * @param {Object} options - 参数。\n * @param {string} options.url - 服务地址。\n * @param {(ol.tilegrid.TileGrid|ol.tilegrid.TileGrid)} [options.tileGrid] - 瓦片网格对象。当不指定时，会通过 options.extent 或投影范围生成。\n * @param {SuperMap.ServerType} [options.serverType=ServerType.ISERVER] - 服务类型 iServer|iPortal|online。\n * @param {boolean} [options.redirect = false] - 是否重定向。\n * @param {boolean} [options.transparent = true] - 瓦片是否透明。\n * @param {boolean} [options.cacheEnabled = true] - 是否使用服务端的缓存。\n * @param {Object} [options.prjCoordSys] - 请求的地图的坐标参考系统。当此参数设置的坐标系统不同于地图的原有坐标系统时， 系统会进行动态投影，并返回动态投影后的地图瓦片。例如：{'epsgCode':3857}。\n * @param {string} [options.layersID] - 获取进行切片的地图图层 ID，即指定进行地图切片的图层，可以是临时图层集，也可以是当前地图中图层的组合。\n * @param {boolean} [options.clipRegionEnabled = false] - 是否只地图只显示该区域覆盖的部分。true 表示地图只显示该区域覆盖的部分。\n * @param {(ol.geom.Geometry|ol.geom.Geometry)} [options.clipRegion] - 地图显示裁剪的区域。是一个面对象，当 clipRegionEnabled = true 时有效，即地图只显示该区域覆盖的部分。\n * @param {boolean} [options.overlapDisplayed = false] - 地图对象在同一范围内时，是否重叠显示。如果为 true，则同一范围内的对象会直接压盖；如果为 false 则通过 overlapDisplayedOptions 控制对象不压盖显示。\n * @param {SuperMap.OverlapDisplayedOptions} [options.overlapDisplayedOptions] - 避免地图对象压盖显示的过滤选项，当 overlapDisplayed 为 false 时有效，用来增强对地图对象压盖时的处理。\n * @param {string} [options.tileversion] - 切片版本名称，_cache 为 true 时有效。\n * @param {string} [options.tileProxy] - 代理地址。\n * @param {string} [options.format = 'png'] - 瓦片表述类型，支持 'png' 、'bmp' 、'jpg' 和 'gif' 四种表述类型。\n * @extends {ol.source.TileImage}\n */\nexport default class TileSuperMapRest extends TileImage {\n  \n  // eslint-disable-next-line\n  constructor(options) {\n    options = options || {};\n    if (options.url === undefined) {\n      return;\n    }\n\n    options.format = options.format ? options.format : 'png';\n    let layerUrl = options.url + '/tileImage.' + options.format + '?';\n\n    options.serverType = options.serverType || ServerType.ISERVER;\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      logo: options.logo,\n      opaque: options.opaque,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: options.state,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      cacheEnabled: options.cacheEnabled,\n      layersID: options.layersID\n    });\n    if (options.tileProxy) {\n      this.tileProxy = options.tileProxy;\n    }\n    this.options = options;\n    this._url = options.url;\n    // 当前切片在切片集中的index\n    this.tileSetsIndex = -1;\n    this.tempIndex = -1;\n    let me = this;\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.getAllRequestParams\n     * @description 获取全部请求参数。\n     */\n    function getAllRequestParams() {\n      let me = this,\n        params = {};\n\n      params['redirect'] = options.redirect !== undefined ? options.redirect : false;\n      // 切片是否透明\n      params['transparent'] = options.transparent !== undefined ? options.transparent : true;\n      params['cacheEnabled'] = !(options.cacheEnabled === false);\n      // 存储一个cacheEnabled参数\n      me.cacheEnabled = params['cacheEnabled'];\n      params['_cache'] = params['cacheEnabled'];\n\n      // 设置切片原点\n      if (this.origin) {\n        params['origin'] = JSON.stringify({\n          x: this.origin[0],\n          y: this.origin[1]\n        });\n      }\n\n      if (options.prjCoordSys) {\n        params['prjCoordSys'] = JSON.stringify(options.prjCoordSys);\n      }\n\n      if (options.layersID) {\n        params['layersID'] = options.layersID.toString();\n      }\n\n      if (!options.overlapDisplayed) {\n        params['overlapDisplayed'] = false;\n        if (options.overlapDisplayedOptions) {\n          params['overlapDisplayedOptions'] = me.overlapDisplayedOptions.toString();\n        }\n      } else {\n        params['overlapDisplayed'] = true;\n      }\n\n      if (options.cacheEnabled && options.tileversion) {\n        params['tileversion'] = options.tileversion.toString();\n      }\n\n      return params;\n    }\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.getFullRequestUrl\n     * @description 获取完整的请求地址。\n     */\n    function getFullRequestUrl() {\n      if (this._paramsChanged) {\n        this._layerUrl = createLayerUrl.call(this);\n        this._paramsChanged = false;\n      }\n      return this._layerUrl || createLayerUrl.call(this);\n    }\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.createLayerUrl\n     * @description 获取新建图层地址。\n     */\n    function createLayerUrl() {\n      this._layerUrl = layerUrl + encodeURI(getRequestParamString.call(this));\n      return this._layerUrl;\n    }\n\n    /**\n     * @function  ol.source.TileSuperMapRest.prototype.getRequestParamString\n     * @description 获取请求参数的字符串。\n     */\n    function getRequestParamString() {\n      this.requestParams = this.requestParams || getAllRequestParams.call(this);\n      let params = [];\n      for (let key in this.requestParams) {\n        params.push(key + '=' + this.requestParams[key]);\n      }\n      return params.join('&');\n    }\n\n    function tileUrlFunction(tileCoord, pixelRatio, projection) {\n      if (!me.tileGrid) {\n        if (me.extent) {\n          me.tileGrid = TileSuperMapRest.createTileGrid(options.extent);\n          if (me.resolutions) {\n            me.tileGrid.resolutions = me.resolutions;\n          }\n        } else {\n          if (projection.getCode() === 'EPSG:3857') {\n            me.tileGrid = TileSuperMapRest.createTileGrid([-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892]);\n            me.extent = [-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892];\n          }\n          if (projection.getCode() === 'EPSG:4326') {\n            me.tileGrid = TileSuperMapRest.createTileGrid([-180, -90, 180, 90]);\n            me.extent = [-180, -90, 180, 90];\n          }\n        }\n      }\n      me.origin = me.tileGrid.getOrigin(0);\n      let z = tileCoord[0];\n      let x = tileCoord[1];\n      let y = -tileCoord[2] - 1;\n      let resolution = me.tileGrid.getResolution(z);\n      let dpi = 96;\n      let unit = projection.getUnits();\n      if (unit === 'degrees') {\n        unit = Unit.DEGREE;\n      }\n      if (unit === 'm') {\n        unit = Unit.METER;\n      }\n      let scale = resolutionToScale(resolution, dpi, unit);\n      let tileSize = toSize(me.tileGrid.getTileSize(z, me.tmpSize));\n      let layerUrl = getFullRequestUrl.call(me);\n      let url = layerUrl + encodeURI('&x=' + x + '&y=' + y + '&width=' + tileSize[0] + '&height=' + tileSize[1] + '&scale=' + scale);\n      // 支持代理\n      if (me.tileProxy) {\n        url = me.tileProxy + encodeURIComponent(url);\n      }\n      if (!me.cacheEnabled) {\n        url += '&_t=' + new Date().getTime();\n      }\n      return url;\n    }\n\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.setTileSetsInfo\n   * @description 设置瓦片集信息。\n   * @param {Object} tileSets - 瓦片集合。\n   */\n  setTileSetsInfo(tileSets) {\n    this.tileSets = tileSets;\n    if (Array.isArray(this.tileSets)) {\n      this.tileSets = tileSets[0];\n    }\n    if (!this.tileSets) {\n      return;\n    }\n    this.dispatchEvent({\n      type: 'tilesetsinfoloaded',\n      value: {\n        tileVersions: this.tileSets.tileVersions\n      }\n    });\n    this.changeTilesVersion();\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.lastTilesVersion\n   * @description 请求上一个版本切片，并重新绘制。\n   */\n  lastTilesVersion() {\n    this.tempIndex = this.tileSetsIndex - 1;\n    this.changeTilesVersion();\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.nextTilesVersion\n   * @description 请求下一个版本切片，并重新绘制。\n   */\n  nextTilesVersion() {\n    this.tempIndex = this.tileSetsIndex + 1;\n    this.changeTilesVersion();\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.changeTilesVersion\n   * @description 切换到某一版本的切片，并重绘。通过 this.tempIndex 保存需要切换的版本索引。\n   */\n  changeTilesVersion() {\n    let me = this;\n    // 切片版本集信息是否存在\n    if (me.tileSets == null) {\n      return;\n    }\n    if (me.tempIndex === me.tileSetsIndex || this.tempIndex < 0) {\n      return;\n    }\n    // 检测index是否可用\n    let tileVersions = me.tileSets.tileVersions;\n    if (tileVersions && me.tempIndex < tileVersions.length && me.tempIndex >= 0) {\n      let name = tileVersions[me.tempIndex].name;\n      let result = me.mergeTileVersionParam(name);\n      if (result) {\n        me.tileSetsIndex = me.tempIndex;\n        me.dispatchEvent({\n          type: 'tileversionschanged',\n          value: {\n            tileVersion: tileVersions[me.tempIndex]\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.updateCurrentTileSetsIndex\n   * @description 更新当前切片集索引，目前主要提供给控件使用。\n   * @param {number} index - 索引号。\n   */\n  updateCurrentTileSetsIndex(index) {\n    this.tempIndex = index;\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.prototype.mergeTileVersionParam\n   * @description 更改 URL 请求参数中的切片版本号，并重绘。\n   * @param {Object} version - 版本信息。\n   * @returns {boolean} 是否成功。\n   */\n  mergeTileVersionParam(version) {\n    if (version) {\n      this.requestParams['tileversion'] = version;\n      this._paramsChanged = true;\n      this.refresh();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.optionsFromMapJSON\n   * @description 从 MapJSON 中获取参数对象。\n   * @param {string} url - 地址。\n   * @param {Object} mapJSONObj - 地图 JSON 对象。\n   */\n  static optionsFromMapJSON(url, mapJSONObj) {\n    let options = {};\n    options.url = url;\n    options.crossOrigin = 'anonymous';\n    let extent = [mapJSONObj.bounds.left, mapJSONObj.bounds.bottom, mapJSONObj.bounds.right, mapJSONObj.bounds.top];\n    let resolutions = getResolutions();\n\n    function getResolutions() {\n      let level = 17;\n      let dpi = 96;\n      let width = (extent[2] - extent[0]);\n      let height = (extent[3] - extent[1]);\n      let tileSize = width >= height ? width : height;\n      let maxReolution;\n      if (tileSize === width) {\n        maxReolution = tileSize / mapJSONObj.viewer.width;\n      } else {\n        maxReolution = tileSize / mapJSONObj.viewer.height;\n      }\n      let resolutions = [];\n      let unit = Unit.METER;\n      if (mapJSONObj.coordUnit === Unit.DEGREE) {\n        unit = Unit.DEGREE;\n      }\n      if (mapJSONObj.visibleScalesEnabled && mapJSONObj.visibleScales && mapJSONObj.visibleScales.length > 0) {\n        for (let i = 0; i < mapJSONObj.visibleScales.length; i++) {\n          resolutions.push(scaleToResolution(mapJSONObj.visibleScales[i], dpi, unit));\n        }\n      } else {\n        for (let i = 0; i < level; i++) {\n          resolutions.push(maxReolution / Math.pow(2, i));\n        }\n      }\n\n      function sortNumber(a, b) {\n        return b - a;\n      }\n\n      return resolutions.sort(sortNumber);\n    }\n\n    options.tileGrid = new TileGrid({\n      extent: extent,\n      resolutions: resolutions\n    });\n    return options;\n  }\n\n  /**\n   * @function  ol.source.TileSuperMapRest.createTileGrid\n   * @description 创建切片网格。\n   * @param {number} extent - 长度。\n   * @param {number} maxZoom - 最大的放大级别。\n   * @param {number} minZoom - 最小的放大级别。\n   * @param {number} tileSize - 瓦片的尺寸。\n   * @param {number} origin - 原点。\n   * */\n  static createTileGrid(extent, maxZoom, minZoom, tileSize, origin) {\n    let tilegrid = createXYZ({\n      extent: extent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: tileSize\n    });\n    return new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: tilegrid.getResolutions(),\n      tileSize: tilegrid.getTileSize()\n    });\n  }\n}\n","import TileLayer from 'ol/layer/Tile'\nimport OSM from 'ol/source/OSM'\nimport XYZ from 'ol/source/XYZ'\nimport TileGrid from 'ol/tilegrid/TileGrid'\nimport WMTSGrid from 'ol/tilegrid/WMTS'\nimport WMTS from 'ol/source/WMTS'\nimport TileImage from 'ol/source/TileImage'\nimport {get as getProj} from 'ol/proj'\nimport {getWidth, getTopLeft} from 'ol/extent'\nimport TileSuperMapRest from './plugins/TileSuperMapRest'\nimport {validate, get as getConfig} from './setting'\n\n\n// 创建百度地图图层\nfunction createBaiduLayer(config) {\n  const projection = getProj('EPSG:3857')\n  \n  const tileGrid = new TileGrid({\n    origin: [0, 0],\n    resolutions: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\n      .map(function (x) {\n        return Math.pow(2, 18 - x)\n      })\n  });\n  let source = new TileImage({\n    projection: projection,\n    tileGrid: tileGrid,\n    tileUrlFunction: function (tileCoord) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const index = Math.ceil(Math.random() * 5)\n      return config.server.replace(/{x}/g, x)\n        .replace(/{y}/g, y)\n        .replace(/{z}/g, z)\n        .replace(/{index}/g, index)\n    }\n  });\n  \n  return new TileLayer({\n    source: source\n  })\n  \n}\n\n// 创建方正地图图层\nfunction createFounderLayer(config) {\n  const tileSizePixels = 256\n  const projection = getProj('EPSG:4326')\n  const projectionExtent = projection.getExtent();\n  const size = getWidth(projectionExtent) / tileSizePixels\n  let matrixIds = [];\n  let resolutions = [];\n  for (let i = 0; i <= 20; i++) {\n    matrixIds[i] = i;\n    resolutions[i] = size / Math.pow(2, i);\n  }\n  const tileGrid = new WMTSGrid({\n    origin: getTopLeft(projectionExtent),\n    resolutions: resolutions,\n    matrixIds: matrixIds\n  });\n  const basePath = config.server\n  return new TileLayer({\n    source: new WMTS({\n      url: basePath,\n      tileGrid: tileGrid,\n      projection: projection,\n      tileLoadFunction: function (imageTile, src) {\n        const tileCoord = imageTile.tileCoord;\n        let zoom = tileCoord[0];\n        let col = tileCoord[1];\n        let row = -(tileCoord[2] + 1);\n        imageTile.getImage().src = `${basePath}?Service=getImage&Type=RGB&ZoomOffset=0&Col=${col}&Row=${row}&Zoom=${zoom}&V=0.3`;\n      }\n    }),\n    wrapX: false\n  })\n}\n\n\n/**\n * 创建地图图层\n * @param {String} key 地图图层配置名称\n * @return {TileLayer} TileLayer\n *\n * @example\n *\n * new Map({\n *           layers: [createLayer('Baidu')],\n *           target: this.$refs.map,\n *           view: new View({\n *              projection: 'EPSG:4326',\n *              center: [120, 30],\n *              zoom: 4\n *           })\n *       })\n */\nexport function createLayer(key = 'OSM') {\n  if (!validate(key)) return null\n  \n  const config = getConfig(key)\n  let layer = null\n  switch (key) {\n    case 'OSM':\n      layer = new TileLayer({\n        source: new OSM()\n      })\n      break\n    // Google和高德的方式相同\n    case 'Google':\n    case 'Amap':\n      layer = new TileLayer({\n        source: new XYZ({\n          url: config.server\n        })\n      })\n      break\n    case 'Baidu':\n      layer = createBaiduLayer(config)\n      break\n    case 'SuperMap':\n      layer = new TileLayer({\n        source: new TileSuperMapRest({\n          url: config.server\n        }),\n        projection: 'EPSG:4326'\n      })\n      break\n    case 'Founder':\n      layer = createFounderLayer(config)\n      break\n  }\n  return layer\n}\n","<template>\n  <div class=\"xdh-map\" ref=\"map\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\n  import Map from 'ol/Map'\n  import View from 'ol/View'\n  import VectorLayer from 'ol/layer/Vector'\n  import VectorSource from 'ol/source/Vector'\n  import {set as setLayerConfig} from 'utils/setting'\n  import {createLayer} from 'utils/layers'\n  /*\n   地图支持以下事件：\n    change        (module:ol/events/Event~Event)    - Generic change event. Triggered when the revision counter is increased.change:layerGroup (module:ol/Object.ObjectEvent)\n    change:size   (module:ol/Object.ObjectEvent)\n    change:target (module:ol/Object.ObjectEvent)\n    change:view   (module:ol/Object.ObjectEvent)\n    click         (module:ol/MapBrowserEvent~MapBrowserEvent) - A click with no dragging. A double click will fire two of this.\n    dblclick      (module:ol/MapBrowserEvent~MapBrowserEvent) - A true double click, with no dragging.\n    moveend       (module:ol/MapEvent~MapEvent) - Triggered after the map is moved.\n    movestart     (module:ol/MapEvent~MapEvent) - Triggered when the map starts moving.\n    pointerdrag   (module:ol/MapBrowserEvent~MapBrowserEvent) - Triggered when a pointer is dragged.\n    pointermove   (module:ol/MapBrowserEvent~MapBrowserEvent) - Triggered when a pointer is moved. Note that on touch devices this is triggered when the map is panned, so is not the same as mousemove.\n    postcompose   (module:ol/render/Event~RenderEvent)\n    postrender    (module:ol/MapEvent~MapEvent) - Triggered after a map frame is rendered.\n    precompose    (module:ol/render/Event~RenderEvent)\n    propertychange (module:ol/Object.ObjectEvent) - Triggered when a property is changed.\n    rendercomplete (module:ol/render/Event~RenderEvent) - Triggered when rendering is complete, i.e. all sources and tiles have finished loading for the current viewport, and all tiles are faded in.\n    singleclick    (module:ol/MapBrowserEvent~MapBrowserEvent) - A true single click with no dragging and no double click. Note that this event is delayed by 250 ms to ensure that it is not a double click.\n\n  */\n  export default {\n    name: 'XdhMap',\n    props: {\n      // 最小缩放\n      minZoom: {\n        type: Number,\n        default: 1\n      },\n      // 最大缩放\n      maxZoom: {\n        type: Number,\n        default: 20\n      },\n      // 初始化缩放层级\n      zoom: {\n        type: Number,\n        default: 10\n      },\n      // 初始化中心经纬度\n      center: {\n        type: Array,\n        default() {\n          return [120, 30]\n        }\n      },\n      // 初始化图层瓦片地图类型\n      type: {\n        type: String,\n        default: 'OSM'\n      },\n      // 图层瓦片服务配置，必须返回Promise\n      layerConfig: {\n        type: Function,\n        default() {\n          return Promise.resolve({})\n        }\n      }\n    },\n    methods: {\n      /**\n       * 图形事件处理句柄\n       * @private\n       */\n      _eventHandler(e) {\n        const feat = this.getFeatureAtPixel(e.pixel)\n        if (feat) {\n          const array = this._featureEvents[e.type] || []\n          const item = array.find(item => item.feature === feat)\n          if (item) {\n            item.listener(e, item.feature)\n          }\n        }\n      },\n      /**\n       * 绑定图形事件\n       * @private\n       * @param {string} type 事件类型名称\n       * @param {FeatureClass} feature 图形实例\n       * @param {Function} listener 事件句柄\n       * @param {number} uid 图形所属的Vue实例id\n       */\n      _bind(type, feature, listener, uid) {\n        // 图形的事件需要地图图层转发，为提高性能，共享图层事件\n        // 相同的事件名称只注册一次\n        let typeEvents = this._featureEvents[type]\n        if (!typeEvents) {\n          this._featureEvents[type] = []\n          this.map.on(type, this._eventHandler)\n        }\n        this._featureEvents[type].push({type, feature, listener, uid})\n      },\n      /**\n       * 给子组件的图形绑定事件\n       * @param {VueComponent} 子组件实例\n       */\n      bindEvents(vm) {\n        if (!this.map) return\n        const listeners = vm.$listeners\n        Object.keys(listeners).forEach(key => {\n          this._bind(key, vm.feature, listeners[key], vm._uid)\n        })\n      },\n      /**\n       * 给子组件的图形销毁事件\n       * @param {VueComponent} 子组件实例\n       */\n      unbindEvents(vm) {\n        if (!this.map) return\n        const listeners = vm.$listeners\n        const uid = vm._uid\n        Object.keys(listeners).forEach(key => {\n          const array = this._featureEvents[key] || []\n          array.splice(array.findIndex(item => item.uid === uid), 1)\n          if (array.length === 0) {\n            delete this._featureEvents[key]\n            this.map.un(key, this._eventHandler)\n          }\n        })\n      },\n      /**\n       * 在地图上画图形\n       * @param {FeatureClass} feature 图形实例\n       */\n      addFeature(feature) {\n        // 共享矢量图层，把所有图形就加入同一个图层\n        if (this.vectorLayer) {\n          const source = this.vectorLayer.getSource()\n          source.addFeature(feature)\n        } else {\n          let vectorSource = new VectorSource({\n            features: [feature]\n          })\n\n          this.vectorLayer = new VectorLayer({\n            source: vectorSource\n          })\n          this.map.addLayer(this.vectorLayer)\n        }\n      },\n      /**\n       * 删除图形\n       * @param {FeatureClass} feature 图形实例\n       */\n      removeFeature(feature) {\n        if (!this.vectorLayer) return\n        const source = this.vectorLayer.getSource()\n        source.removeFeature(feature)\n      },\n      /**\n       * 根据地图上的像素位置获取图形对象\n       * @param  {Array} pixel 位置像素 [x,y]\n       * @return {module:ol/Feature|module:ol/render/Feature|*}\n       */\n      getFeatureAtPixel(pixel) {\n        return this.map.forEachFeatureAtPixel(pixel, function (feature) {\n          return feature\n        })\n      },\n      /**\n       * 切换地图类型\n       * @param {string} type 地图类型，如： Baidu / Amap / OSM\n       */\n      changeType(type) {\n        if (!type) return\n\n        const layers = this.map.getLayers().getArray()\n        const tileLayer = layers.find(layer => layer.type === 'TILE')\n        if (tileLayer) {\n          this.map.removeLayer(tileLayer)\n          tileLayer.disposeInternal()\n        }\n        this.map.addLayer(createLayer(type))\n      },\n      /**\n       * 重置地图尺寸，当容器的尺寸变化后需要执行resize\n       */\n      resize() {\n        this.map.updateSize()\n      },\n      /**\n       * 设置地图缩放等级\n       * @param {Number} level 等级数值\n       */\n      zoomTo(level) {\n        const view = this.map.getView()\n        view.animate({\n          zoom: Number.parseInt(level)\n        })\n      },\n\n      /**\n       * 逐步放大\n       */\n      zoomIn() {\n        const view = this.map.getView()\n        this.zoomTo(view.getZoom() + 1)\n      },\n\n      /**\n       * 逐步缩小\n       */\n      zoomOut() {\n        const view = this.map.getView()\n        this.zoomTo(view.getZoom() - 1)\n      },\n      /**\n       * 移动到指定经纬度居中\n       * @param {Array} loc 经纬度数组\n       */\n      moveTo(loc) {\n        const view = this.map.getView()\n        view.animate({\n          center: loc\n        })\n      }\n    },\n    created() {\n      // 标记是地图组件\n      this.isMap = true\n\n      /**\n       * 图形绑定的事件集合，存储格式：\n       * { click: [{type, feature, listener, uid}, ...], movestart: [..]}\n       * type: 事件类型\n       * feature：触发的图形对象\n       * listener： Vue组件绑定的事件句柄\n       * uid: Vue组件实例id\n       */\n      this._featureEvents = {}\n\n      // 初始化图层瓦片服务配置\n      this.layerConfig().then(layers => {\n        setLayerConfig(layers)\n      })\n    },\n    mounted() {\n      const layer = createLayer(this.type)\n      const view = new View({\n        projection: 'EPSG:4326',\n        center: this.center,\n        zoom: this.zoom,\n        maxZoom: this.maxZoom,\n        minZoom: this.minZoom\n      })\n      this.map = new Map({\n        layers: [layer],\n        target: this.$refs.map,\n        view: view,\n        // 删除默认的控件\n        controls: []\n      })\n\n      /**\n       * @event ready\n       * 地图初始化完成\n       */\n      this.$emit('ready', this.map, this)\n\n      // 绑定地图事件\n      Object.keys(this.$listeners).forEach(key => {\n        this.map.on(key, this.$listeners[key])\n      })\n    },\n    beforeDestroy() {\n      // 销毁地图事件\n      Object.keys(this.$listeners).forEach(key => {\n        this.map.un(key, this.$listeners[key])\n      })\n      // 销毁地图\n      this.map && this.map.disposeInternal()\n    }\n  }\n</script>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./map.vue?vue&type=template&id=79a2a374&\"\nimport script from \"./map.vue?vue&type=script&lang=js&\"\nexport * from \"./map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Map from './src/map'\n\nMap.install = function (Vue) {\n  Vue.component(Map.name, Map)\n}\nexport default Map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"xdh-map-text hidden\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","import {Atlas, AtlasManager, Circle, Fill, Icon, IconImage, Image, RegularShape, Stroke, Style, Text} from 'ol/style'\n\n/**\n * style json对象解析，通过传入json格式数据解析成Style实例\n * @param {Object} options ,json数据，去匹配转化成Style实例,\n * 其中每个实例节点需要有className属性，为字符串，className包括:\n * Atlas/AtlasManager/Circle/Fill/Icon/IconImage/Image/RegularShape/Stroke/Style/Text\n * 分别匹配Style对应的对象实例，其余属性，为对象实例化时传入的对象；\n * 如果没有包含className的对象属性，则直接返回该对象。\n * 如：{\n *   className: 'Style',\n *   fill: {\n *     className: 'Fill',\n *     color: 'rgba(255, 255, 255, 0.2)'\n *   },\n *   stroke: {\n *     className: 'Stroke',\n *     color: '#ffcc33',\n *     width: 2\n *   },\n *   image: {\n *     className: 'Circle',\n *     radius: 7,\n *     fill: {\n *       className: 'Fill',\n *       color: '#ffcc33'\n *     }\n *   }\n * }\n * 解析后等同于\n *  new Style({\n *    fill: new Fill({\n *      color: 'rgba(255, 255, 255, 0.2)'\n *    }),\n *    stroke: new Stroke({\n *      color: '#ffcc33',\n *      width: 2\n *    }),\n *    image: new Circle({\n *      radius: 7,\n *      fill: new Fill({\n *        color: '#ffcc33'\n *      })\n *    })\n *  })\n */\n\nconst StyleMap = {Atlas, AtlasManager, Circle, Fill, Icon, IconImage, Image, RegularShape, Stroke, Style, Text}\n\nexport function parse(options) {\n  if (options && options.className && StyleMap[options.className]) {\n    let childOptions = {};\n    Object.keys(options).map(v => {\n      if (v !== 'className') {\n        if (typeof options[v] === 'object' && options[v].className) {\n          childOptions[v] = parse(options[v]);\n        } else {\n          childOptions[v] = options[v];\n        }\n      }\n    });\n    return new StyleMap[options.className](childOptions)\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","import {parse} from './style'\n\nconst BASE_TYPES = [Array, String, Boolean, Object, Function]\n\n/**\n * capitalize('fooBar'); // 'FooBar'\n * capitalize('fooBar', true); // 'Foobar'\n */\nexport function capitalize([first, ...rest], lowerRest = false) {\n  return first.toUpperCase() + (lowerRest ? rest.join('').toLowerCase() : rest.join(''))\n}\n\n/**\n * 给选项对象的字段名称增加前缀\n * @param name\n * @param options\n *\n * @example\n * stroke: {color: 'red'} => {strokeColor: 'red'}\n */\nexport function prefix(name, options) {\n  let result = {}\n  Object.keys(options).forEach(key => {\n    const fixName = name + capitalize(key)\n    result[fixName] = options[key]\n  })\n  return result\n}\n\n/**\n * 选项对象增加前缀后对应关系\n * @param name\n * @param options\n *\n * @example\n * stroke: {color: 'red'} => {color：'strokeColor'}\n */\nexport function keyMap(name, options) {\n  let result = {}\n  Object.keys(options).forEach(key => {\n    result[key] = name + capitalize(key)\n  })\n  return result\n}\n\n/**\n * 混合组件，生成Style描述JSON\n * @param {VueComponent} mv vue组件实例\n * @param name\n * @param options\n */\nexport function mix(mv, name, options) {\n  let result = {}\n  let map = keyMap(name, options)\n  Object.keys(options).forEach(key => {\n    result[key] = mv[map[key]]\n  })\n  return result\n}\n\n/**\n * 图形生成style\n * @return {*}\n */\nexport function featureStyleRender() {\n  return parse({\n    ...this.baseStyleRender(),\n    fill: {\n      className: 'Fill',\n      color: this.fill\n    },\n    stroke: this.strokeRender(),\n    text: this.textRender()\n  })\n}\n\n/**\n * 合并组件的props\n * @return {any}\n */\nexport function mixProps() {\n  const propsArray = Array.from(arguments).map(item => item.props || {})\n  const props = Object.assign({}, ...propsArray)\n  const fixedProps = Object.create(null)\n  Object.entries(props).forEach(item => {\n    const key = item[0]\n    fixedProps[key] = BASE_TYPES.includes(item[1]) ? {type: item[1]} : item[1]\n  })\n  return fixedProps\n}\n\n/**\n * 获取组件的父级的地图组件\n * @return {*|Vue}\n */\nexport function getParent() {\n  let parent = this.$parent\n  while (parent && !parent.isMap) {\n    parent = parent.$parent\n  }\n  return parent\n}\n\n/**\n * 地图初始化完成回调\n * @param callback\n */\nexport function mapReady(callback) {\n  // 先检查父组件的地图是否初始化完成\n  if (this.parent && this.parent.map) {\n    callback(this.parent.map, this.parent)\n    return\n  }\n  // 父组件地图未初始化，侦听完成事件\n  this.parent.$once('ready', (map, vm) => {\n    callback(map, vm)\n  })\n}\n\n","import Feature from 'ol/Feature'\nimport {getParent, mapReady} from 'utils/util'\n\nexport default {\n  methods: {\n    /**\n     * 在地图上画图形\n     */\n    draw() {\n      // createGeometry 方法由父类实现\n      const geometry = this.createGeometry()\n      this.feature = new Feature(geometry)\n      this.setStyle()\n      // 在图形实例记录当前vue组件的实例引用，方便从事件中取会vue组件实例\n      this.feature._vm = this\n      // 在图层上画图形\n      if (this.parent) {\n        this.parent.addFeature(this.feature)\n        this.parent.bindEvents(this)\n      }\n      // 绘制完成事件\n      this.$emit('draw', this.feature)\n    },\n    /**\n     * 更新图形对象，不包括图形样式\n     */\n    update() {\n      if (!this.feature) return\n      \n      const geometry = this.createGeometry()\n      // 更新图形\n      this.feature.setGeometry(geometry)\n      \n      // 更新完成事件\n      this.$emit('update', this.feature)\n    },\n    /**\n     * 更新图形样式\n     */\n    setStyle() {\n      // createStyle 方法由父类实现\n      const style = this.createStyle()\n      this.feature && this.feature.setStyle(style)\n    },\n    /**\n     * 重画图形，包括图形对象和样式\n     */\n    redraw() {\n      this.update()\n      this.setStyle()\n    }\n  },\n  created() {\n    // 获取地图组件实例\n    this.parent = getParent.call(this)\n  },\n  mounted() {\n    mapReady.call(this, this.draw)\n  },\n  beforeDestroy() {\n    if (this.parent && this.feature) {\n      this.feature._vm = null\n      this.feature.disposeInternal()\n      this.parent.removeFeature(this.feature)\n      this.parent.unbindEvents(this)\n    }\n  }\n  \n}\n","/**\n *  Vue组件公共参数\n */\nexport default {\n  props: {\n    // 经纬度坐标\n    position: Array,\n    // 层级\n    zIndex: Number,\n    // 填充颜色\n    fill: String\n  },\n  watch: {\n    position: {\n      deep: true,\n      handler() {\n        // 方法在 utils/feature.js 中定义\n        this.update()\n      }\n    }\n  },\n  computed: {\n    coordinate() {\n      // 转换坐标的数组类型\n      return this.position.map(n => Number.parseFloat(n))\n    }\n  },\n  methods: {\n    baseStyleRender() {\n      return {\n        className: 'Style',\n        zIndex: this.zIndex,\n        fill: this.fill\n      }\n    }\n  }\n}\n","import {prefix, mix} from '../util';\n\nconst options = {\n  color: {\n    type: String,\n    default: 'transparent'\n  },\n  lineCap: String,\n  lineJoin: String,\n  lineDash: Array,\n  lineDashOffset: Number,\n  miterLimit: Number,\n  width: Number\n}\n\nconst prefixOptions = prefix('stroke', options)\nexport default {\n  props: {\n    ...prefixOptions\n  },\n  methods: {\n    strokeRender() {\n      return {\n        className: 'Stroke',\n        ...mix(this, 'stroke', options)\n      }\n    }\n  }\n}\n","/**\n * 文本公共属性\n */\nexport default {\n  props: {\n    text: String,\n    color: String,\n    font: String,\n    background: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  computed: {\n    fontWithFamily() {\n      return `${this.font} sans-serif`\n    }\n  },\n  watch: {\n    /**\n     * 文本变化更新图形样式\n     */\n    text() {\n      this.setStyle()\n    }\n  },\n  methods: {\n    textRender() {\n      return {\n        className: 'Text',\n        text: this.text,\n        font: this.fontWithFamily,\n        fill: {\n          className: 'Fill',\n          color: this.color\n        },\n        backgroundFill: {\n          className: 'Fill',\n          color: this.background\n        }\n      }\n    }\n  }\n}\n","export default {\n  mounted() {\n    // 组件不需要生成html节点\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el)\n      this.$el = null\n    }\n    \n  }\n}\n","/**\n * Vue组件基础类型的参数构建\n * @param options\n * @return {{props: {}, methods: {styleFactory(): *}}}\n */\nexport default function (options) {\n  return {\n    props: {\n      ...options\n    },\n    methods: {\n      styleFactory() {\n        let style = {}\n        Object.keys(options).forEach(key => {\n          style[key] = this[key]\n        })\n        return style\n      }\n    }\n  }\n}\n","<template>\n  <div class=\"xdh-map-text hidden\"></div>\n</template>\n\n<script>\n  import {parse} from 'utils/style'\n  import Point from 'ol/geom/Point'\n  import FeatureMixin from 'utils/mixins/feature'\n  import BaseMixin from 'utils/mixins/base'\n  import StrokeMixin from 'utils/mixins/stroke'\n  import TextMixin from 'utils/mixins/text'\n  import CleanMixin from 'utils/mixins/clean'\n  import factory from 'utils/mixins/factory'\n  import {mixProps} from 'utils/util'\n\n  const options = {\n    maxAngle: Number,\n    offsetX: Number,\n    offsetY: Number,\n    overflow: Boolean,\n    scale: Number,\n    rotateWithView: Boolean,\n    rotation: Number,\n    textAlign: String,\n    textBaseline: String,\n    padding: Array\n  }\n  const factoryMixin = factory(options)\n\n  const vueProps = {\n    // 经纬度坐标\n    position: {\n      type: Array,\n      required: true\n    }\n  }\n\n  export const props = mixProps({props: vueProps}, BaseMixin, StrokeMixin, TextMixin, factoryMixin)\n\n  export default {\n    name: 'XdhMapText',\n    mixins: [FeatureMixin, BaseMixin, StrokeMixin, TextMixin, factoryMixin, CleanMixin],\n    props: props,\n    methods: {\n      createStyle() {\n        return parse({\n          ...this.baseStyleRender(),\n          text: {\n            ...this.textRender(),\n            backgroundStroke: this.strokeRender(),\n            ...this.styleFactory()\n          }\n        })\n      },\n      createGeometry() {\n        return new Point(this.coordinate)\n      }\n\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./text.vue?vue&type=template&id=60e5a8fa&\"\nimport script from \"./text.vue?vue&type=script&lang=js&\"\nexport * from \"./text.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Text from './src/text'\n\nText.install = function (Vue) {\n  Vue.component(Text.name, Text)\n}\nexport default Text\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('xdh-map-polygon',_vm._b({ref:\"polygon\",attrs:{\"coordinates\":_vm.coords},on:{\"draw\":_vm.handleDraw}},'xdh-map-polygon',_vm.$props,false))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div></div>\n</template>\n\n<script>\n  import Polygon from 'ol/geom/Polygon'\n  import {featureStyleRender, mixProps} from 'utils/util'\n  import FeatureMixin from 'utils/mixins/feature'\n  import BaseMixin from 'utils/mixins/base'\n  import StrokeMixin from 'utils/mixins/stroke'\n  import TextMixin from 'utils/mixins/text'\n  import CleanMixin from 'utils/mixins/clean'\n\n  const vueProps = {\n    // 坐标数组\n    coordinates: {\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  }\n\n  export const props = mixProps({props: vueProps}, BaseMixin, StrokeMixin, TextMixin)\n\n  // 多边形不需要 position 参数\n  delete props.position\n\n  export default {\n    name: 'XdhMapPolygon',\n    mixins: [FeatureMixin, BaseMixin, StrokeMixin, TextMixin, CleanMixin],\n    props: props,\n    watch: {\n      coordinates() {\n        this.update()\n      }\n    },\n    methods: {\n      createStyle() {\n        return featureStyleRender.call(this)\n      },\n      createGeometry() {\n        return new Polygon([this.coordinates])\n      }\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./polygon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./polygon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./polygon.vue?vue&type=template&id=31041c7f&\"\nimport script from \"./polygon.vue?vue&type=script&lang=js&\"\nexport * from \"./polygon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <xdh-map-polygon ref=\"polygon\" v-bind=\"$props\" :coordinates=\"coords\" @draw=\"handleDraw\"></xdh-map-polygon>\n</template>\n\n<script>\n\n  import XdhMapPolygon from '../../polygon/src/polygon'\n  import CleanMixin from 'utils/mixins/clean'\n  import {mixProps} from 'utils/util'\n\n  const vueProps = {\n    // 宽度经纬度距离\n    width: {\n      type: Number,\n      default: 0,\n      required: true\n    },\n    // 高度经纬度距离\n    height: {\n      type: Number,\n      default: 0,\n      required: true\n    }\n  }\n  export const props = mixProps({props: vueProps}, XdhMapPolygon)\n  // 矩形不需要 coordinates\n  delete props.coordinates\n\n  // 左上角为开始点\n  export default {\n    name: 'XdhMapRectangle',\n    mixins: [CleanMixin],\n    components: {\n      XdhMapPolygon\n    },\n    props: props,\n    computed: {\n      coords() {\n        const loc = (this.$attrs.position || []).map(n => Number.parseFloat(n))\n        return [\n          loc,\n          [loc[0] + this.width, loc[1]],\n          [loc[0] + this.width, loc[1] - this.height],\n          [loc[0], loc[1] - this.height],\n          loc\n        ]\n      }\n    },\n    methods: {\n      handleDraw(feature) {\n        this.feature = feature\n      }\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rectangle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rectangle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./rectangle.vue?vue&type=template&id=4ae1176a&\"\nimport script from \"./rectangle.vue?vue&type=script&lang=js&\"\nexport * from \"./rectangle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Rectangle from './src/rectangle'\n\nRectangle.install = function (Vue) {\n  Vue.component(Rectangle.name, Rectangle)\n}\nexport default Rectangle\n","import Polygon from './src/polygon'\n\nText.install = function (Vue) {\n  Vue.component(Polygon.name, Polygon)\n}\nexport default Polygon\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","<template>\n  <div></div>\n</template>\n\n<script>\n  import Circle from 'ol/geom/Circle'\n  import {featureStyleRender, mixProps} from 'utils/util'\n  import FeatureMixin from 'utils/mixins/feature'\n  import BaseMixin from 'utils/mixins/base'\n  import StrokeMixin from 'utils/mixins/stroke'\n  import TextMixin from 'utils/mixins/text'\n  import CleanMixin from 'utils/mixins/clean'\n\n  const vueProps = {\n    // 半径\n    radius: {\n      type: Number,\n      required: true\n    }\n  }\n\n  export const props = mixProps({props: vueProps}, BaseMixin, StrokeMixin, TextMixin)\n\n  export default {\n    name: 'XdhMapCircle',\n    mixins: [FeatureMixin, BaseMixin, StrokeMixin, TextMixin, CleanMixin],\n    props: props,\n    watch: {\n      radius() {\n        this.update()\n      }\n    },\n    methods: {\n      createStyle() {\n        return featureStyleRender.call(this)\n      },\n      createGeometry() {\n        return new Circle(this.coordinate, this.radius)\n      }\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./circle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./circle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./circle.vue?vue&type=template&id=85abfdb0&\"\nimport script from \"./circle.vue?vue&type=script&lang=js&\"\nexport * from \"./circle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Circle from './src/circle'\n\nCircle.install = function (Vue) {\n  Vue.component(Circle.name, Circle)\n}\nexport default Circle\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","<template>\n  <div></div>\n</template>\n\n<script>\n  import LineString from 'ol/geom/LineString'\n  import Point from 'ol/geom/Point'\n  import {featureStyleRender, mixProps} from 'utils/util'\n  import FeatureMixin from 'utils/mixins/feature'\n  import BaseMixin from 'utils/mixins/base'\n  import StrokeMixin from 'utils/mixins/stroke'\n  import TextMixin from 'utils/mixins/text'\n  import CleanMixin from 'utils/mixins/clean'\n  import {parse} from 'utils/style'\n\n  const vueProps = {\n    // 坐标数组\n    coordinates: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    // 箭头图片url\n    arrow: {\n      type: String\n    },\n    // 箭头位置偏移\n    arrowAnchor: {\n      type: Array,\n      default() {\n        return [0.75, 0.5]\n      }\n    },\n    // 每段线条都加箭头\n    arrowEach: {\n      type: Boolean\n    }\n  }\n\n  const props = mixProps({props: vueProps}, BaseMixin, StrokeMixin, TextMixin)\n\n  // 线条形不需要 position 参数\n  delete props.position\n\n  export default {\n    name: 'XdhMapLine',\n    mixins: [FeatureMixin, BaseMixin, StrokeMixin, TextMixin, CleanMixin],\n    props: props,\n    watch: {\n      coordinates() {\n        this.update()\n      }\n    },\n    methods: {\n      arrowStyle(start, end) {\n        const dx = end[0] - start[0];\n        const dy = end[1] - start[1];\n        const rotation = Math.atan2(dy, dx);\n        return parse({\n          className: 'Style',\n          geometry: new Point(end),\n          image: {\n            className: 'Icon',\n            src: this.arrow,\n            anchor: this.arrowAnchor,\n            rotateWithView: true,\n            rotation: -rotation\n          }\n        })\n      },\n      lastSegment() {\n        const length = this.coordinates.length\n        if (length >= 2) {\n          return this.arrowStyle(this.coordinates[length - 2], this.coordinates[length - 1])\n        }\n      },\n      createStyle() {\n        const feature = this.feature\n        const geometry = feature.getGeometry()\n        let styles = [featureStyleRender.call(this)]\n        if (this.arrow) {\n          if (this.arrowEach) {\n            geometry.forEachSegment((start, end) => {\n              styles.push(this.arrowStyle(start, end))\n            })\n          } else {\n            styles.push(this.lastSegment())\n          }\n        }\n        return styles\n      },\n      createGeometry() {\n        return new LineString(this.coordinates)\n      }\n    }\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./line.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./line.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./line.vue?vue&type=template&id=4fcb5a61&\"\nimport script from \"./line.vue?vue&type=script&lang=js&\"\nexport * from \"./line.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Line from './src/line'\n\nLine.install = function (Vue) {\n  Vue.component(Line.name, Line)\n}\nexport default Line\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"xdh-map-placement\",class:_vm.placement,style:(_vm.styles)},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"xdh-map-placement\"\n       :class=\"placement\"\n       :style=\"styles\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\n\n  export default {\n    name: 'placement',\n    props: {\n      placement: {\n        type: String,\n        default: 'left-bottom',\n        validator(val) {\n          return [\n            'left-top', 'center-top', 'right-top',\n            'left-center', 'center-center', 'right-center',\n            'left-bottom', 'center-bottom', 'right-bottom'\n          ].includes(val)\n        }\n      },\n      zIndex: {\n        type: Number,\n        default: 1\n      },\n      margin: {\n        type: Array,\n        default() {\n          return [0, 0, 0, 0]\n        }\n      }\n    },\n    computed: {\n      styles() {\n        return {\n          zIndex: this.zIndex,\n          margin: this.margin.map(n => `${n}px`).join(' ')\n        }\n      }\n    }\n  }\n</script>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./placement.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./placement.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./placement.vue?vue&type=template&id=1c74675d&\"\nimport script from \"./placement.vue?vue&type=script&lang=js&\"\nexport * from \"./placement.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Placement from './src/placement'\n\nPlacement.install = function (Vue) {\n  Vue.component(Placement.name, Placement)\n}\nexport default Placement\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('xdh-map-placement',_vm._b({staticClass:\"xdh-map-pointer\"},'xdh-map-placement',_vm.$props,false),[_c('div',{ref:\"btn\",staticClass:\"xdh-map-pointer__btn\",class:{'is-lock':_vm.lock},attrs:{\"title\":\"点击复制\"},on:{\"click\":_vm.copy}},[_vm._v(_vm._s(_vm.coordinate.join(', '))+\"\\n  \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <xdh-map-placement class=\"xdh-map-pointer\" v-bind=\"$props\">\n    <div ref=\"btn\"\n         class=\"xdh-map-pointer__btn\"\n         @click=\"copy\"\n         :class=\"{'is-lock':lock}\"\n         title=\"点击复制\">{{coordinate.join(', ')}}\n    </div>\n  </xdh-map-placement>\n</template>\n\n<script>\n  import Clipboard from 'clipboard'\n  import XdhMapPlacement from '../../placement'\n  import {mixProps, getParent, mapReady} from 'utils/util'\n\n  const vueProps = {\n    // 精度，保留几位小数\n    precision: {\n      type: Number,\n      default: 6\n    }\n  }\n  const props = mixProps({props: vueProps}, XdhMapPlacement)\n\n  export default {\n    name: 'XdhMapPointer',\n    components: {\n      XdhMapPlacement\n    },\n    props: props,\n    data() {\n      return {\n        coordinate: [0, 0],\n        lock: false\n      }\n    },\n    methods: {\n      ready(map, vm) {\n        this.coordinate = vm.center\n        map.on('pointermove', this.move)\n        map.on('click', this.pick)\n        this.map = map\n      },\n      update(e) {\n        this.coordinate = e.coordinate.map(n => n.toFixed(this.precision))\n      },\n      move(e) {\n        if (this.lock) return\n        this.update(e)\n      },\n      pick(e) {\n        this.lock = true\n        this.update(e)\n      },\n      copy() {\n        this.$emit('copy', this.coordinate)\n        this.lock = false\n      }\n    },\n    created() {\n      // 获取地图组件实例\n      this.parent = getParent.call(this)\n    },\n    mounted() {\n      this.clipboard = new Clipboard(this.$refs.btn, {\n        text: e => {\n          return this.coordinate.join(', ')\n        }\n      });\n      this.clipboard.on('success', this.copy)\n      mapReady.call(this, this.ready)\n    },\n    beforeDestroy() {\n      this.clipboard && this.clipboard.destroy()\n      if (this.map) {\n        this.map.un('pointermove', this.move)\n        this.map.un('click', this.pick)\n      }\n    }\n  }\n</script>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pointer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pointer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./pointer.vue?vue&type=template&id=733569cf&\"\nimport script from \"./pointer.vue?vue&type=script&lang=js&\"\nexport * from \"./pointer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Pointer from './src/pointer'\n\nPointer.install = function (Vue) {\n  Vue.component(Pointer.name, Pointer)\n}\nexport default Pointer\n","import Map from './map'\nimport Text from './text'\nimport Rectangle from './rectangle'\nimport Polygon from './polygon'\nimport Circle from './circle'\nimport Line from './line'\nimport Placement from './placement'\nimport Pointer from './pointer'\nimport '../theme/index.scss'\n\nconst components = [\n  Map,\n  Text,\n  Rectangle,\n  Polygon,\n  Circle,\n  Line,\n  Placement,\n  Pointer\n]\n\nconst install = function (Vue) {\n  if (install.installed) return\n  \n  components.forEach(component => Vue.component(component.name, component))\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue)\n}\n\nexport default {\n  install,\n  ...components\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}